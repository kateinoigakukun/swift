; ModuleID = '_XCTest.ll'
source_filename = "_XCTest.ll"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9.0"

%0 = type opaque
%1 = type opaque
%2 = type opaque
%3 = type opaque
%4 = type opaque
%5 = type opaque
%6 = type opaque
%7 = type opaque
%8 = type opaque
%9 = type opaque
%10 = type opaque
%11 = type opaque
%12 = type opaque
%13 = type opaque
%14 = type opaque
%15 = type opaque
%16 = type opaque
%17 = type opaque
%18 = type opaque
%19 = type opaque
%20 = type opaque
%21 = type opaque
%22 = type opaque
%23 = type opaque
%24 = type opaque
%T14StdlibUnittest9TestSuiteC = type opaque
%swift.protocol_conformance_descriptor = type { i64, i64, i64, i32 }
%swift.type = type { i64 }
%swift.type_descriptor = type opaque
%objc_class = type { %objc_class*, %objc_class*, %swift.opaque*, %swift.opaque*, i64 }
%swift.opaque = type opaque
%swift.method_descriptor = type { i32, i64 }
%T7_XCTest26FailureDescriptionObserverC = type <{ %objc_class*, %TSSSg }>
%TSSSg = type <{ [16 x i8] }>
%TSo10XCTestCaseC = type <{ %objc_class* }>
%swift.bridge = type opaque
%T7_XCTestyycfU_17ExceptionTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU0_19AssertEqualTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU4_19AssertEqualTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU5_13ErrorTestCaseL_C = type <{ %objc_class*, %TSb, [7 x i8], %TSi }>
%TSb = type <{ i1 }>
%TSi = type <{ i64 }>
%T7_XCTestyycfU6_13ErrorTestCaseL_C = type <{ %objc_class*, %TSb, [7 x i8], %TSi }>
%T7_XCTestyycfU7_13ErrorTestCaseL_C = type <{ %objc_class*, %TSb, [7 x i8], %TSi }>
%T7_XCTestyycfU8_13ErrorTestCaseL_C = type <{ %objc_class*, %TSb, [7 x i8], %TSi }>
%T7_XCTestyycfU9_19RunActivityTestCaseL_C = type <{ %objc_class* }>
%T7_XCTestyycfU10_15TypeKeyTestCaseL_C = type <{ %objc_class* }>
%swift.full_type = type { i8**, %swift.type }
%swift.full_boxmetadata = type { void (%swift.refcounted*)*, i8**, %swift.type, i32, i8* }
%swift.refcounted = type { %swift.type*, i64 }
%swift.protocol = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i64, i64 }
%swift.protocol_requirement = type { i32, i64 }
%swift.type_metadata_record = type { i64 }
%swift.metadata_response = type { %swift.type*, i64 }
%TSo17XCTestObservationP = type { %objc_object* }
%objc_object = type opaque
%swift.noescape.function = type { i8*, %swift.opaque* }
%Ts16IndexingIteratorVySaySo17XCTestObservation_pGG = type <{ %TSa, %TSi }>
%TSa = type <{ %Ts12_ArrayBufferV }>
%Ts12_ArrayBufferV = type <{ %Ts14_BridgeStorageV }>
%Ts14_BridgeStorageV = type <{ %swift.bridge* }>
%TSo17XCTestObservation_pSg = type <{ [8 x i8] }>
%Ts16IndexingIteratorV = type <{}>
%TSq.1 = type <{}>
%Ts16IndexingIteratorV.2 = type <{}>
%TSo23XCTestObservationCenterC = type opaque
%"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame" = type { [24 x i8] }
%TSS = type <{ %Ts11_StringGutsV }>
%Ts11_StringGutsV = type <{ %Ts13_StringObjectV }>
%Ts13_StringObjectV = type <{ %Ts6UInt64V, %swift.bridge* }>
%Ts6UInt64V = type <{ i64 }>
%TSo8NSStringC = type opaque
%objc_super = type { %objc_object*, %objc_class* }
%TSo8NSObjectC = type <{ %objc_class* }>
%TSo9XCTestRunC = type opaque
%Ts4Int8V = type <{ i8 }>
%swift.vwtable = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i64, i32, i32 }
%TSo6XCTestC = type opaque
%TSo11NSExceptionC = type opaque
%TSo12NSDictionaryC = type opaque
%swift.error = type opaque
%TSiSg = type <{ [8 x i8], [1 x i8] }>
%TSD = type <{ %TSD8_VariantV }>
%TSD8_VariantV = type <{ %Ts14_BridgeStorageV }>
%Any = type { [24 x i8], %swift.type* }
%TSd = type <{ double }>
%"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame" = type { [24 x i8] }
%"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame" = type { [24 x i8] }
%TSo7NSErrorC = type opaque
%TSo7NSErrorCSg = type <{ [8 x i8] }>
%"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame" = type { [24 x i8] }
%"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame" = type { [24 x i8] }
%"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame" = type { [24 x i8] }
%"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame" = type { [24 x i8] }
%"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame" = type { [24 x i8] }
%"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame" = type { [24 x i8] }
%TSo20XCUIKeyModifierFlagsV = type <{ %TSu }>
%TSu = type <{ i64 }>
%TSo15XCUIApplicationC = type opaque
%TSo11XCUIElementC = type opaque
%TSo15XCUIKeyboardKeya = type <{ %TSo8NSStringC* }>
%TSo20XCUIKeyModifierFlagsVSg = type <{ [8 x i8], [1 x i8] }>
%TSq.3 = type <{}>

@"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" = hidden global %T14StdlibUnittest9TestSuiteC* null, align 8
@XCUIKeyboardKeyDelete = external constant %0*, align 8
@0 = private constant [7 x i8] c"XCTest\00"
@1 = private unnamed_addr constant [11 x i8] c"exceptions\00"
@2 = private unnamed_addr constant [77 x i8] c"/Users/katei/projects/swift-source/swift/validation-test/stdlib/XCTest.swift\00"
@3 = private unnamed_addr constant [17 x i8] c"XCTAssertEqual/T\00"
@4 = private unnamed_addr constant [27 x i8] c"XCTAssertEqual/Optional<T>\00"
@5 = private unnamed_addr constant [24 x i8] c"XCTAssertEqual/Array<T>\00"
@6 = private unnamed_addr constant [32 x i8] c"XCTAssertEqual/Dictionary<T, U>\00"
@7 = private unnamed_addr constant [44 x i8] c"XCTAssertEqual/XCTAssertNotEqual + accuracy\00"
@8 = private unnamed_addr constant [21 x i8] c"XCTAssertThrowsError\00"
@9 = private unnamed_addr constant [17 x i8] c"XCTAssertNoThrow\00"
@10 = private unnamed_addr constant [37 x i8] c"XCTAsserts with throwing expressions\00"
@11 = private unnamed_addr constant [35 x i8] c"Test methods that wind up throwing\00"
@12 = private unnamed_addr constant [37 x i8] c"XCTContext/runActivity(named:block:)\00"
@13 = private unnamed_addr constant [38 x i8] c"XCUIElement/typeKey(_:modifierFlags:)\00"
@_PROTOCOL_XCTestObservation = private constant { i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, { i32, i32, [8 x { i8*, i8*, i8* }] }*, i8*, i8*, i32, i32, [8 x i8*]*, i8*, i8* } { i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @84, i64 0, i64 0), { i64, [1 x i8*] }* @_PROTOCOL_PROTOCOLS_XCTestObservation, i8* null, i8* null, { i32, i32, [8 x { i8*, i8*, i8* }] }* @_PROTOCOL_INSTANCE_METHODS_OPT_XCTestObservation, i8* null, i8* null, i32 96, i32 0, [8 x i8*]* @_PROTOCOL_METHOD_TYPES_XCTestObservation, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_LABEL_PROTOCOL_$_XCTestObservation" = weak hidden global i8* bitcast ({ i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, { i32, i32, [8 x { i8*, i8*, i8* }] }*, i8*, i8*, i32, i32, [8 x i8*]*, i8*, i8* }* @_PROTOCOL_XCTestObservation to i8*), section "__DATA,__objc_protolist,coalesced,no_dead_strip", align 8
@"\01l_OBJC_PROTOCOL_REFERENCE_$_XCTestObservation" = weak hidden global i8* bitcast ({ i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, { i32, i32, [8 x { i8*, i8*, i8* }] }*, i8*, i8*, i32, i32, [8 x i8*]*, i8*, i8* }* @_PROTOCOL_XCTestObservation to i8*), section "__DATA,__objc_protorefs,coalesced,no_dead_strip", align 8
@"symbolic So17XCTestObservation_p" = linkonce_odr hidden constant <{ [23 x i8], i8 }> <{ [23 x i8] c"So17XCTestObservation_p", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo17XCTestObservation_pMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [23 x i8], i8 }>* @"symbolic So17XCTestObservation_p" to i64), i32 -23 }, align 8
@"symbolic SaySo17XCTestObservation_pG" = linkonce_odr hidden constant <{ [27 x i8], i8 }> <{ [27 x i8] c"SaySo17XCTestObservation_pG", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSaySo17XCTestObservation_pGMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [27 x i8], i8 }>* @"symbolic SaySo17XCTestObservation_pG" to i64), i32 -27 }, align 8
@"$sSaySo17XCTestObservation_pGSayxGSlsWL" = linkonce_odr hidden global i8** null, align 8
@"$sSayxGSlsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSaySo17XCTestObservation_pGML" = linkonce_odr hidden global %swift.type* null, align 8
@"$sSo17XCTestObservation_pML" = linkonce_odr hidden global %swift.type* null, align 8
@"$ss16IndexingIteratorVMn" = external global %swift.type_descriptor, align 4
@"got.$ss16IndexingIteratorVMn" = private unnamed_addr constant %swift.type_descriptor* @"$ss16IndexingIteratorVMn"
@"symbolic _____ySaySo17XCTestObservation_pGG s16IndexingIteratorV" = linkonce_odr hidden constant <{ i8, i64, [29 x i8], i8 }> <{ i8 2, i64 ptrtoint (%swift.type_descriptor** @"got.$ss16IndexingIteratorVMn" to i64), [29 x i8] c"ySaySo17XCTestObservation_pGG", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$ss16IndexingIteratorVySaySo17XCTestObservation_pGGMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ i8, i64, [29 x i8], i8 }>* @"symbolic _____ySaySo17XCTestObservation_pGG s16IndexingIteratorV" to i64), i32 -34 }, align 8
@"OBJC_CLASS_REF_$_XCTestObservationCenter" = private externally_initialized global %objc_class* @"OBJC_CLASS_$_XCTestObservationCenter", section "__DATA,__objc_classrefs,regular,no_dead_strip", align 8
@"OBJC_CLASS_$_XCTestObservationCenter" = external global %objc_class, align 8
@"\01L_selector_data(sharedTestObservationCenter)" = private global [28 x i8] c"sharedTestObservationCenter\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(sharedTestObservationCenter)" = private externally_initialized global i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(sharedTestObservationCenter)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(removeTestObserver:)" = private global [20 x i8] c"removeTestObserver:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(removeTestObserver:)" = private externally_initialized global i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(removeTestObserver:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(addTestObserver:)" = private global [17 x i8] c"addTestObserver:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(addTestObserver:)" = private externally_initialized global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(addTestObserver:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd" = hidden global i64 8, align 8
@swift_isaMask = external global i64
@"\01L_selector_data(dealloc)" = private global [8 x i8] c"dealloc\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(dealloc)" = private externally_initialized global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(dealloc)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(init)" = private global [5 x i8] c"init\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(init)" = private externally_initialized global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$sBOWV" = external global i8*, align 8
@"OBJC_METACLASS_$__TtC7_XCTest26FailureDescriptionObserver" = hidden global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_NSObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, i8* }* @_METACLASS_DATA__TtC7_XCTest26FailureDescriptionObserver to i64) }, align 8
@"OBJC_CLASS_$_NSObject" = external global %objc_class, align 8
@_objc_empty_cache = external global %swift.opaque
@"OBJC_METACLASS_$_NSObject" = external global %objc_class, align 8
@14 = private unnamed_addr constant [41 x i8] c"_TtC7_XCTest26FailureDescriptionObserver\00"
@_PROTOCOLS__TtC7_XCTest26FailureDescriptionObserver = private constant { i64, [1 x i8*] } { i64 1, [1 x i8*] [i8* bitcast ({ i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, { i32, i32, [8 x { i8*, i8*, i8* }] }*, i8*, i8*, i32, i32, [8 x i8*]*, i8*, i8* }* @_PROTOCOL_XCTestObservation to i8*)] }, section "__DATA, __objc_const", align 8
@_METACLASS_DATA__TtC7_XCTest26FailureDescriptionObserver = private constant { i32, i32, i32, i32, i8*, i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @14, i64 0, i64 0), i8* null, { i64, [1 x i8*] }* @_PROTOCOLS__TtC7_XCTest26FailureDescriptionObserver, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(testCase:didFailWithDescription:inFile:atLine:)" = private global [47 x i8] c"testCase:didFailWithDescription:inFile:atLine:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@15 = private unnamed_addr constant [20 x i8] c"v48@0:8@16@24@32q40\00"
@16 = private unnamed_addr constant [8 x i8] c"@16@0:8\00"
@"\01L_selector_data(.cxx_destruct)" = private global [14 x i8] c".cxx_destruct\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@17 = private unnamed_addr constant [8 x i8] c"v16@0:8\00"
@_INSTANCE_METHODS__TtC7_XCTest26FailureDescriptionObserver = private constant { i32, i32, [3 x { i8*, i8*, i8* }] } { i32 24, i32 3, [3 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"\01L_selector_data(testCase:didFailWithDescription:inFile:atLine:)", i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @15, i64 0, i64 0), i8* bitcast (void (%2*, i8*, %3*, %0*, %0*, i64)* @"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%2* (%2*, i8*)* @"$s7_XCTest26FailureDescriptionObserverCACycfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(.cxx_destruct)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%2*, i8*)* @"$s7_XCTest26FailureDescriptionObserverCfETo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_PROTOCOLS__TtC7_XCTest26FailureDescriptionObserver.1 = private constant { i64, [1 x i8*] } { i64 1, [1 x i8*] [i8* bitcast ({ i8*, i8*, { i64, [1 x i8*] }*, i8*, i8*, { i32, i32, [8 x { i8*, i8*, i8* }] }*, i8*, i8*, i32, i32, [8 x i8*]*, i8*, i8* }* @_PROTOCOL_XCTestObservation to i8*)] }, section "__DATA, __objc_const", align 8
@18 = private unnamed_addr constant [19 x i8] c"failureDescription\00"
@19 = private unnamed_addr constant [1 x i8] zeroinitializer
@_IVARS__TtC7_XCTest26FailureDescriptionObserver = private constant { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 1, [1 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd", i8* getelementptr inbounds ([19 x i8], [19 x i8]* @18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 3, i32 16 }] }, section "__DATA, __objc_const", align 8
@_DATA__TtC7_XCTest26FailureDescriptionObserver = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [3 x { i8*, i8*, i8* }] }*, { i64, [1 x i8*] }*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, i8* } { i32 388, i32 8, i32 24, i32 0, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @14, i64 0, i64 0), { i32, i32, [3 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtC7_XCTest26FailureDescriptionObserver, { i64, [1 x i8*] }* @_PROTOCOLS__TtC7_XCTest26FailureDescriptionObserver.1, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtC7_XCTest26FailureDescriptionObserver, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@20 = private constant [8 x i8] c"_XCTest\00"
@"$s7_XCTestMXM" = linkonce_odr hidden constant <{ i32, i64, i64 }> <{ i32 0, i64 0, i64 ptrtoint ([8 x i8]* @20 to i64) }>, section "__DATA,__const", align 4
@21 = private constant [27 x i8] c"FailureDescriptionObserver\00"
@"symbolic So8NSObjectC" = linkonce_odr hidden constant <{ [12 x i8], i8 }> <{ [12 x i8] c"So8NSObjectC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTest26FailureDescriptionObserverCMn" = hidden constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s7_XCTestMXM" to i64), i64 ptrtoint ([27 x i8]* @21 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTest26FailureDescriptionObserverCMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32, i32, i64, i64 }* @"$s7_XCTest26FailureDescriptionObserverCMF" to i64), i64 ptrtoint (<{ [12 x i8], i8 }>* @"symbolic So8NSObjectC" to i64), i32 2, i32 15, i32 5, i32 1, i32 10, i32 11, i32 4, %swift.method_descriptor { i32 18, i64 ptrtoint ({ i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM" to i64) }, %swift.method_descriptor { i32 16, i64 ptrtoint (void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitF" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTest26FailureDescriptionObserverCML" = internal global %swift.type* null, align 8
@"$s7_XCTest26FailureDescriptionObserverCMf" = internal global <{ void (%T7_XCTest26FailureDescriptionObserverC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, { i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)*, void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* }> <{ void (%T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverCfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtC7_XCTest26FailureDescriptionObserver" to i64), %objc_class* @"OBJC_CLASS_$_NSObject", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [3 x { i8*, i8*, i8* }] }*, { i64, [1 x i8*] }*, { i32, i32, [1 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, i8* }* @_DATA__TtC7_XCTest26FailureDescriptionObserver to i64), i64 1), i32 0, i32 0, i32 24, i16 7, i16 0, i32 136, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn", i8* null, i64 8, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvg", void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvs", { i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM", void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* @"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitF" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTest26FailureDescriptionObserverC" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"symbolic SSSg" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"SSSg", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@22 = private constant [19 x i8] c"failureDescription\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"$s7_XCTest26FailureDescriptionObserverCMF" = internal constant { i64, i64, i16, i16, i32, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTest26FailureDescriptionObserverC" to i64), i64 ptrtoint (<{ [12 x i8], i8 }>* @"symbolic So8NSObjectC" to i64), i16 7, i16 12, i32 1, i32 2, i64 ptrtoint (<{ [4 x i8], i8 }>* @"symbolic SSSg" to i64), i64 ptrtoint ([19 x i8]* @22 to i64) }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase to i64) }, align 8
@"OBJC_CLASS_$_XCTestCase" = external global %objc_class, align 8
@"OBJC_METACLASS_$_XCTestCase" = external global %objc_class, align 8
@23 = private unnamed_addr constant [42 x i8] c"_TtCF7_XCTestU_FT_T_L_17ExceptionTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @23, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_raises)" = private global [12 x i8] c"test_raises\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_raisesDuringAssertion)" = private global [27 x i8] c"test_raisesDuringAssertion\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_continueAfterFailureWithAssertions)" = private global [40 x i8] c"test_continueAfterFailureWithAssertions\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(initWithInvocation:)" = private global [20 x i8] c"initWithInvocation:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@24 = private unnamed_addr constant [11 x i8] c"@24@0:8@16\00"
@"\01L_selector_data(initWithSelector:)" = private global [18 x i8] c"initWithSelector:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@25 = private unnamed_addr constant [11 x i8] c"@24@0:8:16\00"
@_INSTANCE_METHODS__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase = private constant { i32, i32, [6 x { i8*, i8*, i8* }] } { i32 24, i32 6, [6 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_raises)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%7*, i8*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C11test_raisesyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"\01L_selector_data(test_raisesDuringAssertion)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%7*, i8*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"\01L_selector_data(test_continueAfterFailureWithAssertions)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%7*, i8*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%7* (%7*, i8*, %19*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%7* (%7*, i8*, i8*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%7* (%7*, i8*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [6 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @23, i64 0, i64 0), { i32, i32, [6 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s7_XCTestMXM" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU_17ExceptionTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU_MXX" to i64) }>, section "__DATA,__const", align 4
@26 = private constant [18 x i8] c"ExceptionTestCase\00"
@"symbolic So10XCTestCaseC" = linkonce_odr hidden constant <{ [15 x i8], i8 }> <{ [15 x i8] c"So10XCTestCaseC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMXX" to i64), i64 ptrtoint ([18 x i8]* @26 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 12, i32 2, i32 0, i32 10, i32 10, i32 2, %swift.method_descriptor { i32 16, i64 ptrtoint (void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyF" to i64) }, %swift.method_descriptor { i32 16, i64 ptrtoint (void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyF" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU_17ExceptionTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU_17ExceptionTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* }> <{ void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [6 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 112, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn", i8* null, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyF", void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyF" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU_17ExceptionTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU_17ExceptionTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU_17ExceptionTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase to i64) }, align 8
@27 = private unnamed_addr constant [45 x i8] c"_TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @27, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_whenEqual_passes)" = private global [22 x i8] c"test_whenEqual_passes\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_whenNotEqual_fails)" = private global [24 x i8] c"test_whenNotEqual_fails\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase = private constant { i32, i32, [5 x { i8*, i8*, i8* }] } { i32 24, i32 5, [5 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01L_selector_data(test_whenEqual_passes)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%8*, i8*)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"\01L_selector_data(test_whenNotEqual_fails)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%8*, i8*)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%8* (%8*, i8*, %19*)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%8* (%8*, i8*, i8*)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%8* (%8*, i8*)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @27, i64 0, i64 0), { i32, i32, [5 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU0_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU0_MXX" to i64) }>, section "__DATA,__const", align 4
@28 = private constant [20 x i8] c"AssertEqualTestCase\00"
@"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }> <{ i32 80, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMXX" to i64), i64 ptrtoint ([20 x i8]* @28 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 10, i32 0, i32 0, i32 10 }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU0_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }> <{ void (%T7_XCTestyycfU0_19AssertEqualTestCaseL_C*)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 96, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMn", i8* null }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU0_19AssertEqualTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU0_19AssertEqualTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase to i64) }, align 8
@29 = private unnamed_addr constant [53 x i8] c"_TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @29, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_whenOptionalsAreEqual_passes)" = private global [34 x i8] c"test_whenOptionalsAreEqual_passes\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_whenOptionalsAreNotEqual_fails)" = private global [36 x i8] c"test_whenOptionalsAreNotEqual_fails\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase = private constant { i32, i32, [5 x { i8*, i8*, i8* }] } { i32 24, i32 5, [5 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"\01L_selector_data(test_whenOptionalsAreEqual_passes)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%9*, i8*)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"\01L_selector_data(test_whenOptionalsAreNotEqual_fails)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%9*, i8*)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%9* (%9*, i8*, %19*)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%9* (%9*, i8*, i8*)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%9* (%9*, i8*)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @29, i64 0, i64 0), { i32, i32, [5 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU1_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU1_MXX" to i64) }>, section "__DATA,__const", align 4
@30 = private constant [28 x i8] c"AssertEqualOptionalTestCase\00"
@"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }> <{ i32 80, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMXX" to i64), i64 ptrtoint ([28 x i8]* @30 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 10, i32 0, i32 0, i32 10 }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }> <{ void (%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 96, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMn", i8* null }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase to i64) }, align 8
@31 = private unnamed_addr constant [50 x i8] c"_TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @31, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_whenArraysAreEqual_passes)" = private global [31 x i8] c"test_whenArraysAreEqual_passes\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_whenArraysAreNotEqual_fails)" = private global [33 x i8] c"test_whenArraysAreNotEqual_fails\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase = private constant { i32, i32, [5 x { i8*, i8*, i8* }] } { i32 24, i32 5, [5 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"\01L_selector_data(test_whenArraysAreEqual_passes)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%10*, i8*)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"\01L_selector_data(test_whenArraysAreNotEqual_fails)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%10*, i8*)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%10* (%10*, i8*, %19*)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%10* (%10*, i8*, i8*)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%10* (%10*, i8*)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @31, i64 0, i64 0), { i32, i32, [5 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU2_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU2_MXX" to i64) }>, section "__DATA,__const", align 4
@32 = private constant [25 x i8] c"AssertEqualArrayTestCase\00"
@"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }> <{ i32 80, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMXX" to i64), i64 ptrtoint ([25 x i8]* @32 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 10, i32 0, i32 0, i32 10 }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }> <{ void (%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 96, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMn", i8* null }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase to i64) }, align 8
@33 = private unnamed_addr constant [55 x i8] c"_TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @33, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_whenDictionariesAreEqual_passes)" = private global [37 x i8] c"test_whenDictionariesAreEqual_passes\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_whenDictionariesAreNotEqual_fails)" = private global [39 x i8] c"test_whenDictionariesAreNotEqual_fails\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase = private constant { i32, i32, [5 x { i8*, i8*, i8* }] } { i32 24, i32 5, [5 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"\01L_selector_data(test_whenDictionariesAreEqual_passes)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%11*, i8*)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"\01L_selector_data(test_whenDictionariesAreNotEqual_fails)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%11*, i8*)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%11* (%11*, i8*, %19*)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%11* (%11*, i8*, i8*)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%11* (%11*, i8*)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @33, i64 0, i64 0), { i32, i32, [5 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU3_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU3_MXX" to i64) }>, section "__DATA,__const", align 4
@34 = private constant [30 x i8] c"AssertEqualDictionaryTestCase\00"
@"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }> <{ i32 80, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMXX" to i64), i64 ptrtoint ([30 x i8]* @34 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 10, i32 0, i32 0, i32 10 }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }> <{ void (%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 96, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMn", i8* null }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase to i64) }, align 8
@35 = private unnamed_addr constant [45 x i8] c"_TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @35, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@_INSTANCE_METHODS__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase = private constant { i32, i32, [5 x { i8*, i8*, i8* }] } { i32 24, i32 5, [5 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01L_selector_data(test_whenEqual_passes)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%12*, i8*)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"\01L_selector_data(test_whenNotEqual_fails)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%12*, i8*)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%12* (%12*, i8*, %19*)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%12* (%12*, i8*, i8*)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%12* (%12*, i8*)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @35, i64 0, i64 0), { i32, i32, [5 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU4_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU4_MXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }> <{ i32 80, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMXX" to i64), i64 ptrtoint ([20 x i8]* @28 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 10, i32 0, i32 0, i32 10 }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU4_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }> <{ void (%T7_XCTestyycfU4_19AssertEqualTestCaseL_C*)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [5 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 96, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMn", i8* null }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU4_19AssertEqualTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU4_19AssertEqualTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd" = internal global i64 8, align 8
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd" = internal global i64 16, align 8
@"OBJC_METACLASS_$__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase to i64) }, align 8
@36 = private unnamed_addr constant [39 x i8] c"_TtCF7_XCTestU5_FT_T_L_13ErrorTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @36, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(doThrow)" = private global [8 x i8] c"doThrow\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@37 = private unnamed_addr constant [8 x i8] c"c16@0:8\00"
@"\01L_selector_data(setDoThrow:)" = private global [12 x i8] c"setDoThrow:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@38 = private unnamed_addr constant [11 x i8] c"v20@0:8c16\00"
@"\01L_selector_data(errorCode)" = private global [10 x i8] c"errorCode\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@39 = private unnamed_addr constant [8 x i8] c"q16@0:8\00"
@"\01L_selector_data(setErrorCode:)" = private global [14 x i8] c"setErrorCode:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@40 = private unnamed_addr constant [11 x i8] c"v24@0:8q16\00"
@"\01L_selector_data(throwSomethingAndReturnError:)" = private global [30 x i8] c"throwSomethingAndReturnError:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@41 = private unnamed_addr constant [12 x i8] c"c24@0:8^@16\00"
@"\01L_selector_data(test_throws)" = private global [12 x i8] c"test_throws\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase = private constant { i32, i32, [9 x { i8*, i8*, i8* }] } { i32 24, i32 9, [9 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(doThrow)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0), i8* bitcast (i8 (%13*, i8*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(setDoThrow:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* bitcast (void (%13*, i8*, i8)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\01L_selector_data(errorCode)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* bitcast (i64 (%13*, i8*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(setErrorCode:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @40, i64 0, i64 0), i8* bitcast (void (%13*, i8*, i64)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(throwSomethingAndReturnError:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @41, i64 0, i64 0), i8* bitcast (i8 (%13*, i8*, %20**)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C14throwSomethingyyKFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_throws)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%13*, i8*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%13* (%13*, i8*, %19*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%13* (%13*, i8*, i8*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%13* (%13*, i8*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@42 = private unnamed_addr constant [8 x i8] c"doThrow\00"
@43 = private unnamed_addr constant [10 x i8] c"errorCode\00"
@_IVARS__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 2, [2 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 0, i32 1 }, { i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 3, i32 8 }] }, section "__DATA, __objc_const", align 8
@44 = private unnamed_addr constant [14 x i8] c"Tc,N,VdoThrow\00"
@45 = private unnamed_addr constant [16 x i8] c"Tq,N,VerrorCode\00"
@_PROPERTIES__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i8*, i8* }] } { i32 16, i32 2, [2 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @44, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @45, i64 0, i64 0) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* } { i32 128, i32 8, i32 24, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @36, i64 0, i64 0), { i32, i32, [9 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i8*, i8* }] }* @_PROPERTIES__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU5_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU5_13ErrorTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU5_MXX" to i64) }>, section "__DATA,__const", align 4
@46 = private constant [14 x i8] c"ErrorTestCase\00"
@"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMXX" to i64), i64 ptrtoint ([14 x i8]* @46 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 18, i32 8, i32 2, i32 10, i32 12, i32 6, %swift.method_descriptor { i32 18, i64 ptrtoint (i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM" to i64) }, %swift.method_descriptor { i32 18, i64 ptrtoint (i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU5_13ErrorTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU5_13ErrorTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* }> <{ void (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* }* @_DATA__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase to i64), i64 1), i32 0, i32 0, i32 24, i16 7, i16 0, i32 160, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i8* null, i64 8, i64 16, i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvg", void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvs", { i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM", i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivg", void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivs", { i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU5_13ErrorTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"symbolic Sb" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Sb", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@47 = private constant [8 x i8] c"doThrow\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"symbolic Si" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Si", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@48 = private constant [10 x i8] c"errorCode\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"$s7_XCTestyycfU5_13ErrorTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU5_13ErrorTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 2, i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Sb" to i64), i64 ptrtoint ([8 x i8]* @47 to i64), i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Si" to i64), i64 ptrtoint ([10 x i8]* @48 to i64) }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd" = internal global i64 8, align 8
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd" = internal global i64 16, align 8
@"OBJC_METACLASS_$__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase to i64) }, align 8
@49 = private unnamed_addr constant [39 x i8] c"_TtCF7_XCTestU6_FT_T_L_13ErrorTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @49, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@_INSTANCE_METHODS__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase = private constant { i32, i32, [9 x { i8*, i8*, i8* }] } { i32 24, i32 9, [9 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(doThrow)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0), i8* bitcast (i8 (%14*, i8*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(setDoThrow:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* bitcast (void (%14*, i8*, i8)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\01L_selector_data(errorCode)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* bitcast (i64 (%14*, i8*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(setErrorCode:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @40, i64 0, i64 0), i8* bitcast (void (%14*, i8*, i64)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(throwSomethingAndReturnError:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @41, i64 0, i64 0), i8* bitcast (i8 (%14*, i8*, %20**)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C14throwSomethingyyKFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_throws)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%14*, i8*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%14* (%14*, i8*, %19*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%14* (%14*, i8*, i8*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%14* (%14*, i8*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_IVARS__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 2, [2 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 0, i32 1 }, { i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 3, i32 8 }] }, section "__DATA, __objc_const", align 8
@_PROPERTIES__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i8*, i8* }] } { i32 16, i32 2, [2 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @44, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @45, i64 0, i64 0) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* } { i32 128, i32 8, i32 24, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @49, i64 0, i64 0), { i32, i32, [9 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i8*, i8* }] }* @_PROPERTIES__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU6_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU6_13ErrorTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU6_MXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMXX" to i64), i64 ptrtoint ([14 x i8]* @46 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 18, i32 8, i32 2, i32 10, i32 12, i32 6, %swift.method_descriptor { i32 18, i64 ptrtoint (i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM" to i64) }, %swift.method_descriptor { i32 18, i64 ptrtoint (i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU6_13ErrorTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU6_13ErrorTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* }> <{ void (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* }* @_DATA__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase to i64), i64 1), i32 0, i32 0, i32 24, i16 7, i16 0, i32 160, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i8* null, i64 8, i64 16, i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvg", void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvs", { i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM", i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivg", void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivs", { i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU6_13ErrorTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU6_13ErrorTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU6_13ErrorTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 2, i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Sb" to i64), i64 ptrtoint ([8 x i8]* @47 to i64), i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Si" to i64), i64 ptrtoint ([10 x i8]* @48 to i64) }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd" = internal global i64 8, align 8
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd" = internal global i64 16, align 8
@"OBJC_METACLASS_$__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase to i64) }, align 8
@50 = private unnamed_addr constant [39 x i8] c"_TtCF7_XCTestU7_FT_T_L_13ErrorTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @50, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@51 = private unnamed_addr constant [12 x i8] c"@24@0:8^@16\00"
@"\01L_selector_data(test_withThrowing)" = private global [18 x i8] c"test_withThrowing\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase = private constant { i32, i32, [9 x { i8*, i8*, i8* }] } { i32 24, i32 9, [9 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(doThrow)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0), i8* bitcast (i8 (%15*, i8*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(setDoThrow:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* bitcast (void (%15*, i8*, i8)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\01L_selector_data(errorCode)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* bitcast (i64 (%15*, i8*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(setErrorCode:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @40, i64 0, i64 0), i8* bitcast (void (%15*, i8*, i64)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(throwSomethingAndReturnError:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @51, i64 0, i64 0), i8* bitcast (%0* (%15*, i8*, %20**)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C14throwSomethingSSyKFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(test_withThrowing)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%15*, i8*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%15* (%15*, i8*, %19*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%15* (%15*, i8*, i8*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%15* (%15*, i8*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_IVARS__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 2, [2 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 0, i32 1 }, { i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 3, i32 8 }] }, section "__DATA, __objc_const", align 8
@_PROPERTIES__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i8*, i8* }] } { i32 16, i32 2, [2 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @44, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @45, i64 0, i64 0) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* } { i32 128, i32 8, i32 24, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @50, i64 0, i64 0), { i32, i32, [9 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i8*, i8* }] }* @_PROPERTIES__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU7_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU7_13ErrorTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU7_MXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMXX" to i64), i64 ptrtoint ([14 x i8]* @46 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 18, i32 8, i32 2, i32 10, i32 12, i32 6, %swift.method_descriptor { i32 18, i64 ptrtoint (i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM" to i64) }, %swift.method_descriptor { i32 18, i64 ptrtoint (i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU7_13ErrorTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU7_13ErrorTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* }> <{ void (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* }* @_DATA__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase to i64), i64 1), i32 0, i32 0, i32 24, i16 7, i16 0, i32 160, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i8* null, i64 8, i64 16, i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvg", void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvs", { i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM", i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivg", void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivs", { i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU7_13ErrorTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU7_13ErrorTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU7_13ErrorTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 2, i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Sb" to i64), i64 ptrtoint ([8 x i8]* @47 to i64), i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Si" to i64), i64 ptrtoint ([10 x i8]* @48 to i64) }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd" = internal global i64 8, align 8
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd" = internal global i64 16, align 8
@"OBJC_METACLASS_$__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase to i64) }, align 8
@52 = private unnamed_addr constant [39 x i8] c"_TtCF7_XCTestU8_FT_T_L_13ErrorTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @52, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_withThrowingAndReturnError:)" = private global [33 x i8] c"test_withThrowingAndReturnError:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase = private constant { i32, i32, [9 x { i8*, i8*, i8* }] } { i32 24, i32 9, [9 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(doThrow)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0), i8* bitcast (i8 (%16*, i8*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(setDoThrow:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i64 0, i64 0), i8* bitcast (void (%16*, i8*, i8)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\01L_selector_data(errorCode)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* bitcast (i64 (%16*, i8*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivgTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(setErrorCode:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @40, i64 0, i64 0), i8* bitcast (void (%16*, i8*, i64)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivsTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(throwSomethingAndReturnError:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @41, i64 0, i64 0), i8* bitcast (i8 (%16*, i8*, %20**)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C14throwSomethingyyKFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"\01L_selector_data(test_withThrowingAndReturnError:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @41, i64 0, i64 0), i8* bitcast (i8 (%16*, i8*, %20**)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C17test_withThrowingyyKFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%16* (%16*, i8*, %19*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%16* (%16*, i8*, i8*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%16* (%16*, i8*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_IVARS__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] } { i32 32, i32 2, [2 x { i64*, i8*, i8*, i32, i32 }] [{ i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 0, i32 1 }, { i64*, i8*, i8*, i32, i32 } { i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i32 3, i32 8 }] }, section "__DATA, __objc_const", align 8
@_PROPERTIES__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase = private constant { i32, i32, [2 x { i8*, i8* }] } { i32 16, i32 2, [2 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @42, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @44, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @43, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @45, i64 0, i64 0) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* } { i32 128, i32 8, i32 24, i32 0, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @52, i64 0, i64 0), { i32, i32, [9 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }* @_IVARS__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase, i8* null, { i32, i32, [2 x { i8*, i8* }] }* @_PROPERTIES__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU8_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU8_13ErrorTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU8_MXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMXX" to i64), i64 ptrtoint ([14 x i8]* @46 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 18, i32 8, i32 2, i32 10, i32 12, i32 6, %swift.method_descriptor { i32 18, i64 ptrtoint (i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM" to i64) }, %swift.method_descriptor { i32 18, i64 ptrtoint (i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivg" to i64) }, %swift.method_descriptor { i32 19, i64 ptrtoint (void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivs" to i64) }, %swift.method_descriptor { i32 20, i64 ptrtoint ({ i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU8_13ErrorTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU8_13ErrorTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* }> <{ void (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [9 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [2 x { i64*, i8*, i8*, i32, i32 }] }*, i8*, { i32, i32, [2 x { i8*, i8* }] }* }* @_DATA__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase to i64), i64 1), i32 0, i32 0, i32 24, i16 7, i16 0, i32 160, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i8* null, i64 8, i64 16, i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvg", void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvs", { i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM", i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivg", void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivs", { i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU8_13ErrorTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU8_13ErrorTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU8_13ErrorTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 2, i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Sb" to i64), i64 ptrtoint ([8 x i8]* @47 to i64), i32 2, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Si" to i64), i64 ptrtoint ([10 x i8]* @48 to i64) }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase to i64) }, align 8
@53 = private unnamed_addr constant [45 x i8] c"_TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @53, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(test_noThrow_void)" = private global [18 x i8] c"test_noThrow_void\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_noThrow_returns_string)" = private global [28 x i8] c"test_noThrow_returns_string\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(test_throwing)" = private global [14 x i8] c"test_throwing\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase = private constant { i32, i32, [6 x { i8*, i8*, i8* }] } { i32 24, i32 6, [6 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(test_noThrow_void)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%21*, i8*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(test_noThrow_returns_string)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%21*, i8*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(test_throwing)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%21*, i8*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%21* (%21*, i8*, %19*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%21* (%21*, i8*, i8*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%21* (%21*, i8*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [6 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @53, i64 0, i64 0), { i32, i32, [6 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU9_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU9_MXX" to i64) }>, section "__DATA,__const", align 4
@54 = private constant [20 x i8] c"RunActivityTestCase\00"
@"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }> <{ i32 80, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMXX" to i64), i64 ptrtoint ([20 x i8]* @54 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 10, i32 0, i32 0, i32 10 }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU9_19RunActivityTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU9_19RunActivityTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }> <{ void (%T7_XCTestyycfU9_19RunActivityTestCaseL_C*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [6 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 96, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMn", i8* null }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU9_19RunActivityTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU9_19RunActivityTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"OBJC_METACLASS_$__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase" = internal global %objc_class { %objc_class* @"OBJC_METACLASS_$_NSObject", %objc_class* @"OBJC_METACLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* @_METACLASS_DATA__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase to i64) }, align 8
@55 = private unnamed_addr constant [42 x i8] c"_TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase\00"
@_METACLASS_DATA__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase = private constant { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { i32 129, i32 40, i32 40, i32 0, i8* null, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @55, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(testTypeKey)" = private global [12 x i8] c"testTypeKey\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_INSTANCE_METHODS__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase = private constant { i32, i32, [4 x { i8*, i8*, i8* }] } { i32 24, i32 4, [4 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(testTypeKey)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* bitcast (void (%24*, i8*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyFTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i64 0, i64 0), i8* bitcast (%24* (%24*, i8*, %19*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i64 0, i64 0), i8* bitcast (%24* (%24*, i8*, i8*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo" to i8*) }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* bitcast (%24* (%24*, i8*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CACycfcTo" to i8*) }] }, section "__DATA, __objc_const", align 8
@_DATA__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase = private constant { i32, i32, i32, i32, i8*, i8*, { i32, i32, [4 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* } { i32 128, i32 8, i32 8, i32 0, i8* null, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @55, i64 0, i64 0), { i32, i32, [4 x { i8*, i8*, i8* }] }* @_INSTANCE_METHODS__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase, i8* null, i8* null, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"$s7_XCTestyycfU10_MXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestMXX" to i64) }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMXX" = linkonce_odr hidden constant <{ i32, i64 }> <{ i32 66, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU10_MXX" to i64) }>, section "__DATA,__const", align 4
@56 = private constant [16 x i8] c"TypeKeyTestCase\00"
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMn" = internal constant <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }> <{ i32 -2147483568, i64 ptrtoint (<{ i32, i64 }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMXX" to i64), i64 ptrtoint ([16 x i8]* @56 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMa" to i64), i64 ptrtoint ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMF" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i32 2, i32 11, i32 1, i32 0, i32 10, i32 10, i32 1, %swift.method_descriptor { i32 16, i64 ptrtoint (void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyF" to i64) } }>, section "__DATA,__const", align 4
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CML" = internal global %swift.type* null, align 8
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMf" = internal global <{ void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* }> <{ void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CfD", i8** @"$sBOWV", i64 ptrtoint (%objc_class* @"OBJC_METACLASS_$__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase" to i64), %objc_class* @"OBJC_CLASS_$_XCTestCase", %swift.opaque* @_objc_empty_cache, %swift.opaque* null, i64 add (i64 ptrtoint ({ i32, i32, i32, i32, i8*, i8*, { i32, i32, [4 x { i8*, i8*, i8* }] }*, i8*, i8*, i8*, i8* }* @_DATA__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase to i64), i64 1), i32 0, i32 0, i32 8, i16 7, i16 0, i32 104, i32 16, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMn", i8* null, void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyF" }>, section "__DATA,__objc_data, regular", align 8
@"symbolic _____ 7_XCTestyycfU10_15TypeKeyTestCaseL_C" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMF" = internal constant { i64, i64, i16, i16, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU10_15TypeKeyTestCaseL_C" to i64), i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC" to i64), i16 7, i16 12, i32 0 }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"_swift_FORCE_LOAD_$_swiftXCTest_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftXCTest"
@"_swift_FORCE_LOAD_$_swiftAppKit_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftAppKit"
@"_swift_FORCE_LOAD_$_swiftFoundation_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftFoundation"
@"_swift_FORCE_LOAD_$_swiftObjectiveC_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftObjectiveC"
@"_swift_FORCE_LOAD_$_swiftDarwin_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftDarwin"
@"_swift_FORCE_LOAD_$_swiftCoreFoundation_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCoreFoundation"
@"_swift_FORCE_LOAD_$_swiftDispatch_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftDispatch"
@"_swift_FORCE_LOAD_$_swiftCoreGraphics_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCoreGraphics"
@"_swift_FORCE_LOAD_$_swiftIOKit_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftIOKit"
@"_swift_FORCE_LOAD_$_swiftXPC_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftXPC"
@"_swift_FORCE_LOAD_$_swiftCoreData_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCoreData"
@"_swift_FORCE_LOAD_$_swiftQuartzCore_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftQuartzCore"
@"_swift_FORCE_LOAD_$_swiftMetal_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftMetal"
@"_swift_FORCE_LOAD_$_swiftCoreImage_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCoreImage"
@"_swift_FORCE_LOAD_$_swiftCompatibility50_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCompatibility50"
@"_swift_FORCE_LOAD_$_swiftCompatibilityDynamicReplacements_$__XCTest" = weak_odr hidden constant void ()* @"_swift_FORCE_LOAD_$_swiftCompatibilityDynamicReplacements"
@"symbolic So15XCUIApplicationC" = linkonce_odr hidden constant <{ [20 x i8], i8 }> <{ [20 x i8] c"So15XCUIApplicationC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo15XCUIApplicationCMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [20 x i8], i8 }>* @"symbolic So15XCUIApplicationC" to i64), i32 -20 }, align 8
@57 = private unnamed_addr constant [2 x i8] c"a\00"
@"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWL" = linkonce_odr hidden global i8** null, align 8
@"\01L_selector_data(typeKey:modifierFlags:)" = private global [23 x i8] c"typeKey:modifierFlags:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(typeKey:modifierFlags:)" = private externally_initialized global i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"\01L_selector_data(typeKey:modifierFlags:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(initWithSelector:)" = private externally_initialized global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(initWithInvocation:)" = private externally_initialized global i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"symbolic So10XCTContextC" = linkonce_odr hidden constant <{ [15 x i8], i8 }> <{ [15 x i8] c"So10XCTContextC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo10XCTContextCMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [15 x i8], i8 }>* @"symbolic So10XCTContextC" to i64), i32 -15 }, align 8
@58 = private unnamed_addr constant [9 x i8] c"throwing\00"
@"$sytN" = external global %swift.full_type
@"symbolic So7NSErrorC" = linkonce_odr hidden constant <{ [11 x i8], i8 }> <{ [11 x i8] c"So7NSErrorC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo7NSErrorCMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [11 x i8], i8 }>* @"symbolic So7NSErrorC" to i64), i32 -11 }, align 8
@59 = private unnamed_addr constant [9 x i8] c"MyDomain\00"
@"\01L_selector_data(initWithDomain:code:userInfo:)" = private global [30 x i8] c"initWithDomain:code:userInfo:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(initWithDomain:code:userInfo:)" = private externally_initialized global i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(initWithDomain:code:userInfo:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$sSSN" = external global %swift.type, align 8
@"$sypN" = external global %swift.full_type
@"$sSSSHsWP" = external global i8*, align 8
@60 = private unnamed_addr constant [8 x i8] c"noThrow\00"
@61 = private unnamed_addr constant [34 x i8] c"Activities can return values now!\00"
@"symbolic So7NSErrorCSg" = linkonce_odr hidden constant <{ [13 x i8], i8 }> <{ [13 x i8] c"So7NSErrorCSg", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo7NSErrorCSgMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [13 x i8], i8 }>* @"symbolic So7NSErrorCSg" to i64), i32 -13 }, align 8
@"\01L_selector(throwSomethingAndReturnError:)" = private externally_initialized global i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(throwSomethingAndReturnError:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$sSSSQsWP" = external global i8*, align 8
@62 = private unnamed_addr constant [6 x i8] c"Hello\00"
@"$sSiN" = external global %swift.type, align 8
@"$sSiSQsWP" = external global i8*, align 8
@"\01L_selector_data(code)" = private global [5 x i8] c"code\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(code)" = private externally_initialized global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(code)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(domain)" = private global [7 x i8] c"domain\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(domain)" = private externally_initialized global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\01L_selector_data(domain)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$sSdN" = external global %swift.type, align 8
@"$sS2dSFsWL" = linkonce_odr hidden global i8** null, align 8
@"$sSdSFsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"symbolic SDySSSo12NSDictionaryCG" = linkonce_odr hidden constant <{ [23 x i8], i8 }> <{ [23 x i8] c"SDySSSo12NSDictionaryCG", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSDySSSo12NSDictionaryCGMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [23 x i8], i8 }>* @"symbolic SDySSSo12NSDictionaryCG" to i64), i32 -23 }, align 8
@"$sSDySSSo12NSDictionaryCGSDyxq_GSQsSQR_rlWL" = linkonce_odr hidden global i8** null, align 8
@"$sSDyxq_GSQsSQR_rlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSDySSSo12NSDictionaryCGML" = linkonce_odr hidden global %swift.type* null, align 8
@"$sSo12NSDictionaryCML" = linkonce_odr hidden global %swift.type* null, align 8
@"OBJC_CLASS_REF_$_NSDictionary" = private externally_initialized global %objc_class* @"OBJC_CLASS_$_NSDictionary", section "__DATA,__objc_classrefs,regular,no_dead_strip", align 8
@"OBJC_CLASS_$_NSDictionary" = external global %objc_class, align 8
@"$sSo12NSDictionaryCSo8NSObjectCSQ10ObjectiveCWL" = linkonce_odr hidden global i8** null, align 8
@"$sSo8NSObjectCSQ10ObjectiveCMc" = external global %swift.protocol_conformance_descriptor, align 4
@"symbolic SS_So12NSDictionaryCt" = linkonce_odr hidden constant <{ [21 x i8], i8 }> <{ [21 x i8] c"SS_So12NSDictionaryCt", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSS_So12NSDictionaryCtMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [21 x i8], i8 }>* @"symbolic SS_So12NSDictionaryCt" to i64), i32 -21 }, align 8
@63 = private unnamed_addr constant [4 x i8] c"foo\00"
@"symbolic yp_ypt" = linkonce_odr hidden constant <{ [6 x i8], i8 }> <{ [6 x i8] c"yp_ypt", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$syp_yptMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [6 x i8], i8 }>* @"symbolic yp_ypt" to i64), i32 -6 }, align 8
@64 = private unnamed_addr constant [4 x i8] c"bar\00"
@65 = private unnamed_addr constant [5 x i8] c"flim\00"
@"symbolic So12NSDictionaryC" = linkonce_odr hidden constant <{ [17 x i8], i8 }> <{ [17 x i8] c"So12NSDictionaryC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo12NSDictionaryCMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [17 x i8], i8 }>* @"symbolic So12NSDictionaryC" to i64), i32 -17 }, align 8
@66 = private unnamed_addr constant [4 x i8] c"baz\00"
@"symbolic SDyS2SG" = linkonce_odr hidden constant <{ [7 x i8], i8 }> <{ [7 x i8] c"SDyS2SG", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSDyS2SGMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [7 x i8], i8 }>* @"symbolic SDyS2SG" to i64), i32 -7 }, align 8
@"$sSDyS2SGSDyxq_GSQsSQR_rlWL" = linkonce_odr hidden global i8** null, align 8
@"$sSDyS2SGML" = linkonce_odr hidden global %swift.type* null, align 8
@"symbolic SS_SSt" = linkonce_odr hidden constant <{ [6 x i8], i8 }> <{ [6 x i8] c"SS_SSt", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSS_SStMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [6 x i8], i8 }>* @"symbolic SS_SSt" to i64), i32 -6 }, align 8
@"symbolic SaySSG" = linkonce_odr hidden constant <{ [6 x i8], i8 }> <{ [6 x i8] c"SaySSG", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSaySSGMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [6 x i8], i8 }>* @"symbolic SaySSG" to i64), i32 -6 }, align 8
@"$sSaySSGSayxGSQsSQRzlWL" = linkonce_odr hidden global i8** null, align 8
@"$sSayxGSQsSQRzlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSaySSGML" = linkonce_odr hidden global %swift.type* null, align 8
@"symbolic SiSg" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"SiSg", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSiSgMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [4 x i8], i8 }>* @"symbolic SiSg" to i64), i32 -4 }, align 8
@"$sSiSgxSgSQsSQRzlWL" = linkonce_odr hidden global i8** null, align 8
@"$sxSgSQsSQRzlMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSiSgML" = linkonce_odr hidden global %swift.type* null, align 8
@"\01L_selector_data(setContinueAfterFailure:)" = private global [25 x i8] c"setContinueAfterFailure:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(setContinueAfterFailure:)" = private externally_initialized global i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"\01L_selector_data(setContinueAfterFailure:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"symbolic So11NSExceptionC" = linkonce_odr hidden constant <{ [16 x i8], i8 }> <{ [16 x i8] c"So11NSExceptionC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo11NSExceptionCMD" = linkonce_odr hidden global { i64, i32 } { i64 ptrtoint (<{ [16 x i8], i8 }>* @"symbolic So11NSExceptionC" to i64), i32 -16 }, align 8
@67 = private unnamed_addr constant [25 x i8] c"XCTestTestSuiteException\00"
@"\01L_selector_data(raise)" = private global [6 x i8] c"raise\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(raise)" = private externally_initialized global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"\01L_selector_data(raise)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(initWithName:reason:userInfo:)" = private global [30 x i8] c"initWithName:reason:userInfo:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(initWithName:reason:userInfo:)" = private externally_initialized global i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(initWithName:reason:userInfo:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$ss11AnyHashableVN" = external global %swift.type, align 8
@"$ss11AnyHashableVSHsWP" = external global i8*, align 8
@68 = private unnamed_addr constant [16 x i8] c"I'm outta here!\00"
@"\01L_selector(test_withThrowingAndReturnError:)" = private externally_initialized global i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"\01L_selector_data(test_withThrowingAndReturnError:)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(testRun)" = private global [8 x i8] c"testRun\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(testRun)" = private externally_initialized global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(testRun)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@69 = private unnamed_addr constant [58 x i8] c"Unexpectedly found nil while unwrapping an Optional value\00"
@70 = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@"\01L_selector_data(testCaseCount)" = private global [14 x i8] c"testCaseCount\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(testCaseCount)" = private externally_initialized global i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(testCaseCount)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(executionCount)" = private global [15 x i8] c"executionCount\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(executionCount)" = private externally_initialized global i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(executionCount)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(failureCount)" = private global [13 x i8] c"failureCount\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(failureCount)" = private externally_initialized global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"\01L_selector_data(failureCount)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(unexpectedExceptionCount)" = private global [25 x i8] c"unexpectedExceptionCount\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(unexpectedExceptionCount)" = private externally_initialized global i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"\01L_selector_data(unexpectedExceptionCount)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(totalFailureCount)" = private global [18 x i8] c"totalFailureCount\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(totalFailureCount)" = private externally_initialized global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(totalFailureCount)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector_data(hasSucceeded)" = private global [13 x i8] c"hasSucceeded\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(hasSucceeded)" = private externally_initialized global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"\01L_selector_data(hasSucceeded)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$ss4Int8VN" = external global %swift.type, align 8
@"$ss4Int8VABSZsWL" = linkonce_odr hidden global i8** null, align 8
@"$ss4Int8VSZsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sS2iSZsWL" = linkonce_odr hidden global i8** null, align 8
@"$sSiSZsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$ss4Int8VABs17FixedWidthIntegersWL" = linkonce_odr hidden global i8** null, align 8
@"$ss4Int8Vs17FixedWidthIntegersMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sS2is17FixedWidthIntegersWL" = linkonce_odr hidden global i8** null, align 8
@"$sSis17FixedWidthIntegersMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sS2iSzsWL" = linkonce_odr hidden global i8** null, align 8
@"$sSiSzsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$ss4Int8VABSzsWL" = linkonce_odr hidden global i8** null, align 8
@"$ss4Int8VSzsMc" = external global %swift.protocol_conformance_descriptor, align 4
@"symbolic So6XCTestC" = linkonce_odr hidden constant <{ [10 x i8], i8 }> <{ [10 x i8] c"So6XCTestC", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"\01l__swift5_reflection_descriptor" = private constant { i32, i32, i32, i64 } { i32 1, i32 0, i32 0, i64 ptrtoint (<{ [10 x i8], i8 }>* @"symbolic So6XCTestC" to i64) }, section "__DATA,__swift5_capture, regular, no_dead_strip", align 4
@metadata = private constant %swift.full_boxmetadata { void (%swift.refcounted*)* @objectdestroy, i8** null, %swift.type { i64 1024 }, i32 16, i8* bitcast ({ i32, i32, i32, i64 }* @"\01l__swift5_reflection_descriptor" to i8*) }, align 8
@"\01L_selector_data(runTest)" = private global [8 x i8] c"runTest\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector(runTest)" = private externally_initialized global i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(runTest)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_withThrowing)" = private externally_initialized global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(test_withThrowing)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_throws)" = private externally_initialized global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_throws)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenEqual_passes)" = private externally_initialized global i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01L_selector_data(test_whenEqual_passes)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenNotEqual_fails)" = private externally_initialized global i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"\01L_selector_data(test_whenNotEqual_fails)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenDictionariesAreEqual_passes)" = private externally_initialized global i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"\01L_selector_data(test_whenDictionariesAreEqual_passes)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenDictionariesAreNotEqual_fails)" = private externally_initialized global i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"\01L_selector_data(test_whenDictionariesAreNotEqual_fails)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenArraysAreEqual_passes)" = private externally_initialized global i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"\01L_selector_data(test_whenArraysAreEqual_passes)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenArraysAreNotEqual_fails)" = private externally_initialized global i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"\01L_selector_data(test_whenArraysAreNotEqual_fails)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenOptionalsAreEqual_passes)" = private externally_initialized global i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"\01L_selector_data(test_whenOptionalsAreEqual_passes)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_whenOptionalsAreNotEqual_fails)" = private externally_initialized global i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"\01L_selector_data(test_whenOptionalsAreNotEqual_fails)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@71 = private unnamed_addr constant [71 x i8] c"XCTAssertEqual failed: (\22Optional(1)\22) is not equal to (\22Optional(2)\22)\00"
@"$sSSSTsWP" = external global i8*, align 8
@"$sSJSQsWP" = external global i8*, align 8
@72 = private unnamed_addr constant [51 x i8] c"XCTAssertEqual failed: (\221\22) is not equal to (\222\22)\00"
@"\01L_selector(test_raises)" = private externally_initialized global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_raises)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_raisesDuringAssertion)" = private externally_initialized global i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"\01L_selector_data(test_raisesDuringAssertion)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"\01L_selector(test_continueAfterFailureWithAssertions)" = private externally_initialized global i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"\01L_selector_data(test_continueAfterFailureWithAssertions)", i64 0, i64 0), section "__DATA,__objc_selrefs,literal_pointers,no_dead_strip", align 8
@"$sBi64_WV" = external global i8*, align 8
@73 = private constant [4 x i8] c"__C\00"
@"$sSoMXM" = linkonce_odr hidden constant <{ i32, i64, i64 }> <{ i32 0, i64 0, i64 ptrtoint ([4 x i8]* @73 to i64) }>, section "__DATA,__const", align 4
@74 = private constant [40 x i8] c"KeyModifierFlags\00NXCUIKeyModifierFlags\00\00"
@"$sSo20XCUIKeyModifierFlagsVMn" = linkonce_odr hidden constant <{ i32, i64, i64, i64, i64, i32, i32, i64 }> <{ i32 393233, i64 ptrtoint (<{ i32, i64, i64 }>* @"$sSoMXM" to i64), i64 ptrtoint ([40 x i8]* @74 to i64), i64 ptrtoint (%swift.metadata_response (i64)* @"$sSo20XCUIKeyModifierFlagsVMa" to i64), i64 ptrtoint ({ i64, i32, i16, i16, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVMF" to i64), i32 1, i32 2, i64 0 }>, section "__DATA,__const", align 4
@"$sSo20XCUIKeyModifierFlagsVMf" = linkonce_odr hidden constant <{ i8**, i64, <{ i32, i64, i64, i64, i64, i32, i32, i64 }>*, i32, [4 x i8] }> <{ i8** @"$sBi64_WV", i64 512, <{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn", i32 0, [4 x i8] zeroinitializer }>, align 8
@"$sSo20XCUIKeyModifierFlagsVML" = linkonce_odr hidden global %swift.type* null, align 8
@"symbolic _____ So20XCUIKeyModifierFlagsV" = linkonce_odr hidden constant <{ i8, i64, i8 }> <{ i8 1, i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo20XCUIKeyModifierFlagsVMB" = linkonce_odr hidden constant { i64, i32, i32, i32, i32 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i32 8, i32 65544, i32 8, i32 0 }, section "__DATA,__swift5_builtin, regular, no_dead_strip", align 4
@"symbolic Su" = linkonce_odr hidden constant <{ [2 x i8], i8 }> <{ [2 x i8] c"Su", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@75 = private constant [9 x i8] c"rawValue\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"$sSo20XCUIKeyModifierFlagsVMF" = linkonce_odr hidden constant { i64, i32, i16, i16, i32, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i32 0, i16 0, i16 12, i32 1, i32 0, i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Su" to i64), i64 ptrtoint ([9 x i8]* @75 to i64) }, section "__DATA,__swift5_fieldmd, regular, no_dead_strip", align 4
@"$sSo20XCUIKeyModifierFlagsVABSYSCWL" = linkonce_odr hidden global i8** null, align 8
@"associated conformance So20XCUIKeyModifierFlagsVs9OptionSetSCSY" = linkonce_odr hidden constant <{ i8, i8, i64, i8 }> <{ i8 -1, i8 7, i64 ptrtoint (i8** (%swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCSYWb" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"associated conformance So20XCUIKeyModifierFlagsVs9OptionSetSCs0E7Algebra" = linkonce_odr hidden constant <{ i8, i8, i64, i8 }> <{ i8 -1, i8 7, i64 ptrtoint (i8** (%swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCs0E7AlgebraPWb" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo20XCUIKeyModifierFlagsVABSQSCWL" = linkonce_odr hidden global i8** null, align 8
@"associated conformance So20XCUIKeyModifierFlagsVs10SetAlgebraSCSQ" = linkonce_odr hidden constant <{ i8, i8, i64, i8 }> <{ i8 -1, i8 7, i64 ptrtoint (i8** (%swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCSQWb" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo20XCUIKeyModifierFlagsVABs25ExpressibleByArrayLiteralSCWL" = linkonce_odr hidden global i8** null, align 8
@"associated conformance So20XCUIKeyModifierFlagsVs10SetAlgebraSCs25ExpressibleByArrayLiteral" = linkonce_odr hidden constant <{ i8, i8, i64, i8 }> <{ i8 -1, i8 7, i64 ptrtoint (i8** (%swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCs25ExpressibleByArrayLiteralPWb" to i64), i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWL" = linkonce_odr hidden global i8** null, align 8
@"$sS2us17FixedWidthIntegersWL" = linkonce_odr hidden global i8** null, align 8
@"$sSus17FixedWidthIntegersMc" = external global %swift.protocol_conformance_descriptor, align 4
@"$sSuN" = external global %swift.type, align 8
@"$sSuSQsWP" = external global i8*, align 8
@"symbolic $ss25ExpressibleByArrayLiteralP" = linkonce_odr hidden constant <{ [31 x i8], i8 }> <{ [31 x i8] c"$ss25ExpressibleByArrayLiteralP", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@76 = private constant [20 x i8] c"ArrayLiteralElement\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMA" = linkonce_odr hidden constant { i64, i64, i32, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i64 ptrtoint (<{ [31 x i8], i8 }>* @"symbolic $ss25ExpressibleByArrayLiteralP" to i64), i32 1, i32 8, i64 ptrtoint ([20 x i8]* @76 to i64), i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64) }, section "__DATA,__swift5_assocty, regular, no_dead_strip", align 4
@"$ss25ExpressibleByArrayLiteralMp" = external global %swift.protocol, align 4
@"got.$ss25ExpressibleByArrayLiteralMp" = private unnamed_addr constant %swift.protocol* @"$ss25ExpressibleByArrayLiteralMp"
@"$s6XCTestMXM" = linkonce_odr hidden constant <{ i32, i64, i64 }> <{ i32 0, i64 0, i64 ptrtoint ([7 x i8]* @0 to i64) }>, section "__DATA,__const", align 4
@"$s19ArrayLiteralElements013ExpressibleByaB0PTl" = external global %swift.protocol_requirement, align 4
@"got.$s19ArrayLiteralElements013ExpressibleByaB0PTl" = private unnamed_addr constant %swift.protocol_requirement* @"$s19ArrayLiteralElements013ExpressibleByaB0PTl"
@"$ss25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfCTq" = external global %swift.method_descriptor, align 4
@"got.$ss25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfCTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfCTq"
@77 = internal global [16 x i8*] zeroinitializer
@"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMc" = linkonce_odr hidden constant { i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i16, i16, i64, i64 } { i64 add (i64 ptrtoint (%swift.protocol** @"got.$ss25ExpressibleByArrayLiteralMp" to i64), i64 1), i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64), i64 0, i32 196800, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s6XCTestMXM" to i64), i32 2, i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$s19ArrayLiteralElements013ExpressibleByaB0PTl" to i64), i64 1), i64 add (i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i64 1), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfCTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %swift.bridge*, %swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCsACP05arrayG0x0fG7ElementQzd_tcfCTW" to i64), i16 0, i16 1, i64 0, i64 ptrtoint ([16 x i8*]* @77 to i64) }, section "__DATA,__const", align 4
@"$sSQMp" = external global %swift.protocol, align 4
@"got.$sSQMp" = private unnamed_addr constant %swift.protocol* @"$sSQMp"
@"$sSQ2eeoiySbx_xtFZTq" = external global %swift.method_descriptor, align 4
@"got.$sSQ2eeoiySbx_xtFZTq" = private unnamed_addr constant %swift.method_descriptor* @"$sSQ2eeoiySbx_xtFZTq"
@78 = internal global [16 x i8*] zeroinitializer
@"$sSo20XCUIKeyModifierFlagsVSQSCMc" = linkonce_odr hidden constant { i64, i64, i64, i32, i64, i32, i64, i64, i16, i16, i64, i64 } { i64 add (i64 ptrtoint (%swift.protocol** @"got.$sSQMp" to i64), i64 1), i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64), i64 0, i32 196800, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s6XCTestMXM" to i64), i32 1, i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$sSQ2eeoiySbx_xtFZTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVSQSCSQ2eeoiySbx_xtFZTW" to i64), i16 0, i16 1, i64 0, i64 ptrtoint ([16 x i8*]* @78 to i64) }, section "__DATA,__const", align 4
@"symbolic $sSY" = linkonce_odr hidden constant <{ [4 x i8], i8 }> <{ [4 x i8] c"$sSY", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@79 = private constant [9 x i8] c"RawValue\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"$sSo20XCUIKeyModifierFlagsVSYSCMA" = linkonce_odr hidden constant { i64, i64, i32, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i64 ptrtoint (<{ [4 x i8], i8 }>* @"symbolic $sSY" to i64), i32 1, i32 8, i64 ptrtoint ([9 x i8]* @79 to i64), i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Su" to i64) }, section "__DATA,__swift5_assocty, regular, no_dead_strip", align 4
@"$sSYMp" = external global %swift.protocol, align 4
@"got.$sSYMp" = private unnamed_addr constant %swift.protocol* @"$sSYMp"
@"$s8RawValueSYTl" = external global %swift.protocol_requirement, align 4
@"got.$s8RawValueSYTl" = private unnamed_addr constant %swift.protocol_requirement* @"$s8RawValueSYTl"
@"$sSY8rawValuexSg03RawB0Qz_tcfCTq" = external global %swift.method_descriptor, align 4
@"got.$sSY8rawValuexSg03RawB0Qz_tcfCTq" = private unnamed_addr constant %swift.method_descriptor* @"$sSY8rawValuexSg03RawB0Qz_tcfCTq"
@"$sSY8rawValue03RawB0QzvgTq" = external global %swift.method_descriptor, align 4
@"got.$sSY8rawValue03RawB0QzvgTq" = private unnamed_addr constant %swift.method_descriptor* @"$sSY8rawValue03RawB0QzvgTq"
@80 = internal global [16 x i8*] zeroinitializer
@"$sSo20XCUIKeyModifierFlagsVSYSCMc" = linkonce_odr hidden constant { i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 } { i64 add (i64 ptrtoint (%swift.protocol** @"got.$sSYMp" to i64), i64 1), i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64), i64 0, i32 196800, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s6XCTestMXM" to i64), i32 3, i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$s8RawValueSYTl" to i64), i64 1), i64 add (i64 ptrtoint (<{ [2 x i8], i8 }>* @"symbolic Su" to i64), i64 1), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$sSY8rawValuexSg03RawB0Qz_tcfCTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsVSg*, %TSu*, %swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVSYSCSY8rawValuexSg03RawE0Qz_tcfCTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$sSY8rawValue03RawB0QzvgTq" to i64), i64 1), i64 ptrtoint (void (%TSu*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVSYSCSY8rawValue03RawE0QzvgTW" to i64), i16 0, i16 1, i64 0, i64 ptrtoint ([16 x i8*]* @80 to i64) }, section "__DATA,__const", align 4
@"symbolic $ss9OptionSetP" = linkonce_odr hidden constant <{ [14 x i8], i8 }> <{ [14 x i8] c"$ss9OptionSetP", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@81 = private constant [8 x i8] c"Element\00", section "__DATA,__swift5_reflstr, regular, no_dead_strip"
@"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMA" = linkonce_odr hidden constant { i64, i64, i32, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i64 ptrtoint (<{ [14 x i8], i8 }>* @"symbolic $ss9OptionSetP" to i64), i32 1, i32 8, i64 ptrtoint ([8 x i8]* @81 to i64), i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64) }, section "__DATA,__swift5_assocty, regular, no_dead_strip", align 4
@"$ss9OptionSetMp" = external global %swift.protocol, align 4
@"got.$ss9OptionSetMp" = private unnamed_addr constant %swift.protocol* @"$ss9OptionSetMp"
@"$ss9OptionSetPSYTb" = external global %swift.protocol_requirement, align 4
@"got.$ss9OptionSetPSYTb" = private unnamed_addr constant %swift.protocol_requirement* @"$ss9OptionSetPSYTb"
@"$ss9OptionSetPs0B7AlgebraTb" = external global %swift.protocol_requirement, align 4
@"got.$ss9OptionSetPs0B7AlgebraTb" = private unnamed_addr constant %swift.protocol_requirement* @"$ss9OptionSetPs0B7AlgebraTb"
@"$ss9OptionSetP8rawValuex03RawD0Qz_tcfCTq" = external global %swift.method_descriptor, align 4
@"got.$ss9OptionSetP8rawValuex03RawD0Qz_tcfCTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss9OptionSetP8rawValuex03RawD0Qz_tcfCTq"
@82 = internal global [16 x i8*] zeroinitializer
@"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMc" = linkonce_odr hidden constant { i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 } { i64 add (i64 ptrtoint (%swift.protocol** @"got.$ss9OptionSetMp" to i64), i64 1), i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64), i64 0, i32 196800, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s6XCTestMXM" to i64), i32 3, i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$ss9OptionSetPSYTb" to i64), i64 1), i64 ptrtoint (i8* getelementptr (i8, i8* getelementptr inbounds (<{ i8, i8, i64, i8 }>, <{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs9OptionSetSCSY", i32 0, i32 0), i64 1) to i64), i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$ss9OptionSetPs0B7AlgebraTb" to i64), i64 1), i64 ptrtoint (i8* getelementptr (i8, i8* getelementptr inbounds (<{ i8, i8, i64, i8 }>, <{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs9OptionSetSCs0E7Algebra", i32 0, i32 0), i64 1) to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss9OptionSetP8rawValuex03RawD0Qz_tcfCTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSu*, %swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCsACP8rawValuex03RawG0Qz_tcfCTW" to i64), i16 0, i16 1, i64 0, i64 ptrtoint ([16 x i8*]* @82 to i64) }, section "__DATA,__const", align 4
@"symbolic $ss10SetAlgebraP" = linkonce_odr hidden constant <{ [16 x i8], i8 }> <{ [16 x i8] c"$ss10SetAlgebraP", i8 0 }>, section "__DATA,__swift5_typeref, regular, no_dead_strip", align 2
@"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMA" = linkonce_odr hidden constant { i64, i64, i32, i32, i64, i64 } { i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i64 ptrtoint (<{ [16 x i8], i8 }>* @"symbolic $ss10SetAlgebraP" to i64), i32 1, i32 8, i64 ptrtoint ([8 x i8]* @81 to i64), i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64) }, section "__DATA,__swift5_assocty, regular, no_dead_strip", align 4
@"$ss10SetAlgebraMp" = external global %swift.protocol, align 4
@"got.$ss10SetAlgebraMp" = private unnamed_addr constant %swift.protocol* @"$ss10SetAlgebraMp"
@"$ss10SetAlgebraPSQTb" = external global %swift.protocol_requirement, align 4
@"got.$ss10SetAlgebraPSQTb" = private unnamed_addr constant %swift.protocol_requirement* @"$ss10SetAlgebraPSQTb"
@"$ss10SetAlgebraPs25ExpressibleByArrayLiteralTb" = external global %swift.protocol_requirement, align 4
@"got.$ss10SetAlgebraPs25ExpressibleByArrayLiteralTb" = private unnamed_addr constant %swift.protocol_requirement* @"$ss10SetAlgebraPs25ExpressibleByArrayLiteralTb"
@"$s7Elements10SetAlgebraPTl" = external global %swift.protocol_requirement, align 4
@"got.$s7Elements10SetAlgebraPTl" = private unnamed_addr constant %swift.protocol_requirement* @"$s7Elements10SetAlgebraPTl"
@"$ss10SetAlgebraPxycfCTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraPxycfCTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraPxycfCTq"
@"$ss10SetAlgebraP8containsySb7ElementQzFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP8containsySb7ElementQzFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP8containsySb7ElementQzFTq"
@"$ss10SetAlgebraP5unionyxxnFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP5unionyxxnFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP5unionyxxnFTq"
@"$ss10SetAlgebraP12intersectionyxxFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP12intersectionyxxFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP12intersectionyxxFTq"
@"$ss10SetAlgebraP19symmetricDifferenceyxxnFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP19symmetricDifferenceyxxnFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP19symmetricDifferenceyxxnFTq"
@"$ss10SetAlgebraP6insertySb8inserted_7ElementQz17memberAfterInserttAFnFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP6insertySb8inserted_7ElementQz17memberAfterInserttAFnFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP6insertySb8inserted_7ElementQz17memberAfterInserttAFnFTq"
@"$ss10SetAlgebraP6removey7ElementQzSgAEFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP6removey7ElementQzSgAEFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP6removey7ElementQzSgAEFTq"
@"$ss10SetAlgebraP6update4with7ElementQzSgAFn_tFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP6update4with7ElementQzSgAFn_tFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP6update4with7ElementQzSgAFn_tFTq"
@"$ss10SetAlgebraP9formUnionyyxnFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP9formUnionyyxnFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP9formUnionyyxnFTq"
@"$ss10SetAlgebraP16formIntersectionyyxFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP16formIntersectionyyxFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP16formIntersectionyyxFTq"
@"$ss10SetAlgebraP23formSymmetricDifferenceyyxnFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP23formSymmetricDifferenceyyxnFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP23formSymmetricDifferenceyyxnFTq"
@"$ss10SetAlgebraP11subtractingyxxFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP11subtractingyxxFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP11subtractingyxxFTq"
@"$ss10SetAlgebraP8isSubset2ofSbx_tFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP8isSubset2ofSbx_tFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP8isSubset2ofSbx_tFTq"
@"$ss10SetAlgebraP10isDisjoint4withSbx_tFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP10isDisjoint4withSbx_tFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP10isDisjoint4withSbx_tFTq"
@"$ss10SetAlgebraP10isSuperset2ofSbx_tFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP10isSuperset2ofSbx_tFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP10isSuperset2ofSbx_tFTq"
@"$ss10SetAlgebraP7isEmptySbvgTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP7isEmptySbvgTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP7isEmptySbvgTq"
@"$ss10SetAlgebraPyxqd__ncSTRd__7ElementQyd__ACRtzlufCTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraPyxqd__ncSTRd__7ElementQyd__ACRtzlufCTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraPyxqd__ncSTRd__7ElementQyd__ACRtzlufCTq"
@"$ss10SetAlgebraP8subtractyyxFTq" = external global %swift.method_descriptor, align 4
@"got.$ss10SetAlgebraP8subtractyyxFTq" = private unnamed_addr constant %swift.method_descriptor* @"$ss10SetAlgebraP8subtractyyxFTq"
@83 = internal global [16 x i8*] zeroinitializer
@"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMc" = linkonce_odr hidden constant { i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 } { i64 add (i64 ptrtoint (%swift.protocol** @"got.$ss10SetAlgebraMp" to i64), i64 1), i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64), i64 0, i32 196800, i64 ptrtoint (<{ i32, i64, i64 }>* @"$s6XCTestMXM" to i64), i32 21, i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$ss10SetAlgebraPSQTb" to i64), i64 1), i64 ptrtoint (i8* getelementptr (i8, i8* getelementptr inbounds (<{ i8, i8, i64, i8 }>, <{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs10SetAlgebraSCSQ", i32 0, i32 0), i64 1) to i64), i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$ss10SetAlgebraPs25ExpressibleByArrayLiteralTb" to i64), i64 1), i64 ptrtoint (i8* getelementptr (i8, i8* getelementptr inbounds (<{ i8, i8, i64, i8 }>, <{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs10SetAlgebraSCs25ExpressibleByArrayLiteral", i32 0, i32 0), i64 1) to i64), i64 add (i64 ptrtoint (%swift.protocol_requirement** @"got.$s7Elements10SetAlgebraPTl" to i64), i64 1), i64 add (i64 ptrtoint (<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV" to i64), i64 1), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraPxycfCTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACPxycfCTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP8containsySb7ElementQzFTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP8containsySb7ElementQzFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP5unionyxxnFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP5unionyxxnFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP12intersectionyxxFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP12intersectionyxxFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP19symmetricDifferenceyxxnFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP19symmetricDifferenceyxxnFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP6insertySb8inserted_7ElementQz17memberAfterInserttAFnFTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP6insertySb8inserted_7ElementQz17memberAfterInserttAHnFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP6removey7ElementQzSgAEFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsVSg*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP6removey7ElementQzSgAGFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP6update4with7ElementQzSgAFn_tFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsVSg*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP6update4with7ElementQzSgAHn_tFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP9formUnionyyxnFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP9formUnionyyxnFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP16formIntersectionyyxFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP16formIntersectionyyxFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP23formSymmetricDifferenceyyxnFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP23formSymmetricDifferenceyyxnFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP11subtractingyxxFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP11subtractingyxxFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP8isSubset2ofSbx_tFTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP8isSubset2ofSbx_tFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP10isDisjoint4withSbx_tFTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP10isDisjoint4withSbx_tFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP10isSuperset2ofSbx_tFTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP10isSuperset2ofSbx_tFTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP7isEmptySbvgTq" to i64), i64 1), i64 ptrtoint (i1 (%TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP7isEmptySbvgTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraPyxqd__ncSTRd__7ElementQyd__ACRtzlufCTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %swift.opaque*, %swift.type*, i8**, %swift.type*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACPyxqd__ncSTRd__7ElementQyd__AERtzlufCTW" to i64), i64 add (i64 ptrtoint (%swift.method_descriptor** @"got.$ss10SetAlgebraP8subtractyyxFTq" to i64), i64 1), i64 ptrtoint (void (%TSo20XCUIKeyModifierFlagsV*, %TSo20XCUIKeyModifierFlagsV*, %swift.type*, i8**)* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP8subtractyyxFTW" to i64), i16 0, i16 1, i64 0, i64 ptrtoint ([16 x i8*]* @83 to i64) }, section "__DATA,__const", align 4
@"\01l_protocol_conformances" = private constant [5 x i64] [i64 ptrtoint ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMc" to i64), i64 ptrtoint ({ i64, i64, i64, i32, i64, i32, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSQSCMc" to i64), i64 ptrtoint ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSYSCMc" to i64), i64 ptrtoint ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMc" to i64), i64 ptrtoint ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMc" to i64)], section "__DATA, __swift5_proto, regular, no_dead_strip", align 4
@"\01l_type_metadata_table" = private constant [14 x %swift.type_metadata_record] [%swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMn" to i64) }, %swift.type_metadata_record { i64 ptrtoint (<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn" to i64) }], section "__DATA, __swift5_types, regular, no_dead_strip", align 4
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@84 = private unnamed_addr constant [18 x i8] c"XCTestObservation\00"
@_PROTOCOL_NSObject = private constant { i8*, i8*, i8*, { i32, i32, [26 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [4 x { i8*, i8* }] }*, i32, i32, [27 x i8*]*, i8*, i8* } { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @91, i64 0, i64 0), i8* null, { i32, i32, [26 x { i8*, i8*, i8* }] }* @_PROTOCOL_INSTANCE_METHODS_NSObject, i8* null, { i32, i32, [1 x { i8*, i8*, i8* }] }* @_PROTOCOL_INSTANCE_METHODS_OPT_NSObject, i8* null, { i32, i32, [4 x { i8*, i8* }] }* @_PROTOCOL_PROPERTIES_NSObject, i32 96, i32 0, [27 x i8*]* @_PROTOCOL_METHOD_TYPES_NSObject, i8* null, i8* null }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_LABEL_PROTOCOL_$_NSObject" = weak hidden global i8* bitcast ({ i8*, i8*, i8*, { i32, i32, [26 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [4 x { i8*, i8* }] }*, i32, i32, [27 x i8*]*, i8*, i8* }* @_PROTOCOL_NSObject to i8*), section "__DATA,__objc_protolist,coalesced,no_dead_strip", align 8
@"\01l_OBJC_PROTOCOL_REFERENCE_$_NSObject" = weak hidden global i8* bitcast ({ i8*, i8*, i8*, { i32, i32, [26 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [4 x { i8*, i8* }] }*, i32, i32, [27 x i8*]*, i8*, i8* }* @_PROTOCOL_NSObject to i8*), section "__DATA,__objc_protorefs,coalesced,no_dead_strip", align 8
@_PROTOCOL_PROTOCOLS_XCTestObservation = private constant { i64, [1 x i8*] } { i64 1, [1 x i8*] [i8* bitcast ({ i8*, i8*, i8*, { i32, i32, [26 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [1 x { i8*, i8*, i8* }] }*, i8*, { i32, i32, [4 x { i8*, i8* }] }*, i32, i32, [27 x i8*]*, i8*, i8* }* @_PROTOCOL_NSObject to i8*)] }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(testBundleWillStart:)" = private global [21 x i8] c"testBundleWillStart:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@85 = private unnamed_addr constant [11 x i8] c"v24@0:8@16\00"
@"\01L_selector_data(testBundleDidFinish:)" = private global [21 x i8] c"testBundleDidFinish:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(testSuiteWillStart:)" = private global [20 x i8] c"testSuiteWillStart:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(testSuite:didFailWithDescription:inFile:atLine:)" = private global [48 x i8] c"testSuite:didFailWithDescription:inFile:atLine:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(testSuiteDidFinish:)" = private global [20 x i8] c"testSuiteDidFinish:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(testCaseWillStart:)" = private global [19 x i8] c"testCaseWillStart:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(testCaseDidFinish:)" = private global [19 x i8] c"testCaseDidFinish:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_PROTOCOL_INSTANCE_METHODS_OPT_XCTestObservation = private constant { i32, i32, [8 x { i8*, i8*, i8* }] } { i32 24, i32 8, [8 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"\01L_selector_data(testBundleWillStart:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"\01L_selector_data(testBundleDidFinish:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(testSuiteWillStart:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"\01L_selector_data(testSuite:didFailWithDescription:inFile:atLine:)", i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @15, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(testSuiteDidFinish:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"\01L_selector_data(testCaseWillStart:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"\01L_selector_data(testCase:didFailWithDescription:inFile:atLine:)", i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @15, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"\01L_selector_data(testCaseDidFinish:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @85, i64 0, i64 0), i8* null }] }, section "__DATA, __objc_const", align 8
@86 = private unnamed_addr constant [21 x i8] c"v24@0:8@\22NSBundle\2216\00"
@87 = private unnamed_addr constant [24 x i8] c"v24@0:8@\22XCTestSuite\2216\00"
@88 = private unnamed_addr constant [53 x i8] c"v48@0:8@\22XCTestSuite\2216@\22NSString\2224@\22NSString\2232q40\00"
@89 = private unnamed_addr constant [23 x i8] c"v24@0:8@\22XCTestCase\2216\00"
@90 = private unnamed_addr constant [52 x i8] c"v48@0:8@\22XCTestCase\2216@\22NSString\2224@\22NSString\2232q40\00"
@_PROTOCOL_METHOD_TYPES_XCTestObservation = private constant [8 x i8*] [i8* getelementptr inbounds ([21 x i8], [21 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @86, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @88, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @87, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @89, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @90, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @89, i64 0, i64 0)], section "__DATA, __objc_const", align 8
@91 = private unnamed_addr constant [9 x i8] c"NSObject\00"
@"\01L_selector_data(isEqual:)" = private global [9 x i8] c"isEqual:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@92 = private unnamed_addr constant [11 x i8] c"c24@0:8@16\00"
@"\01L_selector_data(hash)" = private global [5 x i8] c"hash\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(superclass)" = private global [11 x i8] c"superclass\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@93 = private unnamed_addr constant [8 x i8] c"#16@0:8\00"
@"\01L_selector_data(class)" = private global [6 x i8] c"class\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(self)" = private global [5 x i8] c"self\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(performSelector:)" = private global [17 x i8] c"performSelector:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@94 = private unnamed_addr constant [12 x i8] c"^@24@0:8:16\00"
@"\01L_selector_data(performSelector:withObject:)" = private global [28 x i8] c"performSelector:withObject:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@95 = private unnamed_addr constant [15 x i8] c"^@32@0:8:16@24\00"
@"\01L_selector_data(performSelector:withObject:withObject:)" = private global [39 x i8] c"performSelector:withObject:withObject:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@96 = private unnamed_addr constant [18 x i8] c"^@40@0:8:16@24@32\00"
@"\01L_selector_data(isProxy)" = private global [8 x i8] c"isProxy\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(isKindOfClass:)" = private global [15 x i8] c"isKindOfClass:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@97 = private unnamed_addr constant [11 x i8] c"c24@0:8#16\00"
@"\01L_selector_data(isMemberOfClass:)" = private global [17 x i8] c"isMemberOfClass:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(conformsToProtocol:)" = private global [20 x i8] c"conformsToProtocol:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(respondsToSelector:)" = private global [20 x i8] c"respondsToSelector:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@98 = private unnamed_addr constant [11 x i8] c"c24@0:8:16\00"
@"\01L_selector_data(retain)" = private global [7 x i8] c"retain\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(release)" = private global [8 x i8] c"release\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(autorelease)" = private global [12 x i8] c"autorelease\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(retainCount)" = private global [12 x i8] c"retainCount\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_selector_data(zone)" = private global [5 x i8] c"zone\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@99 = private unnamed_addr constant [9 x i8] c"^v16@0:8\00"
@"\01L_selector_data(description)" = private global [12 x i8] c"description\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_PROTOCOL_INSTANCE_METHODS_NSObject = private constant { i32, i32, [26 x { i8*, i8*, i8* }] } { i32 24, i32 26, [26 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"\01L_selector_data(isEqual:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @92, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(hash)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"\01L_selector_data(superclass)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @93, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"\01L_selector_data(class)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @93, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(self)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(performSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(performSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(performSelector:withObject:)", i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @95, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(performSelector:withObject:)", i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @95, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"\01L_selector_data(performSelector:withObject:withObject:)", i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @96, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"\01L_selector_data(performSelector:withObject:withObject:)", i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @96, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(isProxy)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(isKindOfClass:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(isKindOfClass:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(isMemberOfClass:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(isMemberOfClass:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(conformsToProtocol:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @92, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(conformsToProtocol:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @92, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(respondsToSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @98, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(respondsToSelector:)", i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @98, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\01L_selector_data(retain)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(release)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(autorelease)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(retainCount)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(zone)", i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @99, i64 0, i64 0), i8* null }, { i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(description)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* null }] }, section "__DATA, __objc_const", align 8
@"\01L_selector_data(debugDescription)" = private global [17 x i8] c"debugDescription\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@_PROTOCOL_INSTANCE_METHODS_OPT_NSObject = private constant { i32, i32, [1 x { i8*, i8*, i8* }] } { i32 24, i32 1, [1 x { i8*, i8*, i8* }] [{ i8*, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(debugDescription)", i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* null }] }, section "__DATA, __objc_const", align 8
@100 = private unnamed_addr constant [5 x i8] c"hash\00"
@101 = private unnamed_addr constant [7 x i8] c"Tq,N,R\00"
@102 = private unnamed_addr constant [11 x i8] c"superclass\00"
@103 = private unnamed_addr constant [7 x i8] c"T#,N,R\00"
@104 = private unnamed_addr constant [12 x i8] c"description\00"
@105 = private unnamed_addr constant [17 x i8] c"T@\22NSString\22,N,R\00"
@106 = private unnamed_addr constant [17 x i8] c"debugDescription\00"
@_PROTOCOL_PROPERTIES_NSObject = private constant { i32, i32, [4 x { i8*, i8* }] } { i32 16, i32 4, [4 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @100, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @101, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @102, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @103, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @104, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @105, i64 0, i64 0) }, { i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @106, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @105, i64 0, i64 0) }] }, section "__DATA, __objc_const", align 8
@107 = private unnamed_addr constant [21 x i8] c"c24@0:8@\22Protocol\2216\00"
@108 = private unnamed_addr constant [18 x i8] c"@\22NSString\2216@0:8\00"
@_PROTOCOL_METHOD_TYPES_NSObject = private constant [27 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @92, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @93, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @95, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @96, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @97, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @107, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @107, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @98, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @99, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @108, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @108, i64 0, i64 0)], section "__DATA, __objc_const", align 8
@objc_classes = internal global [13 x i8*] [i8* bitcast (%swift.type* @"$s7_XCTest26FailureDescriptionObserverCN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CN" to i8*), i8* bitcast (%swift.type* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CN" to i8*)], section "__DATA,__objc_classlist,regular,no_dead_strip", align 8
@llvm.used = appending global [44 x i8*] [i8* bitcast (i8** @"\01l_OBJC_LABEL_PROTOCOL_$_XCTestObservation" to i8*), i8* bitcast (i8** @"\01l_OBJC_PROTOCOL_REFERENCE_$_XCTestObservation" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32, i32, i64, i64 }* @"$s7_XCTest26FailureDescriptionObserverCMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMF" to i8*), i8* bitcast ({ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMF" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftXCTest_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftAppKit_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftFoundation_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftObjectiveC_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftDarwin_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCoreFoundation_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftDispatch_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCoreGraphics_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftIOKit_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftXPC_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCoreData_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftQuartzCore_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftMetal_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCoreImage_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCompatibility50_$__XCTest" to i8*), i8* bitcast (void ()** @"_swift_FORCE_LOAD_$_swiftCompatibilityDynamicReplacements_$__XCTest" to i8*), i8* bitcast ({ i32, i32, i32, i64 }* @"\01l__swift5_reflection_descriptor" to i8*), i8* bitcast ({ i64, i32, i32, i32, i32 }* @"$sSo20XCUIKeyModifierFlagsVMB" to i8*), i8* bitcast ({ i64, i32, i16, i16, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVMF" to i8*), i8* bitcast ({ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMA" to i8*), i8* bitcast ({ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSYSCMA" to i8*), i8* bitcast ({ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMA" to i8*), i8* bitcast ({ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMA" to i8*), i8* bitcast ([5 x i64]* @"\01l_protocol_conformances" to i8*), i8* bitcast ([14 x %swift.type_metadata_record]* @"\01l_type_metadata_table" to i8*), i8* bitcast (i16* @__swift_reflection_version to i8*), i8* bitcast (i8** @"\01l_OBJC_LABEL_PROTOCOL_$_NSObject" to i8*), i8* bitcast (i8** @"\01l_OBJC_PROTOCOL_REFERENCE_$_NSObject" to i8*), i8* bitcast ([13 x i8*]* @objc_classes to i8*)], section "llvm.metadata", align 8
@llvm.compiler.used = appending global [113 x i8*] [i8* bitcast (%objc_class** @"OBJC_CLASS_REF_$_XCTestObservationCenter" to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(sharedTestObservationCenter)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(sharedTestObservationCenter)" to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(removeTestObserver:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(removeTestObserver:)" to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(addTestObserver:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(addTestObserver:)" to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(dealloc)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(dealloc)" to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(init)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(init)" to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"\01L_selector_data(testCase:didFailWithDescription:inFile:atLine:)", i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(.cxx_destruct)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_raises)", i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"\01L_selector_data(test_raisesDuringAssertion)", i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"\01L_selector_data(test_continueAfterFailureWithAssertions)", i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(initWithInvocation:)", i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(initWithSelector:)", i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"\01L_selector_data(test_whenEqual_passes)", i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"\01L_selector_data(test_whenNotEqual_fails)", i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"\01L_selector_data(test_whenOptionalsAreEqual_passes)", i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"\01L_selector_data(test_whenOptionalsAreNotEqual_fails)", i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"\01L_selector_data(test_whenArraysAreEqual_passes)", i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"\01L_selector_data(test_whenArraysAreNotEqual_fails)", i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @"\01L_selector_data(test_whenDictionariesAreEqual_passes)", i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"\01L_selector_data(test_whenDictionariesAreNotEqual_fails)", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(doThrow)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(setDoThrow:)", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"\01L_selector_data(errorCode)", i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(setErrorCode:)", i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(throwSomethingAndReturnError:)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(test_throws)", i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(test_withThrowing)", i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"\01L_selector_data(test_withThrowingAndReturnError:)", i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(test_noThrow_void)", i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(test_noThrow_returns_string)", i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(test_throwing)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(testTypeKey)", i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"\01L_selector_data(typeKey:modifierFlags:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(typeKey:modifierFlags:)" to i8*), i8* bitcast (i8** @"\01L_selector(initWithSelector:)" to i8*), i8* bitcast (i8** @"\01L_selector(initWithInvocation:)" to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(initWithDomain:code:userInfo:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(initWithDomain:code:userInfo:)" to i8*), i8* bitcast (i8** @"\01L_selector(throwSomethingAndReturnError:)" to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(code)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(code)" to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\01L_selector_data(domain)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(domain)" to i8*), i8* bitcast (%objc_class** @"OBJC_CLASS_REF_$_NSDictionary" to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"\01L_selector_data(setContinueAfterFailure:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(setContinueAfterFailure:)" to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"\01L_selector_data(raise)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(raise)" to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"\01L_selector_data(initWithName:reason:userInfo:)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(initWithName:reason:userInfo:)" to i8*), i8* bitcast (i8** @"\01L_selector(test_withThrowingAndReturnError:)" to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(testRun)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(testRun)" to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"\01L_selector_data(testCaseCount)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(testCaseCount)" to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(executionCount)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(executionCount)" to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"\01L_selector_data(failureCount)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(failureCount)" to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @"\01L_selector_data(unexpectedExceptionCount)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(unexpectedExceptionCount)" to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"\01L_selector_data(totalFailureCount)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(totalFailureCount)" to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"\01L_selector_data(hasSucceeded)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(hasSucceeded)" to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(runTest)", i32 0, i32 0), i8* bitcast (i8** @"\01L_selector(runTest)" to i8*), i8* bitcast (i8** @"\01L_selector(test_withThrowing)" to i8*), i8* bitcast (i8** @"\01L_selector(test_throws)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenEqual_passes)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenNotEqual_fails)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenDictionariesAreEqual_passes)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenDictionariesAreNotEqual_fails)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenArraysAreEqual_passes)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenArraysAreNotEqual_fails)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenOptionalsAreEqual_passes)" to i8*), i8* bitcast (i8** @"\01L_selector(test_whenOptionalsAreNotEqual_fails)" to i8*), i8* bitcast (i8** @"\01L_selector(test_raises)" to i8*), i8* bitcast (i8** @"\01L_selector(test_raisesDuringAssertion)" to i8*), i8* bitcast (i8** @"\01L_selector(test_continueAfterFailureWithAssertions)" to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"\01L_selector_data(testBundleWillStart:)", i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"\01L_selector_data(testBundleDidFinish:)", i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(testSuiteWillStart:)", i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"\01L_selector_data(testSuite:didFailWithDescription:inFile:atLine:)", i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(testSuiteDidFinish:)", i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"\01L_selector_data(testCaseWillStart:)", i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"\01L_selector_data(testCaseDidFinish:)", i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @"\01L_selector_data(isEqual:)", i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(hash)", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"\01L_selector_data(superclass)", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"\01L_selector_data(class)", i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(self)", i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(performSelector:)", i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"\01L_selector_data(performSelector:withObject:)", i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @"\01L_selector_data(performSelector:withObject:withObject:)", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(isProxy)", i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"\01L_selector_data(isKindOfClass:)", i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(isMemberOfClass:)", i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(conformsToProtocol:)", i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"\01L_selector_data(respondsToSelector:)", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"\01L_selector_data(retain)", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"\01L_selector_data(release)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(autorelease)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(retainCount)", i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"\01L_selector_data(zone)", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"\01L_selector_data(description)", i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"\01L_selector_data(debugDescription)", i32 0, i32 0)], section "llvm.metadata", align 8

@"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvgTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn", i32 0, i32 13)
@"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvsTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn", i32 0, i32 14)
@"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvMTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn", i32 0, i32 15)
@"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitFTq" = hidden alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn", i32 0, i32 16)
@"$s7_XCTest26FailureDescriptionObserverCN" = hidden alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTest26FailureDescriptionObserverC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, { i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)*, void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* }>, <{ void (%T7_XCTest26FailureDescriptionObserverC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, { i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)*, void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* }>* @"$s7_XCTest26FailureDescriptionObserverCMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtC7_XCTest26FailureDescriptionObserver" = hidden alias %swift.type, %swift.type* @"$s7_XCTest26FailureDescriptionObserverCN"
@"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn", i32 0, i32 13)
@"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyFTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn", i32 0, i32 14)
@"$s7_XCTestyycfU_17ExceptionTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU_FT_T_L_17ExceptionTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CN"
@"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU0_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU0_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU0_FT_T_L_19AssertEqualTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CN"
@"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU1_FT_T_L_27AssertEqualOptionalTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CN"
@"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU2_FT_T_L_24AssertEqualArrayTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CN"
@"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU3_FT_T_L_29AssertEqualDictionaryTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CN"
@"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU4_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU4_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU4_FT_T_L_19AssertEqualTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CN"
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i32 0, i32 13)
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i32 0, i32 14)
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i32 0, i32 15)
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i32 0, i32 16)
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i32 0, i32 17)
@"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", i32 0, i32 18)
@"$s7_XCTestyycfU5_13ErrorTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU5_FT_T_L_13ErrorTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CN"
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i32 0, i32 13)
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i32 0, i32 14)
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i32 0, i32 15)
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i32 0, i32 16)
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i32 0, i32 17)
@"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", i32 0, i32 18)
@"$s7_XCTestyycfU6_13ErrorTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU6_FT_T_L_13ErrorTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CN"
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i32 0, i32 13)
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i32 0, i32 14)
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i32 0, i32 15)
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i32 0, i32 16)
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i32 0, i32 17)
@"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", i32 0, i32 18)
@"$s7_XCTestyycfU7_13ErrorTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU7_FT_T_L_13ErrorTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CN"
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i32 0, i32 13)
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i32 0, i32 14)
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i32 0, i32 15)
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivgTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i32 0, i32 16)
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivsTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i32 0, i32 17)
@"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivMTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", i32 0, i32 18)
@"$s7_XCTestyycfU8_13ErrorTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU8_FT_T_L_13ErrorTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CN"
@"$s7_XCTestyycfU9_19RunActivityTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU9_19RunActivityTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU9_19RunActivityTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU9_FT_T_L_19RunActivityTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CN"
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyFTq" = internal alias %swift.method_descriptor, getelementptr inbounds (<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMn", i32 0, i32 13)
@"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CN" = internal alias %swift.type, bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMf", i32 0, i32 2) to %swift.type*)
@"OBJC_CLASS_$__TtCF7_XCTestU10_FT_T_L_15TypeKeyTestCase" = internal alias %swift.type, %swift.type* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CN"

define i32 @main(i32, i8**) #0 {
entry:
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch1 = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %access-scratch3 = alloca [24 x i8], align 8
  %access-scratch4 = alloca [24 x i8], align 8
  %access-scratch5 = alloca [24 x i8], align 8
  %access-scratch6 = alloca [24 x i8], align 8
  %access-scratch7 = alloca [24 x i8], align 8
  %access-scratch8 = alloca [24 x i8], align 8
  %access-scratch9 = alloca [24 x i8], align 8
  %access-scratch10 = alloca [24 x i8], align 8
  %access-scratch11 = alloca [24 x i8], align 8
  %2 = bitcast i8** %1 to i8*
  %3 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest9TestSuiteCMa"(i64 0) #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i64 0, i64 0), i64 6, i1 true)
  %6 = extractvalue { i64, %swift.bridge* } %5, 0
  %7 = extractvalue { i64, %swift.bridge* } %5, 1
  %8 = call swiftcc %T14StdlibUnittest9TestSuiteC* @"$s14StdlibUnittest9TestSuiteCyACSScfC"(i64 %6, %swift.bridge* %7, %swift.type* swiftself %4)
  store %T14StdlibUnittest9TestSuiteC* %8, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %9 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %9)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %10 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %11 = bitcast %T14StdlibUnittest9TestSuiteC* %10 to %swift.refcounted*
  %12 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %11) #3
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %13)
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1, i64 0, i64 0), i64 10, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %17 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %18 = extractvalue { i64, %swift.bridge* } %17, 0
  %19 = extractvalue { i64, %swift.bridge* } %17, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %15, %swift.bridge* %16, i64 %18, %swift.bridge* %19, i64 46, i8* bitcast (void ()* @"$s7_XCTestyycfU_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %10)
  call void @swift_bridgeObjectRelease(%swift.bridge* %19) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %16) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %10) #3
  %20 = bitcast [24 x i8]* %access-scratch1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %20)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch1, i64 32, i8* null) #3
  %21 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %22 = bitcast %T14StdlibUnittest9TestSuiteC* %21 to %swift.refcounted*
  %23 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %22) #3
  call void @swift_endAccess([24 x i8]* %access-scratch1) #3
  %24 = bitcast [24 x i8]* %access-scratch1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %24)
  %25 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @3, i64 0, i64 0), i64 16, i1 true)
  %26 = extractvalue { i64, %swift.bridge* } %25, 0
  %27 = extractvalue { i64, %swift.bridge* } %25, 1
  %28 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %29 = extractvalue { i64, %swift.bridge* } %28, 0
  %30 = extractvalue { i64, %swift.bridge* } %28, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %26, %swift.bridge* %27, i64 %29, %swift.bridge* %30, i64 94, i8* bitcast (void ()* @"$s7_XCTestyycfU0_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %21)
  call void @swift_bridgeObjectRelease(%swift.bridge* %30) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %27) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %21) #3
  %31 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %31)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch2, i64 32, i8* null) #3
  %32 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %33 = bitcast %T14StdlibUnittest9TestSuiteC* %32 to %swift.refcounted*
  %34 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %33) #3
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %35 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %35)
  %36 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @4, i64 0, i64 0), i64 26, i1 true)
  %37 = extractvalue { i64, %swift.bridge* } %36, 0
  %38 = extractvalue { i64, %swift.bridge* } %36, 1
  %39 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %40 = extractvalue { i64, %swift.bridge* } %39, 0
  %41 = extractvalue { i64, %swift.bridge* } %39, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %37, %swift.bridge* %38, i64 %40, %swift.bridge* %41, i64 119, i8* bitcast (void ()* @"$s7_XCTestyycfU1_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %32)
  call void @swift_bridgeObjectRelease(%swift.bridge* %41) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %38) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %32) #3
  %42 = bitcast [24 x i8]* %access-scratch3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %42)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch3, i64 32, i8* null) #3
  %43 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %44 = bitcast %T14StdlibUnittest9TestSuiteC* %43 to %swift.refcounted*
  %45 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %44) #3
  call void @swift_endAccess([24 x i8]* %access-scratch3) #3
  %46 = bitcast [24 x i8]* %access-scratch3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %46)
  %47 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @5, i64 0, i64 0), i64 23, i1 true)
  %48 = extractvalue { i64, %swift.bridge* } %47, 0
  %49 = extractvalue { i64, %swift.bridge* } %47, 1
  %50 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %51 = extractvalue { i64, %swift.bridge* } %50, 0
  %52 = extractvalue { i64, %swift.bridge* } %50, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %48, %swift.bridge* %49, i64 %51, %swift.bridge* %52, i64 153, i8* bitcast (void ()* @"$s7_XCTestyycfU2_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %43)
  call void @swift_bridgeObjectRelease(%swift.bridge* %52) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %49) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %43) #3
  %53 = bitcast [24 x i8]* %access-scratch4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %53)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch4, i64 32, i8* null) #3
  %54 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %55 = bitcast %T14StdlibUnittest9TestSuiteC* %54 to %swift.refcounted*
  %56 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %55) #3
  call void @swift_endAccess([24 x i8]* %access-scratch4) #3
  %57 = bitcast [24 x i8]* %access-scratch4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %57)
  %58 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @6, i64 0, i64 0), i64 31, i1 true)
  %59 = extractvalue { i64, %swift.bridge* } %58, 0
  %60 = extractvalue { i64, %swift.bridge* } %58, 1
  %61 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %62 = extractvalue { i64, %swift.bridge* } %61, 0
  %63 = extractvalue { i64, %swift.bridge* } %61, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %59, %swift.bridge* %60, i64 %62, %swift.bridge* %63, i64 187, i8* bitcast (void ()* @"$s7_XCTestyycfU3_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %54)
  call void @swift_bridgeObjectRelease(%swift.bridge* %63) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %60) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %54) #3
  %64 = bitcast [24 x i8]* %access-scratch5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %64)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch5, i64 32, i8* null) #3
  %65 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %66 = bitcast %T14StdlibUnittest9TestSuiteC* %65 to %swift.refcounted*
  %67 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %66) #3
  call void @swift_endAccess([24 x i8]* %access-scratch5) #3
  %68 = bitcast [24 x i8]* %access-scratch5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %68)
  %69 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @7, i64 0, i64 0), i64 43, i1 true)
  %70 = extractvalue { i64, %swift.bridge* } %69, 0
  %71 = extractvalue { i64, %swift.bridge* } %69, 1
  %72 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %73 = extractvalue { i64, %swift.bridge* } %72, 0
  %74 = extractvalue { i64, %swift.bridge* } %72, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %70, %swift.bridge* %71, i64 %73, %swift.bridge* %74, i64 221, i8* bitcast (void ()* @"$s7_XCTestyycfU4_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %65)
  call void @swift_bridgeObjectRelease(%swift.bridge* %74) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %71) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %65) #3
  %75 = bitcast [24 x i8]* %access-scratch6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %75)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch6, i64 32, i8* null) #3
  %76 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %77 = bitcast %T14StdlibUnittest9TestSuiteC* %76 to %swift.refcounted*
  %78 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %77) #3
  call void @swift_endAccess([24 x i8]* %access-scratch6) #3
  %79 = bitcast [24 x i8]* %access-scratch6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %79)
  %80 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @8, i64 0, i64 0), i64 20, i1 true)
  %81 = extractvalue { i64, %swift.bridge* } %80, 0
  %82 = extractvalue { i64, %swift.bridge* } %80, 1
  %83 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %84 = extractvalue { i64, %swift.bridge* } %83, 0
  %85 = extractvalue { i64, %swift.bridge* } %83, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %81, %swift.bridge* %82, i64 %84, %swift.bridge* %85, i64 245, i8* bitcast (void ()* @"$s7_XCTestyycfU5_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %76)
  call void @swift_bridgeObjectRelease(%swift.bridge* %85) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %82) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %76) #3
  %86 = bitcast [24 x i8]* %access-scratch7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %86)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch7, i64 32, i8* null) #3
  %87 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %88 = bitcast %T14StdlibUnittest9TestSuiteC* %87 to %swift.refcounted*
  %89 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %88) #3
  call void @swift_endAccess([24 x i8]* %access-scratch7) #3
  %90 = bitcast [24 x i8]* %access-scratch7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %90)
  %91 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @9, i64 0, i64 0), i64 16, i1 true)
  %92 = extractvalue { i64, %swift.bridge* } %91, 0
  %93 = extractvalue { i64, %swift.bridge* } %91, 1
  %94 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %95 = extractvalue { i64, %swift.bridge* } %94, 0
  %96 = extractvalue { i64, %swift.bridge* } %94, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %92, %swift.bridge* %93, i64 %95, %swift.bridge* %96, i64 313, i8* bitcast (void ()* @"$s7_XCTestyycfU6_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %87)
  call void @swift_bridgeObjectRelease(%swift.bridge* %96) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %93) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %87) #3
  %97 = bitcast [24 x i8]* %access-scratch8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %97)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch8, i64 32, i8* null) #3
  %98 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %99 = bitcast %T14StdlibUnittest9TestSuiteC* %98 to %swift.refcounted*
  %100 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %99) #3
  call void @swift_endAccess([24 x i8]* %access-scratch8) #3
  %101 = bitcast [24 x i8]* %access-scratch8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %101)
  %102 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @10, i64 0, i64 0), i64 36, i1 true)
  %103 = extractvalue { i64, %swift.bridge* } %102, 0
  %104 = extractvalue { i64, %swift.bridge* } %102, 1
  %105 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %106 = extractvalue { i64, %swift.bridge* } %105, 0
  %107 = extractvalue { i64, %swift.bridge* } %105, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %103, %swift.bridge* %104, i64 %106, %swift.bridge* %107, i64 374, i8* bitcast (void ()* @"$s7_XCTestyycfU7_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %98)
  call void @swift_bridgeObjectRelease(%swift.bridge* %107) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %104) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %98) #3
  %108 = bitcast [24 x i8]* %access-scratch9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %108)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch9, i64 32, i8* null) #3
  %109 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %110 = bitcast %T14StdlibUnittest9TestSuiteC* %109 to %swift.refcounted*
  %111 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %110) #3
  call void @swift_endAccess([24 x i8]* %access-scratch9) #3
  %112 = bitcast [24 x i8]* %access-scratch9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %112)
  %113 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @11, i64 0, i64 0), i64 34, i1 true)
  %114 = extractvalue { i64, %swift.bridge* } %113, 0
  %115 = extractvalue { i64, %swift.bridge* } %113, 1
  %116 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %117 = extractvalue { i64, %swift.bridge* } %116, 0
  %118 = extractvalue { i64, %swift.bridge* } %116, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %114, %swift.bridge* %115, i64 %117, %swift.bridge* %118, i64 421, i8* bitcast (void ()* @"$s7_XCTestyycfU8_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %109)
  call void @swift_bridgeObjectRelease(%swift.bridge* %118) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %115) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %109) #3
  %119 = bitcast [24 x i8]* %access-scratch10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %119)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch10, i64 32, i8* null) #3
  %120 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %121 = bitcast %T14StdlibUnittest9TestSuiteC* %120 to %swift.refcounted*
  %122 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %121) #3
  call void @swift_endAccess([24 x i8]* %access-scratch10) #3
  %123 = bitcast [24 x i8]* %access-scratch10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %123)
  %124 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @12, i64 0, i64 0), i64 36, i1 true)
  %125 = extractvalue { i64, %swift.bridge* } %124, 0
  %126 = extractvalue { i64, %swift.bridge* } %124, 1
  %127 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %128 = extractvalue { i64, %swift.bridge* } %127, 0
  %129 = extractvalue { i64, %swift.bridge* } %127, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %125, %swift.bridge* %126, i64 %128, %swift.bridge* %129, i64 468, i8* bitcast (void ()* @"$s7_XCTestyycfU9_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %120)
  call void @swift_bridgeObjectRelease(%swift.bridge* %129) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %126) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %120) #3
  %130 = call swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64 10, i64 11, i64 0)
  br i1 %130, label %131, label %143

131:                                              ; preds = %entry
  %132 = bitcast [24 x i8]* %access-scratch11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %132)
  call void @swift_beginAccess(i8* bitcast (%T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp" to i8*), [24 x i8]* %access-scratch11, i64 32, i8* null) #3
  %133 = load %T14StdlibUnittest9TestSuiteC*, %T14StdlibUnittest9TestSuiteC** @"$s7_XCTest0A9TestSuite14StdlibUnittest0bC0Cvp", align 8
  %134 = bitcast %T14StdlibUnittest9TestSuiteC* %133 to %swift.refcounted*
  %135 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %134) #3
  call void @swift_endAccess([24 x i8]* %access-scratch11) #3
  %136 = bitcast [24 x i8]* %access-scratch11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %136)
  %137 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @13, i64 0, i64 0), i64 37, i1 true)
  %138 = extractvalue { i64, %swift.bridge* } %137, 0
  %139 = extractvalue { i64, %swift.bridge* } %137, 1
  %140 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %141 = extractvalue { i64, %swift.bridge* } %140, 0
  %142 = extractvalue { i64, %swift.bridge* } %140, 1
  call swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64 %138, %swift.bridge* %139, i64 %141, %swift.bridge* %142, i64 508, i8* bitcast (void ()* @"$s7_XCTestyycfU10_" to i8*), %swift.refcounted* null, %T14StdlibUnittest9TestSuiteC* swiftself %133)
  call void @swift_bridgeObjectRelease(%swift.bridge* %142) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %139) #3
  call void bitcast (void (%swift.refcounted*)* @swift_release to void (%T14StdlibUnittest9TestSuiteC*)*)(%T14StdlibUnittest9TestSuiteC* %133) #3
  br label %144

143:                                              ; preds = %entry
  br label %144

144:                                              ; preds = %131, %143
  call swiftcc void @"$s14StdlibUnittest11runAllTestsyyF"()
  ret i32 0
}

declare swiftcc %swift.metadata_response @"$s14StdlibUnittest9TestSuiteCMa"(i64) #0

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

declare swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8*, i64, i1) #0

declare swiftcc %T14StdlibUnittest9TestSuiteC* @"$s14StdlibUnittest9TestSuiteCyACSScfC"(i64, %swift.bridge*, %swift.type* swiftself) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @swift_beginAccess(i8*, [24 x i8]*, i64, i8*) #3

; Function Attrs: nounwind
declare %swift.refcounted* @swift_retain(%swift.refcounted* returned) #3

; Function Attrs: nounwind
declare void @swift_endAccess([24 x i8]*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

define hidden swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"() #0 {
entry:
  %0 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo17XCTestObservation_pMD") #6
  %1 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 0, %swift.type* %0)
  %2 = extractvalue { %swift.bridge*, i8* } %1, 0
  %3 = extractvalue { %swift.bridge*, i8* } %1, 1
  %4 = bitcast i8* %3 to %TSo17XCTestObservationP*
  ret %swift.bridge* %2
}

define hidden swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge*, i8*, %swift.opaque*) #0 {
entry:
  %observers.debug = alloca %swift.bridge*, align 8
  %3 = bitcast %swift.bridge** %observers.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %run.debug = alloca %swift.noescape.function, align 8
  %4 = bitcast %swift.noescape.function* %run.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %"$observer$generator" = alloca %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG, align 8
  %5 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator" to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  %6 = alloca %TSa, align 8
  %7 = alloca %TSo17XCTestObservation_pSg, align 8
  %"$observer$generator1" = alloca %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG, align 8
  %8 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator1" to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = alloca %TSa, align 8
  %10 = alloca %TSo17XCTestObservation_pSg, align 8
  %observer.debug = alloca %objc_object*, align 8
  %11 = bitcast %objc_object** %observer.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 8, i1 false)
  %observer.debug3 = alloca %objc_object*, align 8
  %12 = bitcast %objc_object** %observer.debug3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 8, i1 false)
  store %swift.bridge* %0, %swift.bridge** %observers.debug, align 8
  %13 = bitcast %swift.noescape.function* %run.debug to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13)
  %run.debug.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %run.debug, i32 0, i32 0
  store i8* %1, i8** %run.debug.fn, align 8
  %run.debug.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %run.debug, i32 0, i32 1
  store %swift.opaque* %2, %swift.opaque** %run.debug.data, align 8
  %14 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14)
  %15 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %0) #3
  %16 = bitcast %TSa* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16)
  %._buffer = getelementptr inbounds %TSa, %TSa* %6, i32 0, i32 0
  %._buffer._storage = getelementptr inbounds %Ts12_ArrayBufferV, %Ts12_ArrayBufferV* %._buffer, i32 0, i32 0
  %._buffer._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, %Ts14_BridgeStorageV* %._buffer._storage, i32 0, i32 0
  store %swift.bridge* %0, %swift.bridge** %._buffer._storage.rawValue, align 8
  %17 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator" to %Ts16IndexingIteratorV*
  %18 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSaySo17XCTestObservation_pGMD") #6
  %19 = call i8** @"$sSaySo17XCTestObservation_pGSayxGSlsWl"() #6
  %20 = bitcast %TSa* %6 to %swift.opaque*
  call swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(%Ts16IndexingIteratorV* noalias nocapture sret %17, %swift.type* %18, i8** %19, %swift.opaque* noalias nocapture swiftself %20)
  %21 = bitcast %TSa* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21)
  br label %22

22:                                               ; preds = %33, %entry
  %23 = bitcast %TSo17XCTestObservation_pSg* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23)
  %24 = bitcast %TSo17XCTestObservation_pSg* %7 to %TSq.1*
  %25 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$ss16IndexingIteratorVySaySo17XCTestObservation_pGGMD") #6
  %26 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator" to %Ts16IndexingIteratorV.2*
  call swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(%TSq.1* noalias nocapture sret %24, %swift.type* %25, %Ts16IndexingIteratorV.2* nocapture swiftself %26)
  %27 = bitcast %TSo17XCTestObservation_pSg* %7 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %TSo17XCTestObservation_pSg* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29)
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %22
  %32 = inttoptr i64 %28 to %objc_object*
  br label %33

33:                                               ; preds = %31
  %34 = phi %objc_object* [ %32, %31 ]
  store %objc_object* %34, %objc_object** %observer.debug3, align 8
  %35 = load %objc_class*, %objc_class** @"OBJC_CLASS_REF_$_XCTestObservationCenter", align 8
  %36 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* %35)
  %37 = load i8*, i8** @"\01L_selector(sharedTestObservationCenter)", align 8
  %38 = bitcast %objc_class* %36 to i8*
  %39 = call %1* bitcast (void ()* @objc_msgSend to %1* (i8*, i8*)*)(i8* %38, i8* %37)
  %40 = bitcast %1* %39 to i8*
  %41 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %40)
  %42 = bitcast i8* %41 to %1*
  %43 = bitcast %1* %42 to %TSo23XCTestObservationCenterC*
  %44 = load i8*, i8** @"\01L_selector(addTestObserver:)", align 8
  %45 = bitcast %objc_object* %34 to i8*
  %46 = bitcast %TSo23XCTestObservationCenterC* %43 to %1*
  call void bitcast (void ()* @objc_msgSend to void (%1*, i8*, i8*)*)(%1* %46, i8* %44, i8* %45)
  %47 = bitcast %TSo23XCTestObservationCenterC* %43 to i8*
  call void @llvm.objc.release(i8* %47)
  call void @swift_unknownObjectRelease(%objc_object* %34) #3
  br label %22

48:                                               ; preds = %22
  %49 = call %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* @"$ss16IndexingIteratorVySaySo17XCTestObservation_pGGWOh"(%Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator")
  %50 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator" to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %50)
  %51 = bitcast i8* %1 to void (%swift.refcounted*)*
  %52 = bitcast %swift.opaque* %2 to %swift.refcounted*
  call swiftcc void %51(%swift.refcounted* swiftself %52)
  %53 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator1" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %53)
  %54 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %0) #3
  %55 = bitcast %TSa* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55)
  %._buffer2 = getelementptr inbounds %TSa, %TSa* %9, i32 0, i32 0
  %._buffer2._storage = getelementptr inbounds %Ts12_ArrayBufferV, %Ts12_ArrayBufferV* %._buffer2, i32 0, i32 0
  %._buffer2._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, %Ts14_BridgeStorageV* %._buffer2._storage, i32 0, i32 0
  store %swift.bridge* %0, %swift.bridge** %._buffer2._storage.rawValue, align 8
  %56 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator1" to %Ts16IndexingIteratorV*
  %57 = bitcast %TSa* %9 to %swift.opaque*
  call swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(%Ts16IndexingIteratorV* noalias nocapture sret %56, %swift.type* %18, i8** %19, %swift.opaque* noalias nocapture swiftself %57)
  %58 = bitcast %TSa* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58)
  br label %59

59:                                               ; preds = %69, %48
  %60 = bitcast %TSo17XCTestObservation_pSg* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60)
  %61 = bitcast %TSo17XCTestObservation_pSg* %10 to %TSq.1*
  %62 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator1" to %Ts16IndexingIteratorV.2*
  call swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(%TSq.1* noalias nocapture sret %61, %swift.type* %25, %Ts16IndexingIteratorV.2* nocapture swiftself %62)
  %63 = bitcast %TSo17XCTestObservation_pSg* %10 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %TSo17XCTestObservation_pSg* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65)
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %84, label %67

67:                                               ; preds = %59
  %68 = inttoptr i64 %64 to %objc_object*
  br label %69

69:                                               ; preds = %67
  %70 = phi %objc_object* [ %68, %67 ]
  store %objc_object* %70, %objc_object** %observer.debug, align 8
  %71 = load %objc_class*, %objc_class** @"OBJC_CLASS_REF_$_XCTestObservationCenter", align 8
  %72 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* %71)
  %73 = load i8*, i8** @"\01L_selector(sharedTestObservationCenter)", align 8
  %74 = bitcast %objc_class* %72 to i8*
  %75 = call %1* bitcast (void ()* @objc_msgSend to %1* (i8*, i8*)*)(i8* %74, i8* %73)
  %76 = bitcast %1* %75 to i8*
  %77 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %76)
  %78 = bitcast i8* %77 to %1*
  %79 = bitcast %1* %78 to %TSo23XCTestObservationCenterC*
  %80 = load i8*, i8** @"\01L_selector(removeTestObserver:)", align 8
  %81 = bitcast %objc_object* %70 to i8*
  %82 = bitcast %TSo23XCTestObservationCenterC* %79 to %1*
  call void bitcast (void ()* @objc_msgSend to void (%1*, i8*, i8*)*)(%1* %82, i8* %80, i8* %81)
  %83 = bitcast %TSo23XCTestObservationCenterC* %79 to i8*
  call void @llvm.objc.release(i8* %83)
  call void @swift_unknownObjectRelease(%objc_object* %70) #3
  br label %59

84:                                               ; preds = %59
  %85 = call %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* @"$ss16IndexingIteratorVySaySo17XCTestObservation_pGGWOh"(%Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator1")
  %86 = bitcast %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %"$observer$generator1" to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %86)
  ret void
}

define hidden swiftcc { i64, i64 } @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpfi"() #0 {
entry:
  ret { i64, i64 } zeroinitializer
}

define hidden swiftcc { i64, i64 } @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvg"(%T7_XCTest26FailureDescriptionObserverC* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %1 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTest26FailureDescriptionObserverC* %0, %T7_XCTest26FailureDescriptionObserverC** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd", align 8
  %2 = bitcast %T7_XCTest26FailureDescriptionObserverC* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.failureDescription = bitcast i8* %3 to %TSSSg*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSSSg* %.failureDescription to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %6 = bitcast %TSSSg* %.failureDescription to { i64, i64 }*
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  call void @"$sSSSgWOy"(i64 %8, i64 %10)
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %11 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %11)
  %12 = insertvalue { i64, i64 } undef, i64 %8, 0
  %13 = insertvalue { i64, i64 } %12, i64 %10, 1
  ret { i64, i64 } %13
}

define hidden swiftcc void @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvs"(i64, i64, %T7_XCTest26FailureDescriptionObserverC* swiftself) #0 {
entry:
  %value.debug = alloca %TSSSg, align 8
  %3 = bitcast %TSSSg* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  %self.debug = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %4 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %5 = bitcast %TSSSg* %value.debug to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %5)
  %6 = bitcast %TSSSg* %value.debug to { i64, i64 }*
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0
  store i64 %0, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  store i64 %1, i64* %8, align 8
  store %T7_XCTest26FailureDescriptionObserverC* %2, %T7_XCTest26FailureDescriptionObserverC** %self.debug, align 8
  call void @"$sSSSgWOy"(i64 %0, i64 %1)
  %offset = load i64, i64* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd", align 8
  %9 = bitcast %T7_XCTest26FailureDescriptionObserverC* %2 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %offset
  %.failureDescription = bitcast i8* %10 to %TSSSg*
  %11 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast %TSSSg* %.failureDescription to i8*
  call void @swift_beginAccess(i8* %12, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %13 = bitcast %TSSSg* %.failureDescription to { i64, i64 }*
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %TSSSg* %.failureDescription to { i64, i64 }*
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %1, i64* %20, align 8
  call void @"$sSSSgWOe"(i64 %15, i64 %17)
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %21 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  call void @"$sSSSgWOe"(i64 %0, i64 %1)
  ret void
}

; Function Attrs: noinline
define hidden swiftcc { i8*, %TSSSg* } @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM"(i8* noalias dereferenceable(32), %T7_XCTest26FailureDescriptionObserverC* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame", %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTest26FailureDescriptionObserverC* %1, %T7_XCTest26FailureDescriptionObserverC** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd", align 8
  %3 = bitcast %T7_XCTest26FailureDescriptionObserverC* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.failureDescription = bitcast i8* %4 to %TSSSg*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSSSg* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.resume.0" to i8*), %TSSSg* undef }, %TSSSg* %.failureDescription, 1
  ret { i8*, %TSSSg* } %6
}

define internal swiftcc void @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame"*
  %vFrame = bitcast %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame", %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame", %"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define hidden swiftcc void @"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitF"(%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC* swiftself) #0 {
entry:
  %testCase.debug = alloca %TSo10XCTestCaseC*, align 8
  %7 = bitcast %TSo10XCTestCaseC** %testCase.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 8, i1 false)
  %description.debug = alloca %TSS, align 8
  %8 = bitcast %TSS* %description.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %filePath.debug = alloca %TSSSg, align 8
  %9 = bitcast %TSSSg* %filePath.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  %lineNumber.debug = alloca i64, align 8
  %10 = bitcast i64* %lineNumber.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 8, i1 false)
  %self.debug = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %11 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 8, i1 false)
  store %TSo10XCTestCaseC* %0, %TSo10XCTestCaseC** %testCase.debug, align 8
  %12 = bitcast %TSS* %description.debug to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12)
  %description.debug._guts = getelementptr inbounds %TSS, %TSS* %description.debug, i32 0, i32 0
  %description.debug._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %description.debug._guts, i32 0, i32 0
  %description.debug._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %description.debug._guts._object, i32 0, i32 0
  %description.debug._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %description.debug._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %1, i64* %description.debug._guts._object._countAndFlagsBits._value, align 8
  %description.debug._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %description.debug._guts._object, i32 0, i32 1
  store %swift.bridge* %2, %swift.bridge** %description.debug._guts._object._object, align 8
  %13 = bitcast %TSSSg* %filePath.debug to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13)
  %14 = bitcast %TSSSg* %filePath.debug to { i64, i64 }*
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %4, i64* %16, align 8
  store i64 %5, i64* %lineNumber.debug, align 8
  store %T7_XCTest26FailureDescriptionObserverC* %6, %T7_XCTest26FailureDescriptionObserverC** %self.debug, align 8
  %17 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %2) #3
  %18 = ptrtoint %swift.bridge* %2 to i64
  %19 = bitcast %T7_XCTest26FailureDescriptionObserverC* %6 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* @swift_isaMask, align 8
  %22 = and i64 %20, %21
  %23 = inttoptr i64 %22 to %swift.type*
  %24 = bitcast %swift.type* %23 to void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)**
  %25 = getelementptr inbounds void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)** %24, i64 12
  %26 = load void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)** %25, align 8, !invariant.load !178
  call swiftcc void %26(i64 %1, i64 %18, %T7_XCTest26FailureDescriptionObserverC* swiftself %6)
  ret void
}

define internal void @"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitFTo"(%2*, i8*, %3*, %0*, %0*, i64) unnamed_addr #0 {
entry:
  %6 = bitcast %2* %0 to %T7_XCTest26FailureDescriptionObserverC*
  %7 = bitcast %3* %2 to %TSo10XCTestCaseC*
  %8 = bitcast %0* %3 to %TSo8NSStringC*
  %9 = ptrtoint %0* %4 to i64
  %10 = bitcast %T7_XCTest26FailureDescriptionObserverC* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* @swift_isaMask, align 8
  %13 = and i64 %11, %12
  %14 = inttoptr i64 %13 to %swift.type*
  %15 = bitcast %TSo10XCTestCaseC* %7 to i8*
  %16 = call i8* @llvm.objc.retain(i8* %15)
  %17 = bitcast i8* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo8NSStringC* %8 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %TSo8NSStringC*
  %21 = inttoptr i64 %9 to %objc_object*
  %22 = bitcast %objc_object* %21 to i8*
  %23 = call i8* @llvm.objc.retain(i8* %22)
  %24 = bitcast i8* %23 to %objc_object*
  %25 = bitcast %T7_XCTest26FailureDescriptionObserverC* %6 to i8*
  %26 = call i8* @llvm.objc.retain(i8* %25)
  %27 = bitcast i8* %26 to %T7_XCTest26FailureDescriptionObserverC*
  %28 = ptrtoint %TSo8NSStringC* %8 to i64
  %29 = call swiftcc { i64, %swift.bridge* } @"$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ"(i64 %28) #13
  %30 = extractvalue { i64, %swift.bridge* } %29, 0
  %31 = extractvalue { i64, %swift.bridge* } %29, 1
  %32 = icmp eq i64 %9, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %entry
  %34 = inttoptr i64 %9 to %TSo8NSStringC*
  br label %35

35:                                               ; preds = %33
  %36 = phi %TSo8NSStringC* [ %34, %33 ]
  %37 = ptrtoint %TSo8NSStringC* %36 to i64
  %38 = call swiftcc { i64, %swift.bridge* } @"$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ"(i64 %37) #13
  %39 = extractvalue { i64, %swift.bridge* } %38, 0
  %40 = extractvalue { i64, %swift.bridge* } %38, 1
  %41 = ptrtoint %swift.bridge* %40 to i64
  %42 = inttoptr i64 %37 to %objc_object*
  %43 = bitcast %objc_object* %42 to i8*
  call void @llvm.objc.release(i8* %43)
  br label %45

44:                                               ; preds = %entry
  br label %45

45:                                               ; preds = %35, %44
  %46 = phi i64 [ 0, %44 ], [ %39, %35 ]
  %47 = phi i64 [ 0, %44 ], [ %41, %35 ]
  call swiftcc void @"$s7_XCTest26FailureDescriptionObserverC8testCase_011didFailWithC06inFile6atLineySo0aF0C_S2SSgSitF"(%TSo10XCTestCaseC* %7, i64 %30, %swift.bridge* %31, i64 %46, i64 %47, i64 %5, %T7_XCTest26FailureDescriptionObserverC* swiftself %6) #13
  call void @"$sSSSgWOe"(i64 %46, i64 %47)
  call void @swift_bridgeObjectRelease(%swift.bridge* %31) #3
  %48 = inttoptr i64 %28 to %objc_object*
  %49 = bitcast %objc_object* %48 to i8*
  call void @llvm.objc.release(i8* %49)
  %50 = bitcast %T7_XCTest26FailureDescriptionObserverC* %6 to i8*
  call void @llvm.objc.release(i8* %50)
  %51 = bitcast %TSo10XCTestCaseC* %7 to i8*
  call void @llvm.objc.release(i8* %51)
  ret void
}

define hidden swiftcc void @"$s7_XCTest26FailureDescriptionObserverCfD"(%T7_XCTest26FailureDescriptionObserverC* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %1 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTest26FailureDescriptionObserverC* %0, %T7_XCTest26FailureDescriptionObserverC** %self.debug, align 8
  %2 = bitcast %T7_XCTest26FailureDescriptionObserverC* %0 to %TSo8NSObjectC*
  %3 = bitcast %TSo8NSObjectC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTest26FailureDescriptionObserverCMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define hidden void @"$s7_XCTest26FailureDescriptionObserverCfETo"(%2*, i8*) #0 {
entry:
  %self.debug = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %2 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %3 = bitcast %2* %0 to %T7_XCTest26FailureDescriptionObserverC*
  %4 = bitcast %T7_XCTest26FailureDescriptionObserverC* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  store %T7_XCTest26FailureDescriptionObserverC* %3, %T7_XCTest26FailureDescriptionObserverC** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd", align 8
  %9 = bitcast %T7_XCTest26FailureDescriptionObserverC* %3 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %offset
  %.failureDescription = bitcast i8* %10 to %TSSSg*
  %11 = call %TSSSg* @"$sSSSgWOh"(%TSSSg* %.failureDescription)
  ret void
}

define hidden swiftcc %T7_XCTest26FailureDescriptionObserverC* @"$s7_XCTest26FailureDescriptionObserverCACycfC"(%swift.type* swiftself) #0 {
entry:
  %1 = bitcast %swift.type* %0 to %objc_class*
  %2 = call %objc_object* @objc_allocWithZone(%objc_class* %1)
  %3 = bitcast %objc_object* %2 to %T7_XCTest26FailureDescriptionObserverC*
  %4 = load i8*, i8** @"\01L_selector(init)", align 8
  %5 = bitcast %T7_XCTest26FailureDescriptionObserverC* %3 to %2*
  %6 = call %2* bitcast (void ()* @objc_msgSend to %2* (%2*, i8*)*)(%2* %5, i8* %4)
  %7 = bitcast %2* %6 to %T7_XCTest26FailureDescriptionObserverC*
  ret %T7_XCTest26FailureDescriptionObserverC* %7
}

define hidden swiftcc %T7_XCTest26FailureDescriptionObserverC* @"$s7_XCTest26FailureDescriptionObserverCACycfc"(%T7_XCTest26FailureDescriptionObserverC* swiftself) #0 {
entry:
  %self = alloca %T7_XCTest26FailureDescriptionObserverC*, align 8
  %1 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  %3 = bitcast %T7_XCTest26FailureDescriptionObserverC* %0 to i8*
  %4 = call i8* @llvm.objc.retain(i8* %3)
  %5 = bitcast i8* %4 to %T7_XCTest26FailureDescriptionObserverC*
  store %T7_XCTest26FailureDescriptionObserverC* %0, %T7_XCTest26FailureDescriptionObserverC** %self, align 8
  %offset = load i64, i64* @"$s7_XCTest26FailureDescriptionObserverC07failureC0SSSgvpWvd", align 8
  %6 = bitcast %T7_XCTest26FailureDescriptionObserverC* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 %offset
  %.failureDescription = bitcast i8* %7 to %TSSSg*
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %8)
  %9 = bitcast %TSSSg* %.failureDescription to i8*
  call void @swift_beginAccess(i8* %9, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %10 = bitcast %TSSSg* %.failureDescription to { i64, i64 }*
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 0, i64* %12, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %13)
  %14 = bitcast %T7_XCTest26FailureDescriptionObserverC* %0 to i8*
  call void @llvm.objc.release(i8* %14)
  %15 = load %T7_XCTest26FailureDescriptionObserverC*, %T7_XCTest26FailureDescriptionObserverC** %self, align 8
  %16 = bitcast %T7_XCTest26FailureDescriptionObserverC* %15 to %TSo8NSObjectC*
  %17 = bitcast %TSo8NSObjectC* %16 to %T7_XCTest26FailureDescriptionObserverC*
  %18 = bitcast %TSo8NSObjectC* %16 to %objc_object*
  %19 = call swiftcc %swift.metadata_response @"$s7_XCTest26FailureDescriptionObserverCMa"(i64 0) #6
  %20 = extractvalue %swift.metadata_response %19, 0
  %21 = bitcast %swift.type* %20 to %objc_class*
  %22 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %18, %objc_object** %22, align 8
  %23 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %21, %objc_class** %23, align 8
  %24 = load i8*, i8** @"\01L_selector(init)", align 8
  %25 = call %4* bitcast (void ()* @objc_msgSendSuper2 to %4* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %24)
  %26 = bitcast %4* %25 to %TSo8NSObjectC*
  %27 = bitcast %TSo8NSObjectC* %26 to %T7_XCTest26FailureDescriptionObserverC*
  %28 = bitcast %T7_XCTest26FailureDescriptionObserverC* %27 to i8*
  %29 = call i8* @llvm.objc.retain(i8* %28)
  %30 = bitcast i8* %29 to %T7_XCTest26FailureDescriptionObserverC*
  store %T7_XCTest26FailureDescriptionObserverC* %27, %T7_XCTest26FailureDescriptionObserverC** %self, align 8
  %toDestroy = load %T7_XCTest26FailureDescriptionObserverC*, %T7_XCTest26FailureDescriptionObserverC** %self, align 8
  %31 = bitcast %T7_XCTest26FailureDescriptionObserverC* %toDestroy to i8*
  call void @llvm.objc.release(i8* %31)
  %32 = bitcast %T7_XCTest26FailureDescriptionObserverC** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32)
  ret %T7_XCTest26FailureDescriptionObserverC* %27
}

define internal %2* @"$s7_XCTest26FailureDescriptionObserverCACycfcTo"(%2*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %2* %0 to %T7_XCTest26FailureDescriptionObserverC*
  %3 = bitcast %T7_XCTest26FailureDescriptionObserverC* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTest26FailureDescriptionObserverC* @"$s7_XCTest26FailureDescriptionObserverCACycfc"(%T7_XCTest26FailureDescriptionObserverC* swiftself %2) #13
  %9 = bitcast %T7_XCTest26FailureDescriptionObserverC* %8 to %2*
  ret %2* %9
}

define internal swiftcc void @"$s7_XCTestyycfU_"() #0 {
entry:
  %testRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %testRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %assertionTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %assertionTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %continueAfterFailureTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %24 = bitcast %TSo9XCTestRunC** %continueAfterFailureTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 8, i1 false)
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %TSi, align 8
  %29 = alloca %TSi, align 8
  %30 = alloca %TSi, align 8
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %Ts4Int8V, align 1
  %34 = alloca %TSi, align 8
  %35 = alloca %TSi, align 8
  %36 = alloca %Ts4Int8V, align 1
  %37 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %38 = extractvalue %swift.metadata_response %37, 0
  %39 = bitcast %swift.type* %38 to i8***
  %40 = getelementptr inbounds i8**, i8*** %39, i64 -1
  %.valueWitnesses = load i8**, i8*** %40, align 8, !invariant.load !178, !dereferenceable !179
  %41 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %42 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %41, i32 0, i32 8
  %size = load i64, i64* %42, align 8, !invariant.load !178
  %43 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %43)
  %44 = bitcast i8* %43 to %swift.opaque*
  %45 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa"(i64 0) #6
  %46 = extractvalue %swift.metadata_response %45, 0
  %47 = load i8*, i8** @"\01L_selector(test_raises)", align 8
  %48 = call swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %47, %swift.type* swiftself %46)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* %48)
  %49 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %48 to %TSo6XCTestC*
  %50 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %49)
  %51 = extractvalue { i8*, %swift.refcounted* } %50, 0
  %52 = extractvalue { i8*, %swift.refcounted* } %50, 1
  %53 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %52) #3
  %54 = bitcast %swift.refcounted* %52 to %swift.opaque*
  %55 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %55, i8* %51, %swift.opaque* %54)
  call void @swift_release(%swift.refcounted* %52) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %55) #3
  call void @swift_release(%swift.refcounted* %52) #3
  %56 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %48 to i8*
  %57 = call i8* @llvm.objc.retain(i8* %56)
  %58 = bitcast i8* %57 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %59 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %48 to %TSo6XCTestC*
  %60 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %61 = bitcast %TSo6XCTestC* %59 to %5*
  %62 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %61, i8* %60)
  %63 = bitcast %6* %62 to i8*
  %64 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %63)
  %65 = bitcast i8* %64 to %6*
  %66 = ptrtoint %6* %65 to i64
  %67 = bitcast %TSo6XCTestC* %59 to i8*
  call void @llvm.objc.release(i8* %67)
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %entry
  %70 = inttoptr i64 %66 to %TSo9XCTestRunC*
  br label %78

71:                                               ; preds = %entry
  br label %72

72:                                               ; preds = %71
  br label %73

73:                                               ; preds = %72
  br label %74

74:                                               ; preds = %73
  br label %75

75:                                               ; preds = %74
  br label %76

76:                                               ; preds = %75
  br label %77

77:                                               ; preds = %76
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 70, i32 1)
  unreachable

78:                                               ; preds = %69
  %79 = phi %TSo9XCTestRunC* [ %70, %69 ]
  store %TSo9XCTestRunC* %79, %TSo9XCTestRunC** %testRun.debug, align 8
  %80 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %81 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %82 = bitcast %TSo9XCTestRunC* %79 to %6*
  %83 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %82, i8* %81)
  %84 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %84)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %83, i64* %._value1, align 8
  %85 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %86 = extractvalue { i64, %swift.bridge* } %85, 0
  %87 = extractvalue { i64, %swift.bridge* } %85, 1
  %88 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %89 = extractvalue { i8*, %swift.refcounted* } %88, 0
  %90 = extractvalue { i8*, %swift.refcounted* } %88, 1
  %91 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %90) #3
  %92 = bitcast %swift.refcounted* %90 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %93 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %94 = bitcast %TSi* %1 to %swift.opaque*
  %95 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %94, %swift.opaque* noalias nocapture %95, i8* %89, %swift.opaque* %92, %swift.opaque* noalias nocapture %44, i1 %93, i64 %86, %swift.bridge* %87, i64 72, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %90) #3
  %96 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %97 = load i8*, i8** %96, align 8, !invariant.load !178
  %destroy = bitcast i8* %97 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %90) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %87) #3
  %98 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98)
  %99 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99)
  %100 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %100)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %101 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %102 = bitcast %TSo9XCTestRunC* %79 to %6*
  %103 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %102, i8* %101)
  %104 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %104)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %103, i64* %._value3, align 8
  %105 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %106 = extractvalue { i64, %swift.bridge* } %105, 0
  %107 = extractvalue { i64, %swift.bridge* } %105, 1
  %108 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %109 = extractvalue { i8*, %swift.refcounted* } %108, 0
  %110 = extractvalue { i8*, %swift.refcounted* } %108, 1
  %111 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %110) #3
  %112 = bitcast %swift.refcounted* %110 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %113 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %114 = bitcast %TSi* %3 to %swift.opaque*
  %115 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %114, %swift.opaque* noalias nocapture %115, i8* %109, %swift.opaque* %112, %swift.opaque* noalias nocapture %44, i1 %113, i64 %106, %swift.bridge* %107, i64 73, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %110) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %110) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %107) #3
  %116 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116)
  %117 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117)
  %118 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %118)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %119 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %120 = bitcast %TSo9XCTestRunC* %79 to %6*
  %121 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %120, i8* %119)
  %122 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %122)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %121, i64* %._value5, align 8
  %123 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %124 = extractvalue { i64, %swift.bridge* } %123, 0
  %125 = extractvalue { i64, %swift.bridge* } %123, 1
  %126 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %127 = extractvalue { i8*, %swift.refcounted* } %126, 0
  %128 = extractvalue { i8*, %swift.refcounted* } %126, 1
  %129 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %128) #3
  %130 = bitcast %swift.refcounted* %128 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %131 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %132 = bitcast %TSi* %5 to %swift.opaque*
  %133 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %132, %swift.opaque* noalias nocapture %133, i8* %127, %swift.opaque* %130, %swift.opaque* noalias nocapture %44, i1 %131, i64 %124, %swift.bridge* %125, i64 74, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %128) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %128) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %125) #3
  %134 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134)
  %135 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135)
  %136 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %136)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 1, i64* %._value6, align 8
  %137 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %138 = bitcast %TSo9XCTestRunC* %79 to %6*
  %139 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %138, i8* %137)
  %140 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %140)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %139, i64* %._value7, align 8
  %141 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %142 = extractvalue { i64, %swift.bridge* } %141, 0
  %143 = extractvalue { i64, %swift.bridge* } %141, 1
  %144 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %145 = extractvalue { i8*, %swift.refcounted* } %144, 0
  %146 = extractvalue { i8*, %swift.refcounted* } %144, 1
  %147 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %146) #3
  %148 = bitcast %swift.refcounted* %146 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %149 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %150 = bitcast %TSi* %7 to %swift.opaque*
  %151 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %150, %swift.opaque* noalias nocapture %151, i8* %145, %swift.opaque* %148, %swift.opaque* noalias nocapture %44, i1 %149, i64 %142, %swift.bridge* %143, i64 75, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %146) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %146) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %143) #3
  %152 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152)
  %153 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153)
  %154 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %154)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 1, i64* %._value8, align 8
  %155 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %156 = bitcast %TSo9XCTestRunC* %79 to %6*
  %157 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %156, i8* %155)
  %158 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %158)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %157, i64* %._value9, align 8
  %159 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %160 = extractvalue { i64, %swift.bridge* } %159, 0
  %161 = extractvalue { i64, %swift.bridge* } %159, 1
  %162 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %163 = extractvalue { i8*, %swift.refcounted* } %162, 0
  %164 = extractvalue { i8*, %swift.refcounted* } %162, 1
  %165 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %164) #3
  %166 = bitcast %swift.refcounted* %164 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %167 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %168 = bitcast %TSi* %9 to %swift.opaque*
  %169 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %168, %swift.opaque* noalias nocapture %169, i8* %163, %swift.opaque* %166, %swift.opaque* noalias nocapture %44, i1 %167, i64 %160, %swift.bridge* %161, i64 76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %164) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %164) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %161) #3
  %170 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170)
  %171 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171)
  %172 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %173 = bitcast %TSo9XCTestRunC* %79 to %6*
  %174 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %173, i8* %172)
  %175 = call i8** @"$ss4Int8VABSZsWl"() #6
  %176 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %175, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %176, label %177, label %179

177:                                              ; preds = %78
  %178 = icmp slt i8 %174, 0
  br label %180

179:                                              ; preds = %78
  br label %180

180:                                              ; preds = %177, %179
  %181 = phi i1 [ false, %179 ], [ %178, %177 ]
  %182 = call i8** @"$sS2iSZsWl"() #6
  %183 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %182, %swift.type* swiftself @"$sSiN")
  br i1 %183, label %184, label %185

184:                                              ; preds = %180
  br label %186

185:                                              ; preds = %180
  br label %186

186:                                              ; preds = %184, %185
  %187 = phi i1 [ false, %185 ], [ false, %184 ]
  %188 = icmp eq i1 %181, %187
  %189 = xor i1 %188, true
  br i1 %189, label %190, label %191

190:                                              ; preds = %186
  br label %205

191:                                              ; preds = %186
  %192 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %192)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %174, i8* %._value10, align 1
  %193 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %194 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %195 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %193, %swift.opaque* noalias nocapture swiftself %194)
  %196 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %197 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %197)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %198 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %199 = bitcast %TSi* %12 to %swift.opaque*
  %200 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %198, %swift.opaque* noalias nocapture swiftself %199)
  %201 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %202 = icmp slt i64 %195, %200
  %203 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203)
  %204 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %204)
  br i1 %202, label %241, label %252

205:                                              ; preds = %190, %241, %264, %277, %288
  %206 = phi i1 [ %296, %288 ], [ %285, %277 ], [ %272, %264 ], [ %249, %241 ], [ false, %190 ]
  %207 = xor i1 %206, true
  %208 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %209 = extractvalue { i64, %swift.bridge* } %208, 0
  %210 = extractvalue { i64, %swift.bridge* } %208, 1
  %211 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %212 = extractvalue { i8*, %swift.refcounted* } %211, 0
  %213 = extractvalue { i8*, %swift.refcounted* } %211, 1
  %214 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %213) #3
  %215 = bitcast %swift.refcounted* %213 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %44)
  %216 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %207, i8* %212, %swift.opaque* %215, %swift.opaque* noalias nocapture %44, i1 %216, i64 %209, %swift.bridge* %210, i64 77)
  call void @swift_release(%swift.refcounted* %213) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %213) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %210) #3
  %217 = load i8*, i8** @"\01L_selector(test_raisesDuringAssertion)", align 8
  %218 = call swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %217, %swift.type* swiftself %46)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* %218)
  %219 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %218 to %TSo6XCTestC*
  %220 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %219)
  %221 = extractvalue { i8*, %swift.refcounted* } %220, 0
  %222 = extractvalue { i8*, %swift.refcounted* } %220, 1
  %223 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %222) #3
  %224 = bitcast %swift.refcounted* %222 to %swift.opaque*
  %225 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %225, i8* %221, %swift.opaque* %224)
  call void @swift_release(%swift.refcounted* %222) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %225) #3
  call void @swift_release(%swift.refcounted* %222) #3
  %226 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %218 to i8*
  %227 = call i8* @llvm.objc.retain(i8* %226)
  %228 = bitcast i8* %227 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %229 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %218 to %TSo6XCTestC*
  %230 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %231 = bitcast %TSo6XCTestC* %229 to %5*
  %232 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %231, i8* %230)
  %233 = bitcast %6* %232 to i8*
  %234 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %233)
  %235 = bitcast i8* %234 to %6*
  %236 = ptrtoint %6* %235 to i64
  %237 = bitcast %TSo6XCTestC* %229 to i8*
  call void @llvm.objc.release(i8* %237)
  %238 = icmp eq i64 %236, 0
  br i1 %238, label %299, label %239

239:                                              ; preds = %205
  %240 = inttoptr i64 %236 to %TSo9XCTestRunC*
  br label %306

241:                                              ; preds = %191
  %242 = bitcast %TSi* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %242)
  %243 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %243)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %36, i32 0, i32 0
  store i8 %174, i8* %._value32, align 1
  %244 = bitcast %TSi* %35 to %swift.opaque*
  %245 = bitcast %Ts4Int8V* %36 to %swift.opaque*
  %246 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %244, %swift.opaque* noalias nocapture %245, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %198, i8** %246, %swift.type* swiftself @"$sSiN")
  %247 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %247)
  %._value33 = getelementptr inbounds %TSi, %TSi* %35, i32 0, i32 0
  %248 = load i64, i64* %._value33, align 8
  %249 = icmp eq i64 %248, 0
  %250 = call %TSi* @"$sSiWOh"(%TSi* %35)
  %251 = bitcast %TSi* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %251)
  br label %205

252:                                              ; preds = %191
  %253 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %253)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %174, i8* %._value12, align 1
  %254 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %255 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %193, %swift.opaque* noalias nocapture swiftself %254)
  %256 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %257 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %257)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %258 = bitcast %TSi* %14 to %swift.opaque*
  %259 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %198, %swift.opaque* noalias nocapture swiftself %258)
  %260 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %261 = icmp slt i64 %259, %255
  %262 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262)
  %263 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %263)
  br i1 %261, label %264, label %275

264:                                              ; preds = %252
  %265 = bitcast %Ts4Int8V* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %265)
  %266 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %266)
  %._value30 = getelementptr inbounds %TSi, %TSi* %34, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %267 = bitcast %Ts4Int8V* %33 to %swift.opaque*
  %268 = bitcast %TSi* %34 to %swift.opaque*
  %269 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %267, %swift.opaque* noalias nocapture %268, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %193, i8** %269, %swift.type* swiftself @"$ss4Int8VN")
  %270 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270)
  %._value31 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %33, i32 0, i32 0
  %271 = load i8, i8* %._value31, align 1
  %272 = icmp eq i8 %174, %271
  %273 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %33)
  %274 = bitcast %Ts4Int8V* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %274)
  br label %205

275:                                              ; preds = %252
  %276 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %175, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %276, label %277, label %288

277:                                              ; preds = %275
  %278 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %278)
  %279 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %279)
  %._value28 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  store i8 %174, i8* %._value28, align 1
  %280 = bitcast %TSi* %31 to %swift.opaque*
  %281 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %282 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %280, %swift.opaque* noalias nocapture %281, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %198, i8** %282, %swift.type* swiftself @"$sSiN")
  %283 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %283)
  %._value29 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  %284 = load i64, i64* %._value29, align 8
  %285 = icmp eq i64 %284, 0
  %286 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %287 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287)
  br label %205

288:                                              ; preds = %275
  %289 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %289)
  %290 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %290)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %291 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %292 = bitcast %TSi* %16 to %swift.opaque*
  %293 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %291, %swift.opaque* noalias nocapture %292, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %193, i8** %293, %swift.type* swiftself @"$ss4Int8VN")
  %294 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %294)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %295 = load i8, i8* %._value15, align 1
  %296 = icmp eq i8 %174, %295
  %297 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %298 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %298)
  br label %205

299:                                              ; preds = %205
  br label %300

300:                                              ; preds = %299
  br label %301

301:                                              ; preds = %300
  br label %302

302:                                              ; preds = %301
  br label %303

303:                                              ; preds = %302
  br label %304

304:                                              ; preds = %303
  br label %305

305:                                              ; preds = %304
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 81, i32 1)
  unreachable

306:                                              ; preds = %239
  %307 = phi %TSo9XCTestRunC* [ %240, %239 ]
  store %TSo9XCTestRunC* %307, %TSo9XCTestRunC** %assertionTestRun.debug, align 8
  %308 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %308)
  %._value16 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value16, align 8
  %309 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %310 = bitcast %TSo9XCTestRunC* %307 to %6*
  %311 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %310, i8* %309)
  %312 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %312)
  %._value17 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %311, i64* %._value17, align 8
  %313 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %314 = extractvalue { i64, %swift.bridge* } %313, 0
  %315 = extractvalue { i64, %swift.bridge* } %313, 1
  %316 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %317 = extractvalue { i8*, %swift.refcounted* } %316, 0
  %318 = extractvalue { i8*, %swift.refcounted* } %316, 1
  %319 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %318) #3
  %320 = bitcast %swift.refcounted* %318 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %321 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %322 = bitcast %TSi* %18 to %swift.opaque*
  %323 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %322, %swift.opaque* noalias nocapture %323, i8* %317, %swift.opaque* %320, %swift.opaque* noalias nocapture %44, i1 %321, i64 %314, %swift.bridge* %315, i64 82, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %318) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %318) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %315) #3
  %324 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %324)
  %325 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %325)
  %326 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %326)
  %._value18 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 0, i64* %._value18, align 8
  %327 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %328 = bitcast %TSo9XCTestRunC* %307 to %6*
  %329 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %328, i8* %327)
  %330 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %330)
  %._value19 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %329, i64* %._value19, align 8
  %331 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %332 = extractvalue { i64, %swift.bridge* } %331, 0
  %333 = extractvalue { i64, %swift.bridge* } %331, 1
  %334 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %335 = extractvalue { i8*, %swift.refcounted* } %334, 0
  %336 = extractvalue { i8*, %swift.refcounted* } %334, 1
  %337 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %336) #3
  %338 = bitcast %swift.refcounted* %336 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %339 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %340 = bitcast %TSi* %20 to %swift.opaque*
  %341 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %340, %swift.opaque* noalias nocapture %341, i8* %335, %swift.opaque* %338, %swift.opaque* noalias nocapture %44, i1 %339, i64 %332, %swift.bridge* %333, i64 83, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %336) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %336) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %333) #3
  %342 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %342)
  %343 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %343)
  %344 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %344)
  %._value20 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 1, i64* %._value20, align 8
  %345 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %346 = bitcast %TSo9XCTestRunC* %307 to %6*
  %347 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %346, i8* %345)
  %348 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %348)
  %._value21 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %347, i64* %._value21, align 8
  %349 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %350 = extractvalue { i64, %swift.bridge* } %349, 0
  %351 = extractvalue { i64, %swift.bridge* } %349, 1
  %352 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %353 = extractvalue { i8*, %swift.refcounted* } %352, 0
  %354 = extractvalue { i8*, %swift.refcounted* } %352, 1
  %355 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %354) #3
  %356 = bitcast %swift.refcounted* %354 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %357 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %358 = bitcast %TSi* %22 to %swift.opaque*
  %359 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %358, %swift.opaque* noalias nocapture %359, i8* %353, %swift.opaque* %356, %swift.opaque* noalias nocapture %44, i1 %357, i64 %350, %swift.bridge* %351, i64 84, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %354) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %354) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %351) #3
  %360 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %360)
  %361 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %361)
  %362 = load i8*, i8** @"\01L_selector(test_continueAfterFailureWithAssertions)", align 8
  %363 = call swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %362, %swift.type* swiftself %46)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* %363)
  %364 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %363 to %TSo6XCTestC*
  %365 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %364)
  %366 = extractvalue { i8*, %swift.refcounted* } %365, 0
  %367 = extractvalue { i8*, %swift.refcounted* } %365, 1
  %368 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %367) #3
  %369 = bitcast %swift.refcounted* %367 to %swift.opaque*
  %370 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %370, i8* %366, %swift.opaque* %369)
  call void @swift_release(%swift.refcounted* %367) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %370) #3
  call void @swift_release(%swift.refcounted* %367) #3
  %371 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %363 to i8*
  %372 = call i8* @llvm.objc.retain(i8* %371)
  %373 = bitcast i8* %372 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %374 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %363 to %TSo6XCTestC*
  %375 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %376 = bitcast %TSo6XCTestC* %374 to %5*
  %377 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %376, i8* %375)
  %378 = bitcast %6* %377 to i8*
  %379 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %378)
  %380 = bitcast i8* %379 to %6*
  %381 = ptrtoint %6* %380 to i64
  %382 = bitcast %TSo6XCTestC* %374 to i8*
  call void @llvm.objc.release(i8* %382)
  %383 = icmp eq i64 %381, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %306
  %385 = inttoptr i64 %381 to %TSo9XCTestRunC*
  br label %393

386:                                              ; preds = %306
  br label %387

387:                                              ; preds = %386
  br label %388

388:                                              ; preds = %387
  br label %389

389:                                              ; preds = %388
  br label %390

390:                                              ; preds = %389
  br label %391

391:                                              ; preds = %390
  br label %392

392:                                              ; preds = %391
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 88, i32 1)
  unreachable

393:                                              ; preds = %384
  %394 = phi %TSo9XCTestRunC* [ %385, %384 ]
  store %TSo9XCTestRunC* %394, %TSo9XCTestRunC** %continueAfterFailureTestRun.debug, align 8
  %395 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %395)
  %._value22 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 1, i64* %._value22, align 8
  %396 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %397 = bitcast %TSo9XCTestRunC* %394 to %6*
  %398 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %397, i8* %396)
  %399 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %399)
  %._value23 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 %398, i64* %._value23, align 8
  %400 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %401 = extractvalue { i64, %swift.bridge* } %400, 0
  %402 = extractvalue { i64, %swift.bridge* } %400, 1
  %403 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %404 = extractvalue { i8*, %swift.refcounted* } %403, 0
  %405 = extractvalue { i8*, %swift.refcounted* } %403, 1
  %406 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %405) #3
  %407 = bitcast %swift.refcounted* %405 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %408 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %409 = bitcast %TSi* %25 to %swift.opaque*
  %410 = bitcast %TSi* %26 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %409, %swift.opaque* noalias nocapture %410, i8* %404, %swift.opaque* %407, %swift.opaque* noalias nocapture %44, i1 %408, i64 %401, %swift.bridge* %402, i64 89, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %405) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %405) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %402) #3
  %411 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411)
  %412 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412)
  %413 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %413)
  %._value24 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 1, i64* %._value24, align 8
  %414 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %415 = bitcast %TSo9XCTestRunC* %394 to %6*
  %416 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %415, i8* %414)
  %417 = bitcast %TSi* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %417)
  %._value25 = getelementptr inbounds %TSi, %TSi* %28, i32 0, i32 0
  store i64 %416, i64* %._value25, align 8
  %418 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %419 = extractvalue { i64, %swift.bridge* } %418, 0
  %420 = extractvalue { i64, %swift.bridge* } %418, 1
  %421 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %422 = extractvalue { i8*, %swift.refcounted* } %421, 0
  %423 = extractvalue { i8*, %swift.refcounted* } %421, 1
  %424 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %423) #3
  %425 = bitcast %swift.refcounted* %423 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %426 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %427 = bitcast %TSi* %27 to %swift.opaque*
  %428 = bitcast %TSi* %28 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %427, %swift.opaque* noalias nocapture %428, i8* %422, %swift.opaque* %425, %swift.opaque* noalias nocapture %44, i1 %426, i64 %419, %swift.bridge* %420, i64 90, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %423) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %423) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %420) #3
  %429 = bitcast %TSi* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %429)
  %430 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %430)
  %431 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %431)
  %._value26 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value26, align 8
  %432 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %433 = bitcast %TSo9XCTestRunC* %394 to %6*
  %434 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %433, i8* %432)
  %435 = bitcast %TSi* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %435)
  %._value27 = getelementptr inbounds %TSi, %TSi* %30, i32 0, i32 0
  store i64 %434, i64* %._value27, align 8
  %436 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %437 = extractvalue { i64, %swift.bridge* } %436, 0
  %438 = extractvalue { i64, %swift.bridge* } %436, 1
  %439 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %440 = extractvalue { i8*, %swift.refcounted* } %439, 0
  %441 = extractvalue { i8*, %swift.refcounted* } %439, 1
  %442 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %441) #3
  %443 = bitcast %swift.refcounted* %441 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %44, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %444 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %445 = bitcast %TSi* %29 to %swift.opaque*
  %446 = bitcast %TSi* %30 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %445, %swift.opaque* noalias nocapture %446, i8* %440, %swift.opaque* %443, %swift.opaque* noalias nocapture %44, i1 %444, i64 %437, %swift.bridge* %438, i64 91, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %441) #3
  call void %destroy(%swift.opaque* noalias %44, %swift.type* %38) #3
  call void @swift_release(%swift.refcounted* %441) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %438) #3
  %447 = bitcast %TSi* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %447)
  %448 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %448)
  %449 = bitcast %TSo9XCTestRunC* %394 to i8*
  call void @llvm.objc.release(i8* %449)
  %450 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %363 to i8*
  call void @llvm.objc.release(i8* %450)
  %451 = bitcast %TSo9XCTestRunC* %307 to i8*
  call void @llvm.objc.release(i8* %451)
  %452 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %218 to i8*
  call void @llvm.objc.release(i8* %452)
  %453 = bitcast %TSo9XCTestRunC* %79 to i8*
  call void @llvm.objc.release(i8* %453)
  %454 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %48 to i8*
  call void @llvm.objc.release(i8* %454)
  %455 = bitcast %swift.opaque* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %455)
  ret void
}

; Function Attrs: noinline
declare swiftcc void @"$s14StdlibUnittest9TestSuiteC4test_4file4line_ySS_SSSuyyctF"(i64, %swift.bridge*, i64, %swift.bridge*, i64, i8*, %swift.refcounted*, %T14StdlibUnittest9TestSuiteC* swiftself) #4

; Function Attrs: nounwind
declare void @swift_bridgeObjectRelease(%swift.bridge*) #3

; Function Attrs: nounwind
declare void @swift_release(%swift.refcounted*) #3

define internal swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %4 to %7*
  %7 = call %7* bitcast (void ()* @objc_msgSend to %7* (%7*, i8*, i8*)*)(%7* %6, i8* %5, i8* %0)
  %8 = bitcast %7* %7 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  ret %T7_XCTestyycfU_17ExceptionTestCaseL_C* %8
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC*) #0 {
entry:
  %1 = bitcast %TSo6XCTestC* %0 to i8*
  %2 = call i8* @llvm.objc.retain(i8* %1)
  %3 = bitcast i8* %2 to %TSo6XCTestC*
  %4 = call noalias %swift.refcounted* @swift_allocObject(%swift.type* getelementptr inbounds (%swift.full_boxmetadata, %swift.full_boxmetadata* @metadata, i32 0, i32 2), i64 24, i64 7) #3
  %5 = bitcast %swift.refcounted* %4 to <{ %swift.refcounted, %TSo6XCTestC* }>*
  %6 = getelementptr inbounds <{ %swift.refcounted, %TSo6XCTestC* }>, <{ %swift.refcounted, %TSo6XCTestC* }>* %5, i32 0, i32 1
  store %TSo6XCTestC* %0, %TSo6XCTestC** %6, align 8
  %7 = insertvalue { i8*, %swift.refcounted* } { i8* bitcast (void (%swift.refcounted*)* @"$sSo6XCTestC3runyyFTOTA" to i8*), %swift.refcounted* undef }, %swift.refcounted* %4, 1
  ret { i8*, %swift.refcounted* } %7
}

define linkonce_odr hidden swiftcc void @"$sSo6XCTestC3runyyFTO"(%TSo6XCTestC* swiftself) #0 {
entry:
  %1 = bitcast %TSo6XCTestC* %0 to i8*
  %2 = call i8* @llvm.objc.retain(i8* %1)
  %3 = bitcast i8* %2 to %TSo6XCTestC*
  %4 = load i8*, i8** @"\01L_selector(runTest)", align 8
  %5 = bitcast %TSo6XCTestC* %0 to %5*
  call void bitcast (void ()* @objc_msgSend to void (%5*, i8*)*)(%5* %5, i8* %4) #13
  %6 = bitcast %TSo6XCTestC* %0 to i8*
  call void @llvm.objc.release(i8* %6)
  ret void
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* %T, i8** %T.Equatable) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_SSycfu_" to i8*), %swift.refcounted* null }
}

define linkonce_odr hidden swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret, %swift.type* %T, i8** %T.Equatable) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  call swiftcc void @"$s14StdlibUnittest14SourceLocStackVACycfC"(%swift.opaque* noalias nocapture sret %0)
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* %T, i8** %T.Equatable) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret i1 true
}

declare swiftcc i1 @"$s10ObjectiveC22_convertObjCBoolToBoolySbAA0cD0VF"(i8) #0

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"() #0 {
entry:
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_SSycfu_" to i8*), %swift.refcounted* null }
}

define linkonce_odr hidden swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret) #0 {
entry:
  call swiftcc void @"$s14StdlibUnittest14SourceLocStackVACycfC"(%swift.opaque* noalias nocapture sret %0)
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"() #0 {
entry:
  ret i1 true
}

define internal swiftcc void @"$s7_XCTestyycfU0_"() #0 {
entry:
  %passingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %passingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %Ts4Int8V, align 1
  %2 = alloca %TSi, align 8
  %3 = alloca %Ts4Int8V, align 1
  %4 = alloca %TSi, align 8
  %5 = alloca %Ts4Int8V, align 1
  %6 = alloca %TSi, align 8
  %failingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %7 = bitcast %TSo9XCTestRunC** %failingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 8, i1 false)
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %TSi, align 8
  %12 = alloca %TSS, align 8
  %13 = alloca %TSS, align 8
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %Ts4Int8V, align 1
  %17 = alloca %TSi, align 8
  %18 = alloca %TSi, align 8
  %19 = alloca %Ts4Int8V, align 1
  %20 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %21 = extractvalue %swift.metadata_response %20, 0
  %22 = bitcast %swift.type* %21 to i8***
  %23 = getelementptr inbounds i8**, i8*** %22, i64 -1
  %.valueWitnesses = load i8**, i8*** %23, align 8, !invariant.load !178, !dereferenceable !179
  %24 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %25 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %24, i32 0, i32 8
  %size = load i64, i64* %25, align 8, !invariant.load !178
  %26 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %26)
  %27 = bitcast i8* %26 to %swift.opaque*
  %28 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %29 = extractvalue %swift.metadata_response %28, 0
  %30 = load i8*, i8** @"\01L_selector(test_whenEqual_passes)", align 8
  %31 = call swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %30, %swift.type* swiftself %29)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %31)
  %32 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %31 to %TSo6XCTestC*
  %33 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %32)
  %34 = extractvalue { i8*, %swift.refcounted* } %33, 0
  %35 = extractvalue { i8*, %swift.refcounted* } %33, 1
  %36 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %35) #3
  %37 = bitcast %swift.refcounted* %35 to %swift.opaque*
  %38 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %38, i8* %34, %swift.opaque* %37)
  call void @swift_release(%swift.refcounted* %35) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %38) #3
  call void @swift_release(%swift.refcounted* %35) #3
  %39 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %31 to i8*
  %40 = call i8* @llvm.objc.retain(i8* %39)
  %41 = bitcast i8* %40 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %42 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %31 to %TSo6XCTestC*
  %43 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %44 = bitcast %TSo6XCTestC* %42 to %5*
  %45 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %44, i8* %43)
  %46 = bitcast %6* %45 to i8*
  %47 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %46)
  %48 = bitcast i8* %47 to %6*
  %49 = ptrtoint %6* %48 to i64
  %50 = bitcast %TSo6XCTestC* %42 to i8*
  call void @llvm.objc.release(i8* %50)
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %entry
  %53 = inttoptr i64 %49 to %TSo9XCTestRunC*
  br label %61

54:                                               ; preds = %entry
  br label %55

55:                                               ; preds = %54
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56
  br label %58

58:                                               ; preds = %57
  br label %59

59:                                               ; preds = %58
  br label %60

60:                                               ; preds = %59
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 107, i32 1)
  unreachable

61:                                               ; preds = %52
  %62 = phi %TSo9XCTestRunC* [ %53, %52 ]
  store %TSo9XCTestRunC* %62, %TSo9XCTestRunC** %passingTestRun.debug, align 8
  %63 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %64 = bitcast %TSo9XCTestRunC* %62 to %6*
  %65 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %64, i8* %63)
  %66 = call i8** @"$ss4Int8VABSZsWl"() #6
  %67 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %66, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = icmp slt i8 %65, 0
  br label %71

70:                                               ; preds = %61
  br label %71

71:                                               ; preds = %68, %70
  %72 = phi i1 [ false, %70 ], [ %69, %68 ]
  %73 = call i8** @"$sS2iSZsWl"() #6
  %74 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %73, %swift.type* swiftself @"$sSiN")
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  br label %77

76:                                               ; preds = %71
  br label %77

77:                                               ; preds = %75, %76
  %78 = phi i1 [ false, %76 ], [ false, %75 ]
  %79 = icmp eq i1 %72, %78
  %80 = xor i1 %79, true
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  br label %96

82:                                               ; preds = %77
  %83 = bitcast %Ts4Int8V* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %83)
  %._value = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %1, i32 0, i32 0
  store i8 %65, i8* %._value, align 1
  %84 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %85 = bitcast %Ts4Int8V* %1 to %swift.opaque*
  %86 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %84, %swift.opaque* noalias nocapture swiftself %85)
  %87 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %1)
  %88 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %88)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 0, i64* %._value1, align 8
  %89 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %90 = bitcast %TSi* %2 to %swift.opaque*
  %91 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %89, %swift.opaque* noalias nocapture swiftself %90)
  %92 = call %TSi* @"$sSiWOh"(%TSi* %2)
  %93 = icmp slt i64 %86, %91
  %94 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94)
  %95 = bitcast %Ts4Int8V* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %95)
  br i1 %93, label %146, label %157

96:                                               ; preds = %81, %146, %169, %182, %193
  %97 = phi i1 [ %201, %193 ], [ %190, %182 ], [ %177, %169 ], [ %154, %146 ], [ false, %81 ]
  %98 = xor i1 %97, true
  %99 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %100 = extractvalue { i64, %swift.bridge* } %99, 0
  %101 = extractvalue { i64, %swift.bridge* } %99, 1
  %102 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %103 = extractvalue { i8*, %swift.refcounted* } %102, 0
  %104 = extractvalue { i8*, %swift.refcounted* } %102, 1
  %105 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %104) #3
  %106 = bitcast %swift.refcounted* %104 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %27)
  %107 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %98, i8* %103, %swift.opaque* %106, %swift.opaque* noalias nocapture %27, i1 %107, i64 %100, %swift.bridge* %101, i64 108)
  call void @swift_release(%swift.refcounted* %104) #3
  %108 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %109 = load i8*, i8** %108, align 8, !invariant.load !178
  %destroy = bitcast i8* %109 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %27, %swift.type* %21) #3
  call void @swift_release(%swift.refcounted* %104) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %101) #3
  %110 = load i8*, i8** @"\01L_selector(test_whenNotEqual_fails)", align 8
  %111 = call swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %110, %swift.type* swiftself %29)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %111)
  %112 = call swiftcc %swift.metadata_response @"$s7_XCTest26FailureDescriptionObserverCMa"(i64 0) #6
  %113 = extractvalue %swift.metadata_response %112, 0
  %114 = call swiftcc %T7_XCTest26FailureDescriptionObserverC* @"$s7_XCTest26FailureDescriptionObserverCACycfC"(%swift.type* swiftself %113)
  call void asm sideeffect "", "r"(%T7_XCTest26FailureDescriptionObserverC* %114)
  %115 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo17XCTestObservation_pMD") #6
  %116 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 1, %swift.type* %115)
  %117 = extractvalue { %swift.bridge*, i8* } %116, 0
  %118 = extractvalue { %swift.bridge*, i8* } %116, 1
  %119 = bitcast i8* %118 to %TSo17XCTestObservationP*
  %120 = bitcast %T7_XCTest26FailureDescriptionObserverC* %114 to i8*
  %121 = call i8* @llvm.objc.retain(i8* %120)
  %122 = bitcast i8* %121 to %T7_XCTest26FailureDescriptionObserverC*
  %123 = bitcast %T7_XCTest26FailureDescriptionObserverC* %114 to %objc_object*
  %124 = getelementptr inbounds %TSo17XCTestObservationP, %TSo17XCTestObservationP* %119, i32 0, i32 0
  store %objc_object* %123, %objc_object** %124, align 8
  %125 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %111 to %TSo6XCTestC*
  %126 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %125)
  %127 = extractvalue { i8*, %swift.refcounted* } %126, 0
  %128 = extractvalue { i8*, %swift.refcounted* } %126, 1
  %129 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %128) #3
  %130 = bitcast %swift.refcounted* %128 to %swift.opaque*
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %117, i8* %127, %swift.opaque* %130)
  call void @swift_release(%swift.refcounted* %128) #3
  call void @swift_release(%swift.refcounted* %128) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %117) #3
  %131 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %111 to i8*
  %132 = call i8* @llvm.objc.retain(i8* %131)
  %133 = bitcast i8* %132 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %134 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %111 to %TSo6XCTestC*
  %135 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %136 = bitcast %TSo6XCTestC* %134 to %5*
  %137 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %136, i8* %135)
  %138 = bitcast %6* %137 to i8*
  %139 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %138)
  %140 = bitcast i8* %139 to %6*
  %141 = ptrtoint %6* %140 to i64
  %142 = bitcast %TSo6XCTestC* %134 to i8*
  call void @llvm.objc.release(i8* %142)
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %204, label %144

144:                                              ; preds = %96
  %145 = inttoptr i64 %141 to %TSo9XCTestRunC*
  br label %211

146:                                              ; preds = %82
  %147 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147)
  %148 = bitcast %Ts4Int8V* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %148)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %19, i32 0, i32 0
  store i8 %65, i8* %._value15, align 1
  %149 = bitcast %TSi* %18 to %swift.opaque*
  %150 = bitcast %Ts4Int8V* %19 to %swift.opaque*
  %151 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %149, %swift.opaque* noalias nocapture %150, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %89, i8** %151, %swift.type* swiftself @"$sSiN")
  %152 = bitcast %Ts4Int8V* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %152)
  %._value16 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  %153 = load i64, i64* %._value16, align 8
  %154 = icmp eq i64 %153, 0
  %155 = call %TSi* @"$sSiWOh"(%TSi* %18)
  %156 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %156)
  br label %96

157:                                              ; preds = %82
  %158 = bitcast %Ts4Int8V* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %158)
  %._value2 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %3, i32 0, i32 0
  store i8 %65, i8* %._value2, align 1
  %159 = bitcast %Ts4Int8V* %3 to %swift.opaque*
  %160 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %84, %swift.opaque* noalias nocapture swiftself %159)
  %161 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %3)
  %162 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %162)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 0, i64* %._value3, align 8
  %163 = bitcast %TSi* %4 to %swift.opaque*
  %164 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %89, %swift.opaque* noalias nocapture swiftself %163)
  %165 = call %TSi* @"$sSiWOh"(%TSi* %4)
  %166 = icmp slt i64 %164, %160
  %167 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167)
  %168 = bitcast %Ts4Int8V* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %168)
  br i1 %166, label %169, label %180

169:                                              ; preds = %157
  %170 = bitcast %Ts4Int8V* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %170)
  %171 = bitcast %TSi* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %171)
  %._value13 = getelementptr inbounds %TSi, %TSi* %17, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %172 = bitcast %Ts4Int8V* %16 to %swift.opaque*
  %173 = bitcast %TSi* %17 to %swift.opaque*
  %174 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %172, %swift.opaque* noalias nocapture %173, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %84, i8** %174, %swift.type* swiftself @"$ss4Int8VN")
  %175 = bitcast %TSi* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %175)
  %._value14 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %16, i32 0, i32 0
  %176 = load i8, i8* %._value14, align 1
  %177 = icmp eq i8 %65, %176
  %178 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %16)
  %179 = bitcast %Ts4Int8V* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %179)
  br label %96

180:                                              ; preds = %157
  %181 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %66, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %181, label %182, label %193

182:                                              ; preds = %180
  %183 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %183)
  %184 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %184)
  %._value11 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  store i8 %65, i8* %._value11, align 1
  %185 = bitcast %TSi* %14 to %swift.opaque*
  %186 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %187 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %185, %swift.opaque* noalias nocapture %186, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %89, i8** %187, %swift.type* swiftself @"$sSiN")
  %188 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %188)
  %._value12 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  %189 = load i64, i64* %._value12, align 8
  %190 = icmp eq i64 %189, 0
  %191 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %192 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192)
  br label %96

193:                                              ; preds = %180
  %194 = bitcast %Ts4Int8V* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %194)
  %195 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %195)
  %._value4 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %196 = bitcast %Ts4Int8V* %5 to %swift.opaque*
  %197 = bitcast %TSi* %6 to %swift.opaque*
  %198 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %196, %swift.opaque* noalias nocapture %197, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %84, i8** %198, %swift.type* swiftself @"$ss4Int8VN")
  %199 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199)
  %._value5 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %5, i32 0, i32 0
  %200 = load i8, i8* %._value5, align 1
  %201 = icmp eq i8 %65, %200
  %202 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %5)
  %203 = bitcast %Ts4Int8V* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %203)
  br label %96

204:                                              ; preds = %96
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %209
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 113, i32 1)
  unreachable

211:                                              ; preds = %144
  %212 = phi %TSo9XCTestRunC* [ %145, %144 ]
  store %TSo9XCTestRunC* %212, %TSo9XCTestRunC** %failingTestRun.debug, align 8
  %213 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %213)
  %._value6 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 1, i64* %._value6, align 8
  %214 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %215 = bitcast %TSo9XCTestRunC* %212 to %6*
  %216 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %215, i8* %214)
  %217 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %217)
  %._value7 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 %216, i64* %._value7, align 8
  %218 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %219 = extractvalue { i64, %swift.bridge* } %218, 0
  %220 = extractvalue { i64, %swift.bridge* } %218, 1
  %221 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %222 = extractvalue { i8*, %swift.refcounted* } %221, 0
  %223 = extractvalue { i8*, %swift.refcounted* } %221, 1
  %224 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %223) #3
  %225 = bitcast %swift.refcounted* %223 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %27, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %226 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %227 = bitcast %TSi* %8 to %swift.opaque*
  %228 = bitcast %TSi* %9 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %227, %swift.opaque* noalias nocapture %228, i8* %222, %swift.opaque* %225, %swift.opaque* noalias nocapture %27, i1 %226, i64 %219, %swift.bridge* %220, i64 114, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %223) #3
  call void %destroy(%swift.opaque* noalias %27, %swift.type* %21) #3
  call void @swift_release(%swift.refcounted* %223) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %220) #3
  %229 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229)
  %230 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230)
  %231 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %231)
  %._value8 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %232 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %233 = bitcast %TSo9XCTestRunC* %212 to %6*
  %234 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %233, i8* %232)
  %235 = bitcast %TSi* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %235)
  %._value9 = getelementptr inbounds %TSi, %TSi* %11, i32 0, i32 0
  store i64 %234, i64* %._value9, align 8
  %236 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %237 = extractvalue { i64, %swift.bridge* } %236, 0
  %238 = extractvalue { i64, %swift.bridge* } %236, 1
  %239 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %240 = extractvalue { i8*, %swift.refcounted* } %239, 0
  %241 = extractvalue { i8*, %swift.refcounted* } %239, 1
  %242 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %241) #3
  %243 = bitcast %swift.refcounted* %241 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %27, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %244 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %245 = bitcast %TSi* %10 to %swift.opaque*
  %246 = bitcast %TSi* %11 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %245, %swift.opaque* noalias nocapture %246, i8* %240, %swift.opaque* %243, %swift.opaque* noalias nocapture %27, i1 %244, i64 %237, %swift.bridge* %238, i64 115, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %241) #3
  call void %destroy(%swift.opaque* noalias %27, %swift.type* %21) #3
  call void @swift_release(%swift.refcounted* %241) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %238) #3
  %247 = bitcast %TSi* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247)
  %248 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248)
  %249 = bitcast %T7_XCTest26FailureDescriptionObserverC* %114 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = load i64, i64* @swift_isaMask, align 8
  %252 = and i64 %250, %251
  %253 = inttoptr i64 %252 to %swift.type*
  %254 = bitcast %swift.type* %253 to { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)**
  %255 = getelementptr inbounds { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)** %254, i64 11
  %256 = load { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)** %255, align 8, !invariant.load !178
  %257 = call swiftcc { i64, i64 } %256(%T7_XCTest26FailureDescriptionObserverC* swiftself %114)
  %258 = extractvalue { i64, i64 } %257, 0
  %259 = extractvalue { i64, i64 } %257, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %211
  %262 = inttoptr i64 %259 to %swift.bridge*
  br label %270

263:                                              ; preds = %211
  br label %264

264:                                              ; preds = %263
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  br label %268

268:                                              ; preds = %267
  br label %269

269:                                              ; preds = %268
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 116, i32 1)
  unreachable

270:                                              ; preds = %261
  %271 = phi i64 [ %258, %261 ]
  %272 = phi %swift.bridge* [ %262, %261 ]
  %273 = bitcast %TSS* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %273)
  %._guts = getelementptr inbounds %TSS, %TSS* %12, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %271, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %272, %swift.bridge** %._guts._object._object, align 8
  %274 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @72, i64 0, i64 0), i64 50, i1 true)
  %275 = extractvalue { i64, %swift.bridge* } %274, 0
  %276 = extractvalue { i64, %swift.bridge* } %274, 1
  %277 = bitcast %TSS* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %277)
  %._guts10 = getelementptr inbounds %TSS, %TSS* %13, i32 0, i32 0
  %._guts10._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts10, i32 0, i32 0
  %._guts10._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts10._object, i32 0, i32 0
  %._guts10._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts10._object._countAndFlagsBits, i32 0, i32 0
  store i64 %275, i64* %._guts10._object._countAndFlagsBits._value, align 8
  %._guts10._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts10._object, i32 0, i32 1
  store %swift.bridge* %276, %swift.bridge** %._guts10._object._object, align 8
  %278 = bitcast %TSS* %13 to %swift.opaque*
  %279 = bitcast %TSS* %12 to %swift.opaque*
  %280 = call swiftcc i1 @"$sSTsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF"(%swift.opaque* noalias nocapture %278, %swift.type* @"$sSSN", %swift.type* @"$sSSN", i8** @"$sSSSTsWP", i8** @"$sSSSTsWP", i8** @"$sSJSQsWP", %swift.opaque* noalias nocapture swiftself %279)
  %281 = call %TSS* @"$sSSWOh"(%TSS* %13)
  %282 = bitcast %TSS* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %282)
  %283 = call %TSS* @"$sSSWOh"(%TSS* %12)
  %284 = bitcast %TSS* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %284)
  %285 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %286 = extractvalue { i64, %swift.bridge* } %285, 0
  %287 = extractvalue { i64, %swift.bridge* } %285, 1
  %288 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %289 = extractvalue { i8*, %swift.refcounted* } %288, 0
  %290 = extractvalue { i8*, %swift.refcounted* } %288, 1
  %291 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %290) #3
  %292 = bitcast %swift.refcounted* %290 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %27)
  %293 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %280, i8* %289, %swift.opaque* %292, %swift.opaque* noalias nocapture %27, i1 %293, i64 %286, %swift.bridge* %287, i64 116)
  call void @swift_release(%swift.refcounted* %290) #3
  call void %destroy(%swift.opaque* noalias %27, %swift.type* %21) #3
  call void @swift_release(%swift.refcounted* %290) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %287) #3
  %294 = bitcast %TSo9XCTestRunC* %212 to i8*
  call void @llvm.objc.release(i8* %294)
  %295 = bitcast %T7_XCTest26FailureDescriptionObserverC* %114 to i8*
  call void @llvm.objc.release(i8* %295)
  %296 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %111 to i8*
  call void @llvm.objc.release(i8* %296)
  %297 = bitcast %TSo9XCTestRunC* %62 to i8*
  call void @llvm.objc.release(i8* %297)
  %298 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %31 to i8*
  call void @llvm.objc.release(i8* %298)
  %299 = bitcast %swift.opaque* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %299)
  ret void
}

define internal swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %4 to %8*
  %7 = call %8* bitcast (void ()* @objc_msgSend to %8* (%8*, i8*, i8*)*)(%8* %6, i8* %5, i8* %0)
  %8 = bitcast %8* %7 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  ret %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %8
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"() #0 {
entry:
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_SSycfu_" to i8*), %swift.refcounted* null }
}

define linkonce_odr hidden swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret) #0 {
entry:
  call swiftcc void @"$s14StdlibUnittest14SourceLocStackVACycfC"(%swift.opaque* noalias nocapture sret %0)
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"() #0 {
entry:
  ret i1 true
}

define internal swiftcc void @"$s7_XCTestyycfU1_"() #0 {
entry:
  %passingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %passingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %failingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %failingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %34 = alloca %TSS, align 8
  %35 = alloca %TSS, align 8
  %36 = alloca %TSi, align 8
  %37 = alloca %Ts4Int8V, align 1
  %38 = alloca %Ts4Int8V, align 1
  %39 = alloca %TSi, align 8
  %40 = alloca %TSi, align 8
  %41 = alloca %Ts4Int8V, align 1
  %42 = alloca %TSi, align 8
  %43 = alloca %Ts4Int8V, align 1
  %44 = alloca %Ts4Int8V, align 1
  %45 = alloca %TSi, align 8
  %46 = alloca %TSi, align 8
  %47 = alloca %Ts4Int8V, align 1
  %48 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %49 = extractvalue %swift.metadata_response %48, 0
  %50 = bitcast %swift.type* %49 to i8***
  %51 = getelementptr inbounds i8**, i8*** %50, i64 -1
  %.valueWitnesses = load i8**, i8*** %51, align 8, !invariant.load !178, !dereferenceable !179
  %52 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %53 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %52, i32 0, i32 8
  %size = load i64, i64* %53, align 8, !invariant.load !178
  %54 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %54)
  %55 = bitcast i8* %54 to %swift.opaque*
  %56 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa"(i64 0) #6
  %57 = extractvalue %swift.metadata_response %56, 0
  %58 = load i8*, i8** @"\01L_selector(test_whenOptionalsAreEqual_passes)", align 8
  %59 = call swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %58, %swift.type* swiftself %57)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %59)
  %60 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %59 to %TSo6XCTestC*
  %61 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %60)
  %62 = extractvalue { i8*, %swift.refcounted* } %61, 0
  %63 = extractvalue { i8*, %swift.refcounted* } %61, 1
  %64 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %63) #3
  %65 = bitcast %swift.refcounted* %63 to %swift.opaque*
  %66 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %66, i8* %62, %swift.opaque* %65)
  call void @swift_release(%swift.refcounted* %63) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %66) #3
  call void @swift_release(%swift.refcounted* %63) #3
  %67 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %59 to i8*
  %68 = call i8* @llvm.objc.retain(i8* %67)
  %69 = bitcast i8* %68 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %70 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %59 to %TSo6XCTestC*
  %71 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %72 = bitcast %TSo6XCTestC* %70 to %5*
  %73 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %72, i8* %71)
  %74 = bitcast %6* %73 to i8*
  %75 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %74)
  %76 = bitcast i8* %75 to %6*
  %77 = ptrtoint %6* %76 to i64
  %78 = bitcast %TSo6XCTestC* %70 to i8*
  call void @llvm.objc.release(i8* %78)
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %entry
  %81 = inttoptr i64 %77 to %TSo9XCTestRunC*
  br label %89

82:                                               ; preds = %entry
  br label %83

83:                                               ; preds = %82
  br label %84

84:                                               ; preds = %83
  br label %85

85:                                               ; preds = %84
  br label %86

86:                                               ; preds = %85
  br label %87

87:                                               ; preds = %86
  br label %88

88:                                               ; preds = %87
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 132, i32 1)
  unreachable

89:                                               ; preds = %80
  %90 = phi %TSo9XCTestRunC* [ %81, %80 ]
  store %TSo9XCTestRunC* %90, %TSo9XCTestRunC** %passingTestRun.debug, align 8
  %91 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %91)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %92 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %93 = bitcast %TSo9XCTestRunC* %90 to %6*
  %94 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %93, i8* %92)
  %95 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %94, i64* %._value1, align 8
  %96 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %97 = extractvalue { i64, %swift.bridge* } %96, 0
  %98 = extractvalue { i64, %swift.bridge* } %96, 1
  %99 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %100 = extractvalue { i8*, %swift.refcounted* } %99, 0
  %101 = extractvalue { i8*, %swift.refcounted* } %99, 1
  %102 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %101) #3
  %103 = bitcast %swift.refcounted* %101 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %104 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %105 = bitcast %TSi* %1 to %swift.opaque*
  %106 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %105, %swift.opaque* noalias nocapture %106, i8* %100, %swift.opaque* %103, %swift.opaque* noalias nocapture %55, i1 %104, i64 %97, %swift.bridge* %98, i64 133, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %101) #3
  %107 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %108 = load i8*, i8** %107, align 8, !invariant.load !178
  %destroy = bitcast i8* %108 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %101) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %98) #3
  %109 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109)
  %110 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110)
  %111 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %111)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %112 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %113 = bitcast %TSo9XCTestRunC* %90 to %6*
  %114 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %113, i8* %112)
  %115 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %115)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %114, i64* %._value3, align 8
  %116 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %117 = extractvalue { i64, %swift.bridge* } %116, 0
  %118 = extractvalue { i64, %swift.bridge* } %116, 1
  %119 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %120 = extractvalue { i8*, %swift.refcounted* } %119, 0
  %121 = extractvalue { i8*, %swift.refcounted* } %119, 1
  %122 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %121) #3
  %123 = bitcast %swift.refcounted* %121 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %124 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %125 = bitcast %TSi* %3 to %swift.opaque*
  %126 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %125, %swift.opaque* noalias nocapture %126, i8* %120, %swift.opaque* %123, %swift.opaque* noalias nocapture %55, i1 %124, i64 %117, %swift.bridge* %118, i64 134, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %121) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %121) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %118) #3
  %127 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127)
  %128 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128)
  %129 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %129)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %130 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %131 = bitcast %TSo9XCTestRunC* %90 to %6*
  %132 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %131, i8* %130)
  %133 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %133)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %132, i64* %._value5, align 8
  %134 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %135 = extractvalue { i64, %swift.bridge* } %134, 0
  %136 = extractvalue { i64, %swift.bridge* } %134, 1
  %137 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %138 = extractvalue { i8*, %swift.refcounted* } %137, 0
  %139 = extractvalue { i8*, %swift.refcounted* } %137, 1
  %140 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %139) #3
  %141 = bitcast %swift.refcounted* %139 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %142 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %143 = bitcast %TSi* %5 to %swift.opaque*
  %144 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %143, %swift.opaque* noalias nocapture %144, i8* %138, %swift.opaque* %141, %swift.opaque* noalias nocapture %55, i1 %142, i64 %135, %swift.bridge* %136, i64 135, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %139) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %139) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %136) #3
  %145 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145)
  %146 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146)
  %147 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %148 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %149 = bitcast %TSo9XCTestRunC* %90 to %6*
  %150 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %149, i8* %148)
  %151 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %151)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %150, i64* %._value7, align 8
  %152 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %153 = extractvalue { i64, %swift.bridge* } %152, 0
  %154 = extractvalue { i64, %swift.bridge* } %152, 1
  %155 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %156 = extractvalue { i8*, %swift.refcounted* } %155, 0
  %157 = extractvalue { i8*, %swift.refcounted* } %155, 1
  %158 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %157) #3
  %159 = bitcast %swift.refcounted* %157 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %160 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %161 = bitcast %TSi* %7 to %swift.opaque*
  %162 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %161, %swift.opaque* noalias nocapture %162, i8* %156, %swift.opaque* %159, %swift.opaque* noalias nocapture %55, i1 %160, i64 %153, %swift.bridge* %154, i64 136, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %157) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %157) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %154) #3
  %163 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163)
  %164 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164)
  %165 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %166 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %167 = bitcast %TSo9XCTestRunC* %90 to %6*
  %168 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %167, i8* %166)
  %169 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %169)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %168, i64* %._value9, align 8
  %170 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %171 = extractvalue { i64, %swift.bridge* } %170, 0
  %172 = extractvalue { i64, %swift.bridge* } %170, 1
  %173 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %174 = extractvalue { i8*, %swift.refcounted* } %173, 0
  %175 = extractvalue { i8*, %swift.refcounted* } %173, 1
  %176 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %175) #3
  %177 = bitcast %swift.refcounted* %175 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %178 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %179 = bitcast %TSi* %9 to %swift.opaque*
  %180 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %179, %swift.opaque* noalias nocapture %180, i8* %174, %swift.opaque* %177, %swift.opaque* noalias nocapture %55, i1 %178, i64 %171, %swift.bridge* %172, i64 137, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %175) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %175) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %172) #3
  %181 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181)
  %182 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182)
  %183 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %184 = bitcast %TSo9XCTestRunC* %90 to %6*
  %185 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %184, i8* %183)
  %186 = call i8** @"$ss4Int8VABSZsWl"() #6
  %187 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %186, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %187, label %188, label %190

188:                                              ; preds = %89
  %189 = icmp slt i8 %185, 0
  br label %191

190:                                              ; preds = %89
  br label %191

191:                                              ; preds = %188, %190
  %192 = phi i1 [ false, %190 ], [ %189, %188 ]
  %193 = call i8** @"$sS2iSZsWl"() #6
  %194 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %193, %swift.type* swiftself @"$sSiN")
  br i1 %194, label %195, label %196

195:                                              ; preds = %191
  br label %197

196:                                              ; preds = %191
  br label %197

197:                                              ; preds = %195, %196
  %198 = phi i1 [ false, %196 ], [ false, %195 ]
  %199 = icmp eq i1 %192, %198
  %200 = xor i1 %199, true
  br i1 %200, label %201, label %202

201:                                              ; preds = %197
  br label %216

202:                                              ; preds = %197
  %203 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %203)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %185, i8* %._value10, align 1
  %204 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %205 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %206 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %204, %swift.opaque* noalias nocapture swiftself %205)
  %207 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %208 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %208)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %209 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %210 = bitcast %TSi* %12 to %swift.opaque*
  %211 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %209, %swift.opaque* noalias nocapture swiftself %210)
  %212 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %213 = icmp slt i64 %206, %211
  %214 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %214)
  %215 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %215)
  br i1 %213, label %264, label %275

216:                                              ; preds = %201, %264, %287, %300, %311
  %217 = phi i1 [ %319, %311 ], [ %308, %300 ], [ %295, %287 ], [ %272, %264 ], [ false, %201 ]
  %218 = xor i1 %217, true
  %219 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %220 = extractvalue { i64, %swift.bridge* } %219, 0
  %221 = extractvalue { i64, %swift.bridge* } %219, 1
  %222 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %223 = extractvalue { i8*, %swift.refcounted* } %222, 0
  %224 = extractvalue { i8*, %swift.refcounted* } %222, 1
  %225 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %224) #3
  %226 = bitcast %swift.refcounted* %224 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %55)
  %227 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %218, i8* %223, %swift.opaque* %226, %swift.opaque* noalias nocapture %55, i1 %227, i64 %220, %swift.bridge* %221, i64 138)
  call void @swift_release(%swift.refcounted* %224) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %224) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %221) #3
  %228 = load i8*, i8** @"\01L_selector(test_whenOptionalsAreNotEqual_fails)", align 8
  %229 = call swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %228, %swift.type* swiftself %57)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %229)
  %230 = call swiftcc %swift.metadata_response @"$s7_XCTest26FailureDescriptionObserverCMa"(i64 0) #6
  %231 = extractvalue %swift.metadata_response %230, 0
  %232 = call swiftcc %T7_XCTest26FailureDescriptionObserverC* @"$s7_XCTest26FailureDescriptionObserverCACycfC"(%swift.type* swiftself %231)
  call void asm sideeffect "", "r"(%T7_XCTest26FailureDescriptionObserverC* %232)
  %233 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo17XCTestObservation_pMD") #6
  %234 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 1, %swift.type* %233)
  %235 = extractvalue { %swift.bridge*, i8* } %234, 0
  %236 = extractvalue { %swift.bridge*, i8* } %234, 1
  %237 = bitcast i8* %236 to %TSo17XCTestObservationP*
  %238 = bitcast %T7_XCTest26FailureDescriptionObserverC* %232 to i8*
  %239 = call i8* @llvm.objc.retain(i8* %238)
  %240 = bitcast i8* %239 to %T7_XCTest26FailureDescriptionObserverC*
  %241 = bitcast %T7_XCTest26FailureDescriptionObserverC* %232 to %objc_object*
  %242 = getelementptr inbounds %TSo17XCTestObservationP, %TSo17XCTestObservationP* %237, i32 0, i32 0
  store %objc_object* %241, %objc_object** %242, align 8
  %243 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %229 to %TSo6XCTestC*
  %244 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %243)
  %245 = extractvalue { i8*, %swift.refcounted* } %244, 0
  %246 = extractvalue { i8*, %swift.refcounted* } %244, 1
  %247 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %246) #3
  %248 = bitcast %swift.refcounted* %246 to %swift.opaque*
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %235, i8* %245, %swift.opaque* %248)
  call void @swift_release(%swift.refcounted* %246) #3
  call void @swift_release(%swift.refcounted* %246) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %235) #3
  %249 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %229 to i8*
  %250 = call i8* @llvm.objc.retain(i8* %249)
  %251 = bitcast i8* %250 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %252 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %229 to %TSo6XCTestC*
  %253 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %254 = bitcast %TSo6XCTestC* %252 to %5*
  %255 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %254, i8* %253)
  %256 = bitcast %6* %255 to i8*
  %257 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %256)
  %258 = bitcast i8* %257 to %6*
  %259 = ptrtoint %6* %258 to i64
  %260 = bitcast %TSo6XCTestC* %252 to i8*
  call void @llvm.objc.release(i8* %260)
  %261 = icmp eq i64 %259, 0
  br i1 %261, label %322, label %262

262:                                              ; preds = %216
  %263 = inttoptr i64 %259 to %TSo9XCTestRunC*
  br label %329

264:                                              ; preds = %202
  %265 = bitcast %TSi* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %265)
  %266 = bitcast %Ts4Int8V* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %266)
  %._value43 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %47, i32 0, i32 0
  store i8 %185, i8* %._value43, align 1
  %267 = bitcast %TSi* %46 to %swift.opaque*
  %268 = bitcast %Ts4Int8V* %47 to %swift.opaque*
  %269 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %267, %swift.opaque* noalias nocapture %268, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %209, i8** %269, %swift.type* swiftself @"$sSiN")
  %270 = bitcast %Ts4Int8V* %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %270)
  %._value44 = getelementptr inbounds %TSi, %TSi* %46, i32 0, i32 0
  %271 = load i64, i64* %._value44, align 8
  %272 = icmp eq i64 %271, 0
  %273 = call %TSi* @"$sSiWOh"(%TSi* %46)
  %274 = bitcast %TSi* %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274)
  br label %216

275:                                              ; preds = %202
  %276 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %276)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %185, i8* %._value12, align 1
  %277 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %278 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %204, %swift.opaque* noalias nocapture swiftself %277)
  %279 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %280 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %280)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %281 = bitcast %TSi* %14 to %swift.opaque*
  %282 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %209, %swift.opaque* noalias nocapture swiftself %281)
  %283 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %284 = icmp slt i64 %282, %278
  %285 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285)
  %286 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %286)
  br i1 %284, label %287, label %298

287:                                              ; preds = %275
  %288 = bitcast %Ts4Int8V* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %288)
  %289 = bitcast %TSi* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %289)
  %._value41 = getelementptr inbounds %TSi, %TSi* %45, i32 0, i32 0
  store i64 0, i64* %._value41, align 8
  %290 = bitcast %Ts4Int8V* %44 to %swift.opaque*
  %291 = bitcast %TSi* %45 to %swift.opaque*
  %292 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %290, %swift.opaque* noalias nocapture %291, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %204, i8** %292, %swift.type* swiftself @"$ss4Int8VN")
  %293 = bitcast %TSi* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %293)
  %._value42 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %44, i32 0, i32 0
  %294 = load i8, i8* %._value42, align 1
  %295 = icmp eq i8 %185, %294
  %296 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %44)
  %297 = bitcast %Ts4Int8V* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %297)
  br label %216

298:                                              ; preds = %275
  %299 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %186, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %299, label %300, label %311

300:                                              ; preds = %298
  %301 = bitcast %TSi* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %301)
  %302 = bitcast %Ts4Int8V* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %302)
  %._value39 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %43, i32 0, i32 0
  store i8 %185, i8* %._value39, align 1
  %303 = bitcast %TSi* %42 to %swift.opaque*
  %304 = bitcast %Ts4Int8V* %43 to %swift.opaque*
  %305 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %303, %swift.opaque* noalias nocapture %304, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %209, i8** %305, %swift.type* swiftself @"$sSiN")
  %306 = bitcast %Ts4Int8V* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %306)
  %._value40 = getelementptr inbounds %TSi, %TSi* %42, i32 0, i32 0
  %307 = load i64, i64* %._value40, align 8
  %308 = icmp eq i64 %307, 0
  %309 = call %TSi* @"$sSiWOh"(%TSi* %42)
  %310 = bitcast %TSi* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %310)
  br label %216

311:                                              ; preds = %298
  %312 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %312)
  %313 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %313)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %314 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %315 = bitcast %TSi* %16 to %swift.opaque*
  %316 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %314, %swift.opaque* noalias nocapture %315, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %204, i8** %316, %swift.type* swiftself @"$ss4Int8VN")
  %317 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %317)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %318 = load i8, i8* %._value15, align 1
  %319 = icmp eq i8 %185, %318
  %320 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %321 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %321)
  br label %216

322:                                              ; preds = %216
  br label %323

323:                                              ; preds = %322
  br label %324

324:                                              ; preds = %323
  br label %325

325:                                              ; preds = %324
  br label %326

326:                                              ; preds = %325
  br label %327

327:                                              ; preds = %326
  br label %328

328:                                              ; preds = %327
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 143, i32 1)
  unreachable

329:                                              ; preds = %262
  %330 = phi %TSo9XCTestRunC* [ %263, %262 ]
  store %TSo9XCTestRunC* %330, %TSo9XCTestRunC** %failingTestRun.debug, align 8
  %331 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %331)
  %._value16 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value16, align 8
  %332 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %333 = bitcast %TSo9XCTestRunC* %330 to %6*
  %334 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %333, i8* %332)
  %335 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %335)
  %._value17 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %334, i64* %._value17, align 8
  %336 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %337 = extractvalue { i64, %swift.bridge* } %336, 0
  %338 = extractvalue { i64, %swift.bridge* } %336, 1
  %339 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %340 = extractvalue { i8*, %swift.refcounted* } %339, 0
  %341 = extractvalue { i8*, %swift.refcounted* } %339, 1
  %342 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %341) #3
  %343 = bitcast %swift.refcounted* %341 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %344 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %345 = bitcast %TSi* %18 to %swift.opaque*
  %346 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %345, %swift.opaque* noalias nocapture %346, i8* %340, %swift.opaque* %343, %swift.opaque* noalias nocapture %55, i1 %344, i64 %337, %swift.bridge* %338, i64 144, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %341) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %341) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %338) #3
  %347 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347)
  %348 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %348)
  %349 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %349)
  %._value18 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value18, align 8
  %350 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %351 = bitcast %TSo9XCTestRunC* %330 to %6*
  %352 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %351, i8* %350)
  %353 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %353)
  %._value19 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %352, i64* %._value19, align 8
  %354 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %355 = extractvalue { i64, %swift.bridge* } %354, 0
  %356 = extractvalue { i64, %swift.bridge* } %354, 1
  %357 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %358 = extractvalue { i8*, %swift.refcounted* } %357, 0
  %359 = extractvalue { i8*, %swift.refcounted* } %357, 1
  %360 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %359) #3
  %361 = bitcast %swift.refcounted* %359 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %362 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %363 = bitcast %TSi* %20 to %swift.opaque*
  %364 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %363, %swift.opaque* noalias nocapture %364, i8* %358, %swift.opaque* %361, %swift.opaque* noalias nocapture %55, i1 %362, i64 %355, %swift.bridge* %356, i64 145, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %359) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %359) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %356) #3
  %365 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %365)
  %366 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366)
  %367 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %367)
  %._value20 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 1, i64* %._value20, align 8
  %368 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %369 = bitcast %TSo9XCTestRunC* %330 to %6*
  %370 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %369, i8* %368)
  %371 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %371)
  %._value21 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %370, i64* %._value21, align 8
  %372 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %373 = extractvalue { i64, %swift.bridge* } %372, 0
  %374 = extractvalue { i64, %swift.bridge* } %372, 1
  %375 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %376 = extractvalue { i8*, %swift.refcounted* } %375, 0
  %377 = extractvalue { i8*, %swift.refcounted* } %375, 1
  %378 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %377) #3
  %379 = bitcast %swift.refcounted* %377 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %380 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %381 = bitcast %TSi* %22 to %swift.opaque*
  %382 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %381, %swift.opaque* noalias nocapture %382, i8* %376, %swift.opaque* %379, %swift.opaque* noalias nocapture %55, i1 %380, i64 %373, %swift.bridge* %374, i64 146, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %377) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %377) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %374) #3
  %383 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %383)
  %384 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %384)
  %385 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %385)
  %._value22 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 0, i64* %._value22, align 8
  %386 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %387 = bitcast %TSo9XCTestRunC* %330 to %6*
  %388 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %387, i8* %386)
  %389 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389)
  %._value23 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %388, i64* %._value23, align 8
  %390 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %391 = extractvalue { i64, %swift.bridge* } %390, 0
  %392 = extractvalue { i64, %swift.bridge* } %390, 1
  %393 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %394 = extractvalue { i8*, %swift.refcounted* } %393, 0
  %395 = extractvalue { i8*, %swift.refcounted* } %393, 1
  %396 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %395) #3
  %397 = bitcast %swift.refcounted* %395 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %398 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %399 = bitcast %TSi* %24 to %swift.opaque*
  %400 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %399, %swift.opaque* noalias nocapture %400, i8* %394, %swift.opaque* %397, %swift.opaque* noalias nocapture %55, i1 %398, i64 %391, %swift.bridge* %392, i64 147, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %395) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %395) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %392) #3
  %401 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %401)
  %402 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %402)
  %403 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %403)
  %._value24 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value24, align 8
  %404 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %405 = bitcast %TSo9XCTestRunC* %330 to %6*
  %406 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %405, i8* %404)
  %407 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %407)
  %._value25 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %406, i64* %._value25, align 8
  %408 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %409 = extractvalue { i64, %swift.bridge* } %408, 0
  %410 = extractvalue { i64, %swift.bridge* } %408, 1
  %411 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %412 = extractvalue { i8*, %swift.refcounted* } %411, 0
  %413 = extractvalue { i8*, %swift.refcounted* } %411, 1
  %414 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %413) #3
  %415 = bitcast %swift.refcounted* %413 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %55, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %416 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %417 = bitcast %TSi* %26 to %swift.opaque*
  %418 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %417, %swift.opaque* noalias nocapture %418, i8* %412, %swift.opaque* %415, %swift.opaque* noalias nocapture %55, i1 %416, i64 %409, %swift.bridge* %410, i64 148, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %413) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %413) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %410) #3
  %419 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419)
  %420 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %420)
  %421 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %422 = bitcast %TSo9XCTestRunC* %330 to %6*
  %423 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %422, i8* %421)
  %424 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %186, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %424, label %425, label %427

425:                                              ; preds = %329
  %426 = icmp slt i8 %423, 0
  br label %428

427:                                              ; preds = %329
  br label %428

428:                                              ; preds = %425, %427
  %429 = phi i1 [ false, %427 ], [ %426, %425 ]
  %430 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %193, %swift.type* swiftself @"$sSiN")
  br i1 %430, label %431, label %432

431:                                              ; preds = %428
  br label %433

432:                                              ; preds = %428
  br label %433

433:                                              ; preds = %431, %432
  %434 = phi i1 [ false, %432 ], [ false, %431 ]
  %435 = icmp eq i1 %429, %434
  %436 = xor i1 %435, true
  br i1 %436, label %437, label %438

437:                                              ; preds = %433
  br label %452

438:                                              ; preds = %433
  %439 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %439)
  %._value26 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %423, i8* %._value26, align 1
  %440 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %441 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %442 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %440, %swift.opaque* noalias nocapture swiftself %441)
  %443 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %444 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %444)
  %._value27 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value27, align 8
  %445 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %446 = bitcast %TSi* %29 to %swift.opaque*
  %447 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %445, %swift.opaque* noalias nocapture swiftself %446)
  %448 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %449 = icmp slt i64 %442, %447
  %450 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %450)
  %451 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %451)
  br i1 %449, label %478, label %489

452:                                              ; preds = %437, %478, %501, %514, %525
  %453 = phi i1 [ %533, %525 ], [ %522, %514 ], [ %509, %501 ], [ %486, %478 ], [ false, %437 ]
  %454 = xor i1 %453, true
  %455 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %456 = extractvalue { i64, %swift.bridge* } %455, 0
  %457 = extractvalue { i64, %swift.bridge* } %455, 1
  %458 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %459 = extractvalue { i8*, %swift.refcounted* } %458, 0
  %460 = extractvalue { i8*, %swift.refcounted* } %458, 1
  %461 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %460) #3
  %462 = bitcast %swift.refcounted* %460 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %55)
  %463 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %454, i8* %459, %swift.opaque* %462, %swift.opaque* noalias nocapture %55, i1 %463, i64 %456, %swift.bridge* %457, i64 149)
  call void @swift_release(%swift.refcounted* %460) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %460) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %457) #3
  %464 = bitcast %T7_XCTest26FailureDescriptionObserverC* %232 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = load i64, i64* @swift_isaMask, align 8
  %467 = and i64 %465, %466
  %468 = inttoptr i64 %467 to %swift.type*
  %469 = bitcast %swift.type* %468 to { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)**
  %470 = getelementptr inbounds { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)** %469, i64 11
  %471 = load { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)** %470, align 8, !invariant.load !178
  %472 = call swiftcc { i64, i64 } %471(%T7_XCTest26FailureDescriptionObserverC* swiftself %232)
  %473 = extractvalue { i64, i64 } %472, 0
  %474 = extractvalue { i64, i64 } %472, 1
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %536, label %476

476:                                              ; preds = %452
  %477 = inttoptr i64 %474 to %swift.bridge*
  br label %543

478:                                              ; preds = %438
  %479 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %479)
  %480 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %480)
  %._value37 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %41, i32 0, i32 0
  store i8 %423, i8* %._value37, align 1
  %481 = bitcast %TSi* %40 to %swift.opaque*
  %482 = bitcast %Ts4Int8V* %41 to %swift.opaque*
  %483 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %481, %swift.opaque* noalias nocapture %482, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %445, i8** %483, %swift.type* swiftself @"$sSiN")
  %484 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %484)
  %._value38 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  %485 = load i64, i64* %._value38, align 8
  %486 = icmp eq i64 %485, 0
  %487 = call %TSi* @"$sSiWOh"(%TSi* %40)
  %488 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %488)
  br label %452

489:                                              ; preds = %438
  %490 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %490)
  %._value28 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %423, i8* %._value28, align 1
  %491 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %492 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %440, %swift.opaque* noalias nocapture swiftself %491)
  %493 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %494 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %494)
  %._value29 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value29, align 8
  %495 = bitcast %TSi* %31 to %swift.opaque*
  %496 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %445, %swift.opaque* noalias nocapture swiftself %495)
  %497 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %498 = icmp slt i64 %496, %492
  %499 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %499)
  %500 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %500)
  br i1 %498, label %501, label %512

501:                                              ; preds = %489
  %502 = bitcast %Ts4Int8V* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %502)
  %503 = bitcast %TSi* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %503)
  %._value35 = getelementptr inbounds %TSi, %TSi* %39, i32 0, i32 0
  store i64 0, i64* %._value35, align 8
  %504 = bitcast %Ts4Int8V* %38 to %swift.opaque*
  %505 = bitcast %TSi* %39 to %swift.opaque*
  %506 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %504, %swift.opaque* noalias nocapture %505, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %440, i8** %506, %swift.type* swiftself @"$ss4Int8VN")
  %507 = bitcast %TSi* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %507)
  %._value36 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %38, i32 0, i32 0
  %508 = load i8, i8* %._value36, align 1
  %509 = icmp eq i8 %423, %508
  %510 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %38)
  %511 = bitcast %Ts4Int8V* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %511)
  br label %452

512:                                              ; preds = %489
  %513 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %186, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %513, label %514, label %525

514:                                              ; preds = %512
  %515 = bitcast %TSi* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %515)
  %516 = bitcast %Ts4Int8V* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %516)
  %._value33 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %37, i32 0, i32 0
  store i8 %423, i8* %._value33, align 1
  %517 = bitcast %TSi* %36 to %swift.opaque*
  %518 = bitcast %Ts4Int8V* %37 to %swift.opaque*
  %519 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %517, %swift.opaque* noalias nocapture %518, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %445, i8** %519, %swift.type* swiftself @"$sSiN")
  %520 = bitcast %Ts4Int8V* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %520)
  %._value34 = getelementptr inbounds %TSi, %TSi* %36, i32 0, i32 0
  %521 = load i64, i64* %._value34, align 8
  %522 = icmp eq i64 %521, 0
  %523 = call %TSi* @"$sSiWOh"(%TSi* %36)
  %524 = bitcast %TSi* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %524)
  br label %452

525:                                              ; preds = %512
  %526 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %526)
  %527 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %527)
  %._value30 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %528 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %529 = bitcast %TSi* %33 to %swift.opaque*
  %530 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %528, %swift.opaque* noalias nocapture %529, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %440, i8** %530, %swift.type* swiftself @"$ss4Int8VN")
  %531 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %531)
  %._value31 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %532 = load i8, i8* %._value31, align 1
  %533 = icmp eq i8 %423, %532
  %534 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %535 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %535)
  br label %452

536:                                              ; preds = %452
  br label %537

537:                                              ; preds = %536
  br label %538

538:                                              ; preds = %537
  br label %539

539:                                              ; preds = %538
  br label %540

540:                                              ; preds = %539
  br label %541

541:                                              ; preds = %540
  br label %542

542:                                              ; preds = %541
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 150, i32 1)
  unreachable

543:                                              ; preds = %476
  %544 = phi i64 [ %473, %476 ]
  %545 = phi %swift.bridge* [ %477, %476 ]
  %546 = bitcast %TSS* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %546)
  %._guts = getelementptr inbounds %TSS, %TSS* %34, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %544, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %545, %swift.bridge** %._guts._object._object, align 8
  %547 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @71, i64 0, i64 0), i64 70, i1 true)
  %548 = extractvalue { i64, %swift.bridge* } %547, 0
  %549 = extractvalue { i64, %swift.bridge* } %547, 1
  %550 = bitcast %TSS* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %550)
  %._guts32 = getelementptr inbounds %TSS, %TSS* %35, i32 0, i32 0
  %._guts32._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts32, i32 0, i32 0
  %._guts32._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts32._object, i32 0, i32 0
  %._guts32._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts32._object._countAndFlagsBits, i32 0, i32 0
  store i64 %548, i64* %._guts32._object._countAndFlagsBits._value, align 8
  %._guts32._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts32._object, i32 0, i32 1
  store %swift.bridge* %549, %swift.bridge** %._guts32._object._object, align 8
  %551 = bitcast %TSS* %35 to %swift.opaque*
  %552 = bitcast %TSS* %34 to %swift.opaque*
  %553 = call swiftcc i1 @"$sSTsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF"(%swift.opaque* noalias nocapture %551, %swift.type* @"$sSSN", %swift.type* @"$sSSN", i8** @"$sSSSTsWP", i8** @"$sSSSTsWP", i8** @"$sSJSQsWP", %swift.opaque* noalias nocapture swiftself %552)
  %554 = call %TSS* @"$sSSWOh"(%TSS* %35)
  %555 = bitcast %TSS* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %555)
  %556 = call %TSS* @"$sSSWOh"(%TSS* %34)
  %557 = bitcast %TSS* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %557)
  %558 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %559 = extractvalue { i64, %swift.bridge* } %558, 0
  %560 = extractvalue { i64, %swift.bridge* } %558, 1
  %561 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %562 = extractvalue { i8*, %swift.refcounted* } %561, 0
  %563 = extractvalue { i8*, %swift.refcounted* } %561, 1
  %564 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %563) #3
  %565 = bitcast %swift.refcounted* %563 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %55)
  %566 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %553, i8* %562, %swift.opaque* %565, %swift.opaque* noalias nocapture %55, i1 %566, i64 %559, %swift.bridge* %560, i64 150)
  call void @swift_release(%swift.refcounted* %563) #3
  call void %destroy(%swift.opaque* noalias %55, %swift.type* %49) #3
  call void @swift_release(%swift.refcounted* %563) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %560) #3
  %567 = bitcast %TSo9XCTestRunC* %330 to i8*
  call void @llvm.objc.release(i8* %567)
  %568 = bitcast %T7_XCTest26FailureDescriptionObserverC* %232 to i8*
  call void @llvm.objc.release(i8* %568)
  %569 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %229 to i8*
  call void @llvm.objc.release(i8* %569)
  %570 = bitcast %TSo9XCTestRunC* %90 to i8*
  call void @llvm.objc.release(i8* %570)
  %571 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %59 to i8*
  call void @llvm.objc.release(i8* %571)
  %572 = bitcast %swift.opaque* %55 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %572)
  ret void
}

define internal swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %4 to %9*
  %7 = call %9* bitcast (void ()* @objc_msgSend to %9* (%9*, i8*, i8*)*)(%9* %6, i8* %5, i8* %0)
  %8 = bitcast %9* %7 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  ret %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU2_"() #0 {
entry:
  %passingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %passingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %failingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %failingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %34 = alloca %TSi, align 8
  %35 = alloca %Ts4Int8V, align 1
  %36 = alloca %Ts4Int8V, align 1
  %37 = alloca %TSi, align 8
  %38 = alloca %TSi, align 8
  %39 = alloca %Ts4Int8V, align 1
  %40 = alloca %TSi, align 8
  %41 = alloca %Ts4Int8V, align 1
  %42 = alloca %Ts4Int8V, align 1
  %43 = alloca %TSi, align 8
  %44 = alloca %TSi, align 8
  %45 = alloca %Ts4Int8V, align 1
  %46 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %47 = extractvalue %swift.metadata_response %46, 0
  %48 = bitcast %swift.type* %47 to i8***
  %49 = getelementptr inbounds i8**, i8*** %48, i64 -1
  %.valueWitnesses = load i8**, i8*** %49, align 8, !invariant.load !178, !dereferenceable !179
  %50 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %51 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %50, i32 0, i32 8
  %size = load i64, i64* %51, align 8, !invariant.load !178
  %52 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %52)
  %53 = bitcast i8* %52 to %swift.opaque*
  %54 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa"(i64 0) #6
  %55 = extractvalue %swift.metadata_response %54, 0
  %56 = load i8*, i8** @"\01L_selector(test_whenArraysAreEqual_passes)", align 8
  %57 = call swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %56, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %57)
  %58 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %57 to %TSo6XCTestC*
  %59 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %58)
  %60 = extractvalue { i8*, %swift.refcounted* } %59, 0
  %61 = extractvalue { i8*, %swift.refcounted* } %59, 1
  %62 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %61) #3
  %63 = bitcast %swift.refcounted* %61 to %swift.opaque*
  %64 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %64, i8* %60, %swift.opaque* %63)
  call void @swift_release(%swift.refcounted* %61) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %64) #3
  call void @swift_release(%swift.refcounted* %61) #3
  %65 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %57 to i8*
  %66 = call i8* @llvm.objc.retain(i8* %65)
  %67 = bitcast i8* %66 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %68 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %57 to %TSo6XCTestC*
  %69 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %70 = bitcast %TSo6XCTestC* %68 to %5*
  %71 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %70, i8* %69)
  %72 = bitcast %6* %71 to i8*
  %73 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %72)
  %74 = bitcast i8* %73 to %6*
  %75 = ptrtoint %6* %74 to i64
  %76 = bitcast %TSo6XCTestC* %68 to i8*
  call void @llvm.objc.release(i8* %76)
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %entry
  %79 = inttoptr i64 %75 to %TSo9XCTestRunC*
  br label %87

80:                                               ; preds = %entry
  br label %81

81:                                               ; preds = %80
  br label %82

82:                                               ; preds = %81
  br label %83

83:                                               ; preds = %82
  br label %84

84:                                               ; preds = %83
  br label %85

85:                                               ; preds = %84
  br label %86

86:                                               ; preds = %85
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 168, i32 1)
  unreachable

87:                                               ; preds = %78
  %88 = phi %TSo9XCTestRunC* [ %79, %78 ]
  store %TSo9XCTestRunC* %88, %TSo9XCTestRunC** %passingTestRun.debug, align 8
  %89 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %90 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %91 = bitcast %TSo9XCTestRunC* %88 to %6*
  %92 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %91, i8* %90)
  %93 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %92, i64* %._value1, align 8
  %94 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %95 = extractvalue { i64, %swift.bridge* } %94, 0
  %96 = extractvalue { i64, %swift.bridge* } %94, 1
  %97 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %98 = extractvalue { i8*, %swift.refcounted* } %97, 0
  %99 = extractvalue { i8*, %swift.refcounted* } %97, 1
  %100 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %99) #3
  %101 = bitcast %swift.refcounted* %99 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %102 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %103 = bitcast %TSi* %1 to %swift.opaque*
  %104 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %103, %swift.opaque* noalias nocapture %104, i8* %98, %swift.opaque* %101, %swift.opaque* noalias nocapture %53, i1 %102, i64 %95, %swift.bridge* %96, i64 169, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %99) #3
  %105 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %106 = load i8*, i8** %105, align 8, !invariant.load !178
  %destroy = bitcast i8* %106 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %99) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %96) #3
  %107 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107)
  %108 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108)
  %109 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %110 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %111 = bitcast %TSo9XCTestRunC* %88 to %6*
  %112 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %111, i8* %110)
  %113 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %112, i64* %._value3, align 8
  %114 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %115 = extractvalue { i64, %swift.bridge* } %114, 0
  %116 = extractvalue { i64, %swift.bridge* } %114, 1
  %117 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %118 = extractvalue { i8*, %swift.refcounted* } %117, 0
  %119 = extractvalue { i8*, %swift.refcounted* } %117, 1
  %120 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %119) #3
  %121 = bitcast %swift.refcounted* %119 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %122 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %123 = bitcast %TSi* %3 to %swift.opaque*
  %124 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %123, %swift.opaque* noalias nocapture %124, i8* %118, %swift.opaque* %121, %swift.opaque* noalias nocapture %53, i1 %122, i64 %115, %swift.bridge* %116, i64 170, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %119) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %119) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %116) #3
  %125 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125)
  %126 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126)
  %127 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %128 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %129 = bitcast %TSo9XCTestRunC* %88 to %6*
  %130 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %129, i8* %128)
  %131 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %131)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %130, i64* %._value5, align 8
  %132 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %133 = extractvalue { i64, %swift.bridge* } %132, 0
  %134 = extractvalue { i64, %swift.bridge* } %132, 1
  %135 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %136 = extractvalue { i8*, %swift.refcounted* } %135, 0
  %137 = extractvalue { i8*, %swift.refcounted* } %135, 1
  %138 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %137) #3
  %139 = bitcast %swift.refcounted* %137 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %140 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %141 = bitcast %TSi* %5 to %swift.opaque*
  %142 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %141, %swift.opaque* noalias nocapture %142, i8* %136, %swift.opaque* %139, %swift.opaque* noalias nocapture %53, i1 %140, i64 %133, %swift.bridge* %134, i64 171, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %137) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %137) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %134) #3
  %143 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143)
  %144 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144)
  %145 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %146 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %147 = bitcast %TSo9XCTestRunC* %88 to %6*
  %148 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %147, i8* %146)
  %149 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %149)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %148, i64* %._value7, align 8
  %150 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %151 = extractvalue { i64, %swift.bridge* } %150, 0
  %152 = extractvalue { i64, %swift.bridge* } %150, 1
  %153 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %154 = extractvalue { i8*, %swift.refcounted* } %153, 0
  %155 = extractvalue { i8*, %swift.refcounted* } %153, 1
  %156 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %155) #3
  %157 = bitcast %swift.refcounted* %155 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %158 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %159 = bitcast %TSi* %7 to %swift.opaque*
  %160 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %159, %swift.opaque* noalias nocapture %160, i8* %154, %swift.opaque* %157, %swift.opaque* noalias nocapture %53, i1 %158, i64 %151, %swift.bridge* %152, i64 172, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %155) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %155) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %152) #3
  %161 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161)
  %162 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162)
  %163 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %164 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %165 = bitcast %TSo9XCTestRunC* %88 to %6*
  %166 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %165, i8* %164)
  %167 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %166, i64* %._value9, align 8
  %168 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %169 = extractvalue { i64, %swift.bridge* } %168, 0
  %170 = extractvalue { i64, %swift.bridge* } %168, 1
  %171 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %172 = extractvalue { i8*, %swift.refcounted* } %171, 0
  %173 = extractvalue { i8*, %swift.refcounted* } %171, 1
  %174 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %173) #3
  %175 = bitcast %swift.refcounted* %173 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %176 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %177 = bitcast %TSi* %9 to %swift.opaque*
  %178 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %177, %swift.opaque* noalias nocapture %178, i8* %172, %swift.opaque* %175, %swift.opaque* noalias nocapture %53, i1 %176, i64 %169, %swift.bridge* %170, i64 173, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %173) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %173) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %170) #3
  %179 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %179)
  %180 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180)
  %181 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %182 = bitcast %TSo9XCTestRunC* %88 to %6*
  %183 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %182, i8* %181)
  %184 = call i8** @"$ss4Int8VABSZsWl"() #6
  %185 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %185, label %186, label %188

186:                                              ; preds = %87
  %187 = icmp slt i8 %183, 0
  br label %189

188:                                              ; preds = %87
  br label %189

189:                                              ; preds = %186, %188
  %190 = phi i1 [ false, %188 ], [ %187, %186 ]
  %191 = call i8** @"$sS2iSZsWl"() #6
  %192 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  br label %195

194:                                              ; preds = %189
  br label %195

195:                                              ; preds = %193, %194
  %196 = phi i1 [ false, %194 ], [ false, %193 ]
  %197 = icmp eq i1 %190, %196
  %198 = xor i1 %197, true
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  br label %214

200:                                              ; preds = %195
  %201 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %201)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %183, i8* %._value10, align 1
  %202 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %203 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %204 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %203)
  %205 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %206 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %207 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %208 = bitcast %TSi* %12 to %swift.opaque*
  %209 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %208)
  %210 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %211 = icmp slt i64 %204, %209
  %212 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %212)
  %213 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %213)
  br i1 %211, label %250, label %261

214:                                              ; preds = %199, %250, %273, %286, %297
  %215 = phi i1 [ %305, %297 ], [ %294, %286 ], [ %281, %273 ], [ %258, %250 ], [ false, %199 ]
  %216 = xor i1 %215, true
  %217 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %218 = extractvalue { i64, %swift.bridge* } %217, 0
  %219 = extractvalue { i64, %swift.bridge* } %217, 1
  %220 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %221 = extractvalue { i8*, %swift.refcounted* } %220, 0
  %222 = extractvalue { i8*, %swift.refcounted* } %220, 1
  %223 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %222) #3
  %224 = bitcast %swift.refcounted* %222 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %225 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %216, i8* %221, %swift.opaque* %224, %swift.opaque* noalias nocapture %53, i1 %225, i64 %218, %swift.bridge* %219, i64 174)
  call void @swift_release(%swift.refcounted* %222) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %222) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %219) #3
  %226 = load i8*, i8** @"\01L_selector(test_whenArraysAreNotEqual_fails)", align 8
  %227 = call swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %226, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %227)
  %228 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %227 to %TSo6XCTestC*
  %229 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %228)
  %230 = extractvalue { i8*, %swift.refcounted* } %229, 0
  %231 = extractvalue { i8*, %swift.refcounted* } %229, 1
  %232 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %231) #3
  %233 = bitcast %swift.refcounted* %231 to %swift.opaque*
  %234 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %234, i8* %230, %swift.opaque* %233)
  call void @swift_release(%swift.refcounted* %231) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %234) #3
  call void @swift_release(%swift.refcounted* %231) #3
  %235 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %227 to i8*
  %236 = call i8* @llvm.objc.retain(i8* %235)
  %237 = bitcast i8* %236 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %238 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %227 to %TSo6XCTestC*
  %239 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %240 = bitcast %TSo6XCTestC* %238 to %5*
  %241 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %240, i8* %239)
  %242 = bitcast %6* %241 to i8*
  %243 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %242)
  %244 = bitcast i8* %243 to %6*
  %245 = ptrtoint %6* %244 to i64
  %246 = bitcast %TSo6XCTestC* %238 to i8*
  call void @llvm.objc.release(i8* %246)
  %247 = icmp eq i64 %245, 0
  br i1 %247, label %308, label %248

248:                                              ; preds = %214
  %249 = inttoptr i64 %245 to %TSo9XCTestRunC*
  br label %315

250:                                              ; preds = %200
  %251 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %251)
  %252 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %252)
  %._value42 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %45, i32 0, i32 0
  store i8 %183, i8* %._value42, align 1
  %253 = bitcast %TSi* %44 to %swift.opaque*
  %254 = bitcast %Ts4Int8V* %45 to %swift.opaque*
  %255 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %253, %swift.opaque* noalias nocapture %254, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %255, %swift.type* swiftself @"$sSiN")
  %256 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %256)
  %._value43 = getelementptr inbounds %TSi, %TSi* %44, i32 0, i32 0
  %257 = load i64, i64* %._value43, align 8
  %258 = icmp eq i64 %257, 0
  %259 = call %TSi* @"$sSiWOh"(%TSi* %44)
  %260 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260)
  br label %214

261:                                              ; preds = %200
  %262 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %262)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %183, i8* %._value12, align 1
  %263 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %264 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %263)
  %265 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %266 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %266)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %267 = bitcast %TSi* %14 to %swift.opaque*
  %268 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %267)
  %269 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %270 = icmp slt i64 %268, %264
  %271 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271)
  %272 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %272)
  br i1 %270, label %273, label %284

273:                                              ; preds = %261
  %274 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %274)
  %275 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %275)
  %._value40 = getelementptr inbounds %TSi, %TSi* %43, i32 0, i32 0
  store i64 0, i64* %._value40, align 8
  %276 = bitcast %Ts4Int8V* %42 to %swift.opaque*
  %277 = bitcast %TSi* %43 to %swift.opaque*
  %278 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %276, %swift.opaque* noalias nocapture %277, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %278, %swift.type* swiftself @"$ss4Int8VN")
  %279 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279)
  %._value41 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %42, i32 0, i32 0
  %280 = load i8, i8* %._value41, align 1
  %281 = icmp eq i8 %183, %280
  %282 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %42)
  %283 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %283)
  br label %214

284:                                              ; preds = %261
  %285 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %285, label %286, label %297

286:                                              ; preds = %284
  %287 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %287)
  %288 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %288)
  %._value38 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %41, i32 0, i32 0
  store i8 %183, i8* %._value38, align 1
  %289 = bitcast %TSi* %40 to %swift.opaque*
  %290 = bitcast %Ts4Int8V* %41 to %swift.opaque*
  %291 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %289, %swift.opaque* noalias nocapture %290, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %291, %swift.type* swiftself @"$sSiN")
  %292 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %292)
  %._value39 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  %293 = load i64, i64* %._value39, align 8
  %294 = icmp eq i64 %293, 0
  %295 = call %TSi* @"$sSiWOh"(%TSi* %40)
  %296 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296)
  br label %214

297:                                              ; preds = %284
  %298 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %298)
  %299 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %299)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %300 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %301 = bitcast %TSi* %16 to %swift.opaque*
  %302 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %300, %swift.opaque* noalias nocapture %301, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %302, %swift.type* swiftself @"$ss4Int8VN")
  %303 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %303)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %304 = load i8, i8* %._value15, align 1
  %305 = icmp eq i8 %183, %304
  %306 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %307 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %307)
  br label %214

308:                                              ; preds = %214
  br label %309

309:                                              ; preds = %308
  br label %310

310:                                              ; preds = %309
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312
  br label %314

314:                                              ; preds = %313
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 178, i32 1)
  unreachable

315:                                              ; preds = %248
  %316 = phi %TSo9XCTestRunC* [ %249, %248 ]
  store %TSo9XCTestRunC* %316, %TSo9XCTestRunC** %failingTestRun.debug, align 8
  %317 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %317)
  %._value16 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value16, align 8
  %318 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %319 = bitcast %TSo9XCTestRunC* %316 to %6*
  %320 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %319, i8* %318)
  %321 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %321)
  %._value17 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %320, i64* %._value17, align 8
  %322 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %323 = extractvalue { i64, %swift.bridge* } %322, 0
  %324 = extractvalue { i64, %swift.bridge* } %322, 1
  %325 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %326 = extractvalue { i8*, %swift.refcounted* } %325, 0
  %327 = extractvalue { i8*, %swift.refcounted* } %325, 1
  %328 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %327) #3
  %329 = bitcast %swift.refcounted* %327 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %330 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %331 = bitcast %TSi* %18 to %swift.opaque*
  %332 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %331, %swift.opaque* noalias nocapture %332, i8* %326, %swift.opaque* %329, %swift.opaque* noalias nocapture %53, i1 %330, i64 %323, %swift.bridge* %324, i64 179, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %327) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %327) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %324) #3
  %333 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %333)
  %334 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334)
  %335 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %335)
  %._value18 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value18, align 8
  %336 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %337 = bitcast %TSo9XCTestRunC* %316 to %6*
  %338 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %337, i8* %336)
  %339 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %339)
  %._value19 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %338, i64* %._value19, align 8
  %340 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %341 = extractvalue { i64, %swift.bridge* } %340, 0
  %342 = extractvalue { i64, %swift.bridge* } %340, 1
  %343 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %344 = extractvalue { i8*, %swift.refcounted* } %343, 0
  %345 = extractvalue { i8*, %swift.refcounted* } %343, 1
  %346 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %345) #3
  %347 = bitcast %swift.refcounted* %345 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %348 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %349 = bitcast %TSi* %20 to %swift.opaque*
  %350 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %349, %swift.opaque* noalias nocapture %350, i8* %344, %swift.opaque* %347, %swift.opaque* noalias nocapture %53, i1 %348, i64 %341, %swift.bridge* %342, i64 180, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %345) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %345) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %342) #3
  %351 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %351)
  %352 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352)
  %353 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %353)
  %._value20 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 1, i64* %._value20, align 8
  %354 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %355 = bitcast %TSo9XCTestRunC* %316 to %6*
  %356 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %355, i8* %354)
  %357 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %357)
  %._value21 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %356, i64* %._value21, align 8
  %358 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %359 = extractvalue { i64, %swift.bridge* } %358, 0
  %360 = extractvalue { i64, %swift.bridge* } %358, 1
  %361 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %362 = extractvalue { i8*, %swift.refcounted* } %361, 0
  %363 = extractvalue { i8*, %swift.refcounted* } %361, 1
  %364 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %363) #3
  %365 = bitcast %swift.refcounted* %363 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %366 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %367 = bitcast %TSi* %22 to %swift.opaque*
  %368 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %367, %swift.opaque* noalias nocapture %368, i8* %362, %swift.opaque* %365, %swift.opaque* noalias nocapture %53, i1 %366, i64 %359, %swift.bridge* %360, i64 181, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %363) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %363) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %360) #3
  %369 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369)
  %370 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370)
  %371 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %371)
  %._value22 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 0, i64* %._value22, align 8
  %372 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %373 = bitcast %TSo9XCTestRunC* %316 to %6*
  %374 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %373, i8* %372)
  %375 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %375)
  %._value23 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %374, i64* %._value23, align 8
  %376 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %377 = extractvalue { i64, %swift.bridge* } %376, 0
  %378 = extractvalue { i64, %swift.bridge* } %376, 1
  %379 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %380 = extractvalue { i8*, %swift.refcounted* } %379, 0
  %381 = extractvalue { i8*, %swift.refcounted* } %379, 1
  %382 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %381) #3
  %383 = bitcast %swift.refcounted* %381 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %384 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %385 = bitcast %TSi* %24 to %swift.opaque*
  %386 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %385, %swift.opaque* noalias nocapture %386, i8* %380, %swift.opaque* %383, %swift.opaque* noalias nocapture %53, i1 %384, i64 %377, %swift.bridge* %378, i64 182, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %381) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %381) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %378) #3
  %387 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387)
  %388 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388)
  %389 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389)
  %._value24 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value24, align 8
  %390 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %391 = bitcast %TSo9XCTestRunC* %316 to %6*
  %392 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %391, i8* %390)
  %393 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %393)
  %._value25 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %392, i64* %._value25, align 8
  %394 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %395 = extractvalue { i64, %swift.bridge* } %394, 0
  %396 = extractvalue { i64, %swift.bridge* } %394, 1
  %397 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %398 = extractvalue { i8*, %swift.refcounted* } %397, 0
  %399 = extractvalue { i8*, %swift.refcounted* } %397, 1
  %400 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %399) #3
  %401 = bitcast %swift.refcounted* %399 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %402 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %403 = bitcast %TSi* %26 to %swift.opaque*
  %404 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %403, %swift.opaque* noalias nocapture %404, i8* %398, %swift.opaque* %401, %swift.opaque* noalias nocapture %53, i1 %402, i64 %395, %swift.bridge* %396, i64 183, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %399) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %399) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %396) #3
  %405 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %405)
  %406 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %406)
  %407 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %408 = bitcast %TSo9XCTestRunC* %316 to %6*
  %409 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %408, i8* %407)
  %410 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %410, label %411, label %413

411:                                              ; preds = %315
  %412 = icmp slt i8 %409, 0
  br label %414

413:                                              ; preds = %315
  br label %414

414:                                              ; preds = %411, %413
  %415 = phi i1 [ false, %413 ], [ %412, %411 ]
  %416 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %416, label %417, label %418

417:                                              ; preds = %414
  br label %419

418:                                              ; preds = %414
  br label %419

419:                                              ; preds = %417, %418
  %420 = phi i1 [ false, %418 ], [ false, %417 ]
  %421 = icmp eq i1 %415, %420
  %422 = xor i1 %421, true
  br i1 %422, label %423, label %424

423:                                              ; preds = %419
  br label %438

424:                                              ; preds = %419
  %425 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %425)
  %._value26 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %409, i8* %._value26, align 1
  %426 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %427 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %428 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %426, %swift.opaque* noalias nocapture swiftself %427)
  %429 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %430 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %430)
  %._value27 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value27, align 8
  %431 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %432 = bitcast %TSi* %29 to %swift.opaque*
  %433 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %431, %swift.opaque* noalias nocapture swiftself %432)
  %434 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %435 = icmp slt i64 %428, %433
  %436 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %436)
  %437 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %437)
  br i1 %435, label %455, label %466

438:                                              ; preds = %423, %455, %478, %491, %502
  %439 = phi i1 [ %510, %502 ], [ %499, %491 ], [ %486, %478 ], [ %463, %455 ], [ false, %423 ]
  %440 = xor i1 %439, true
  %441 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %442 = extractvalue { i64, %swift.bridge* } %441, 0
  %443 = extractvalue { i64, %swift.bridge* } %441, 1
  %444 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %445 = extractvalue { i8*, %swift.refcounted* } %444, 0
  %446 = extractvalue { i8*, %swift.refcounted* } %444, 1
  %447 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %446) #3
  %448 = bitcast %swift.refcounted* %446 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %449 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %440, i8* %445, %swift.opaque* %448, %swift.opaque* noalias nocapture %53, i1 %449, i64 %442, %swift.bridge* %443, i64 184)
  call void @swift_release(%swift.refcounted* %446) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %446) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %443) #3
  %450 = bitcast %TSo9XCTestRunC* %316 to i8*
  call void @llvm.objc.release(i8* %450)
  %451 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %227 to i8*
  call void @llvm.objc.release(i8* %451)
  %452 = bitcast %TSo9XCTestRunC* %88 to i8*
  call void @llvm.objc.release(i8* %452)
  %453 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %57 to i8*
  call void @llvm.objc.release(i8* %453)
  %454 = bitcast %swift.opaque* %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %454)
  ret void

455:                                              ; preds = %424
  %456 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %456)
  %457 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %457)
  %._value36 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %39, i32 0, i32 0
  store i8 %409, i8* %._value36, align 1
  %458 = bitcast %TSi* %38 to %swift.opaque*
  %459 = bitcast %Ts4Int8V* %39 to %swift.opaque*
  %460 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %458, %swift.opaque* noalias nocapture %459, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %431, i8** %460, %swift.type* swiftself @"$sSiN")
  %461 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %461)
  %._value37 = getelementptr inbounds %TSi, %TSi* %38, i32 0, i32 0
  %462 = load i64, i64* %._value37, align 8
  %463 = icmp eq i64 %462, 0
  %464 = call %TSi* @"$sSiWOh"(%TSi* %38)
  %465 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465)
  br label %438

466:                                              ; preds = %424
  %467 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %467)
  %._value28 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %409, i8* %._value28, align 1
  %468 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %469 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %426, %swift.opaque* noalias nocapture swiftself %468)
  %470 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %471 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %471)
  %._value29 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value29, align 8
  %472 = bitcast %TSi* %31 to %swift.opaque*
  %473 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %431, %swift.opaque* noalias nocapture swiftself %472)
  %474 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %475 = icmp slt i64 %473, %469
  %476 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476)
  %477 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %477)
  br i1 %475, label %478, label %489

478:                                              ; preds = %466
  %479 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %479)
  %480 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %480)
  %._value34 = getelementptr inbounds %TSi, %TSi* %37, i32 0, i32 0
  store i64 0, i64* %._value34, align 8
  %481 = bitcast %Ts4Int8V* %36 to %swift.opaque*
  %482 = bitcast %TSi* %37 to %swift.opaque*
  %483 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %481, %swift.opaque* noalias nocapture %482, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %426, i8** %483, %swift.type* swiftself @"$ss4Int8VN")
  %484 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484)
  %._value35 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %36, i32 0, i32 0
  %485 = load i8, i8* %._value35, align 1
  %486 = icmp eq i8 %409, %485
  %487 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %36)
  %488 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %488)
  br label %438

489:                                              ; preds = %466
  %490 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %490, label %491, label %502

491:                                              ; preds = %489
  %492 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %492)
  %493 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %493)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %35, i32 0, i32 0
  store i8 %409, i8* %._value32, align 1
  %494 = bitcast %TSi* %34 to %swift.opaque*
  %495 = bitcast %Ts4Int8V* %35 to %swift.opaque*
  %496 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %494, %swift.opaque* noalias nocapture %495, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %431, i8** %496, %swift.type* swiftself @"$sSiN")
  %497 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %497)
  %._value33 = getelementptr inbounds %TSi, %TSi* %34, i32 0, i32 0
  %498 = load i64, i64* %._value33, align 8
  %499 = icmp eq i64 %498, 0
  %500 = call %TSi* @"$sSiWOh"(%TSi* %34)
  %501 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %501)
  br label %438

502:                                              ; preds = %489
  %503 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %503)
  %504 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %504)
  %._value30 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %505 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %506 = bitcast %TSi* %33 to %swift.opaque*
  %507 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %505, %swift.opaque* noalias nocapture %506, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %426, i8** %507, %swift.type* swiftself @"$ss4Int8VN")
  %508 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %508)
  %._value31 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %509 = load i8, i8* %._value31, align 1
  %510 = icmp eq i8 %409, %509
  %511 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %512 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %512)
  br label %438
}

define internal swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %4 to %10*
  %7 = call %10* bitcast (void ()* @objc_msgSend to %10* (%10*, i8*, i8*)*)(%10* %6, i8* %5, i8* %0)
  %8 = bitcast %10* %7 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  ret %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU3_"() #0 {
entry:
  %passingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %passingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %failingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %failingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %34 = alloca %TSi, align 8
  %35 = alloca %Ts4Int8V, align 1
  %36 = alloca %Ts4Int8V, align 1
  %37 = alloca %TSi, align 8
  %38 = alloca %TSi, align 8
  %39 = alloca %Ts4Int8V, align 1
  %40 = alloca %TSi, align 8
  %41 = alloca %Ts4Int8V, align 1
  %42 = alloca %Ts4Int8V, align 1
  %43 = alloca %TSi, align 8
  %44 = alloca %TSi, align 8
  %45 = alloca %Ts4Int8V, align 1
  %46 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %47 = extractvalue %swift.metadata_response %46, 0
  %48 = bitcast %swift.type* %47 to i8***
  %49 = getelementptr inbounds i8**, i8*** %48, i64 -1
  %.valueWitnesses = load i8**, i8*** %49, align 8, !invariant.load !178, !dereferenceable !179
  %50 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %51 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %50, i32 0, i32 8
  %size = load i64, i64* %51, align 8, !invariant.load !178
  %52 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %52)
  %53 = bitcast i8* %52 to %swift.opaque*
  %54 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa"(i64 0) #6
  %55 = extractvalue %swift.metadata_response %54, 0
  %56 = load i8*, i8** @"\01L_selector(test_whenDictionariesAreEqual_passes)", align 8
  %57 = call swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %56, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %57)
  %58 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %57 to %TSo6XCTestC*
  %59 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %58)
  %60 = extractvalue { i8*, %swift.refcounted* } %59, 0
  %61 = extractvalue { i8*, %swift.refcounted* } %59, 1
  %62 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %61) #3
  %63 = bitcast %swift.refcounted* %61 to %swift.opaque*
  %64 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %64, i8* %60, %swift.opaque* %63)
  call void @swift_release(%swift.refcounted* %61) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %64) #3
  call void @swift_release(%swift.refcounted* %61) #3
  %65 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %57 to i8*
  %66 = call i8* @llvm.objc.retain(i8* %65)
  %67 = bitcast i8* %66 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %68 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %57 to %TSo6XCTestC*
  %69 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %70 = bitcast %TSo6XCTestC* %68 to %5*
  %71 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %70, i8* %69)
  %72 = bitcast %6* %71 to i8*
  %73 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %72)
  %74 = bitcast i8* %73 to %6*
  %75 = ptrtoint %6* %74 to i64
  %76 = bitcast %TSo6XCTestC* %68 to i8*
  call void @llvm.objc.release(i8* %76)
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %entry
  %79 = inttoptr i64 %75 to %TSo9XCTestRunC*
  br label %87

80:                                               ; preds = %entry
  br label %81

81:                                               ; preds = %80
  br label %82

82:                                               ; preds = %81
  br label %83

83:                                               ; preds = %82
  br label %84

84:                                               ; preds = %83
  br label %85

85:                                               ; preds = %84
  br label %86

86:                                               ; preds = %85
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 202, i32 1)
  unreachable

87:                                               ; preds = %78
  %88 = phi %TSo9XCTestRunC* [ %79, %78 ]
  store %TSo9XCTestRunC* %88, %TSo9XCTestRunC** %passingTestRun.debug, align 8
  %89 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %90 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %91 = bitcast %TSo9XCTestRunC* %88 to %6*
  %92 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %91, i8* %90)
  %93 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %92, i64* %._value1, align 8
  %94 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %95 = extractvalue { i64, %swift.bridge* } %94, 0
  %96 = extractvalue { i64, %swift.bridge* } %94, 1
  %97 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %98 = extractvalue { i8*, %swift.refcounted* } %97, 0
  %99 = extractvalue { i8*, %swift.refcounted* } %97, 1
  %100 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %99) #3
  %101 = bitcast %swift.refcounted* %99 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %102 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %103 = bitcast %TSi* %1 to %swift.opaque*
  %104 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %103, %swift.opaque* noalias nocapture %104, i8* %98, %swift.opaque* %101, %swift.opaque* noalias nocapture %53, i1 %102, i64 %95, %swift.bridge* %96, i64 203, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %99) #3
  %105 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %106 = load i8*, i8** %105, align 8, !invariant.load !178
  %destroy = bitcast i8* %106 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %99) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %96) #3
  %107 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107)
  %108 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108)
  %109 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %110 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %111 = bitcast %TSo9XCTestRunC* %88 to %6*
  %112 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %111, i8* %110)
  %113 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %112, i64* %._value3, align 8
  %114 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %115 = extractvalue { i64, %swift.bridge* } %114, 0
  %116 = extractvalue { i64, %swift.bridge* } %114, 1
  %117 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %118 = extractvalue { i8*, %swift.refcounted* } %117, 0
  %119 = extractvalue { i8*, %swift.refcounted* } %117, 1
  %120 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %119) #3
  %121 = bitcast %swift.refcounted* %119 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %122 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %123 = bitcast %TSi* %3 to %swift.opaque*
  %124 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %123, %swift.opaque* noalias nocapture %124, i8* %118, %swift.opaque* %121, %swift.opaque* noalias nocapture %53, i1 %122, i64 %115, %swift.bridge* %116, i64 204, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %119) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %119) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %116) #3
  %125 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125)
  %126 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126)
  %127 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %128 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %129 = bitcast %TSo9XCTestRunC* %88 to %6*
  %130 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %129, i8* %128)
  %131 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %131)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %130, i64* %._value5, align 8
  %132 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %133 = extractvalue { i64, %swift.bridge* } %132, 0
  %134 = extractvalue { i64, %swift.bridge* } %132, 1
  %135 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %136 = extractvalue { i8*, %swift.refcounted* } %135, 0
  %137 = extractvalue { i8*, %swift.refcounted* } %135, 1
  %138 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %137) #3
  %139 = bitcast %swift.refcounted* %137 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %140 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %141 = bitcast %TSi* %5 to %swift.opaque*
  %142 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %141, %swift.opaque* noalias nocapture %142, i8* %136, %swift.opaque* %139, %swift.opaque* noalias nocapture %53, i1 %140, i64 %133, %swift.bridge* %134, i64 205, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %137) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %137) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %134) #3
  %143 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143)
  %144 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144)
  %145 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %146 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %147 = bitcast %TSo9XCTestRunC* %88 to %6*
  %148 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %147, i8* %146)
  %149 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %149)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %148, i64* %._value7, align 8
  %150 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %151 = extractvalue { i64, %swift.bridge* } %150, 0
  %152 = extractvalue { i64, %swift.bridge* } %150, 1
  %153 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %154 = extractvalue { i8*, %swift.refcounted* } %153, 0
  %155 = extractvalue { i8*, %swift.refcounted* } %153, 1
  %156 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %155) #3
  %157 = bitcast %swift.refcounted* %155 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %158 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %159 = bitcast %TSi* %7 to %swift.opaque*
  %160 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %159, %swift.opaque* noalias nocapture %160, i8* %154, %swift.opaque* %157, %swift.opaque* noalias nocapture %53, i1 %158, i64 %151, %swift.bridge* %152, i64 206, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %155) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %155) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %152) #3
  %161 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161)
  %162 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162)
  %163 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %164 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %165 = bitcast %TSo9XCTestRunC* %88 to %6*
  %166 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %165, i8* %164)
  %167 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %166, i64* %._value9, align 8
  %168 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %169 = extractvalue { i64, %swift.bridge* } %168, 0
  %170 = extractvalue { i64, %swift.bridge* } %168, 1
  %171 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %172 = extractvalue { i8*, %swift.refcounted* } %171, 0
  %173 = extractvalue { i8*, %swift.refcounted* } %171, 1
  %174 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %173) #3
  %175 = bitcast %swift.refcounted* %173 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %176 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %177 = bitcast %TSi* %9 to %swift.opaque*
  %178 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %177, %swift.opaque* noalias nocapture %178, i8* %172, %swift.opaque* %175, %swift.opaque* noalias nocapture %53, i1 %176, i64 %169, %swift.bridge* %170, i64 207, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %173) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %173) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %170) #3
  %179 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %179)
  %180 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180)
  %181 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %182 = bitcast %TSo9XCTestRunC* %88 to %6*
  %183 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %182, i8* %181)
  %184 = call i8** @"$ss4Int8VABSZsWl"() #6
  %185 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %185, label %186, label %188

186:                                              ; preds = %87
  %187 = icmp slt i8 %183, 0
  br label %189

188:                                              ; preds = %87
  br label %189

189:                                              ; preds = %186, %188
  %190 = phi i1 [ false, %188 ], [ %187, %186 ]
  %191 = call i8** @"$sS2iSZsWl"() #6
  %192 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  br label %195

194:                                              ; preds = %189
  br label %195

195:                                              ; preds = %193, %194
  %196 = phi i1 [ false, %194 ], [ false, %193 ]
  %197 = icmp eq i1 %190, %196
  %198 = xor i1 %197, true
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  br label %214

200:                                              ; preds = %195
  %201 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %201)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %183, i8* %._value10, align 1
  %202 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %203 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %204 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %203)
  %205 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %206 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %207 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %208 = bitcast %TSi* %12 to %swift.opaque*
  %209 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %208)
  %210 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %211 = icmp slt i64 %204, %209
  %212 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %212)
  %213 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %213)
  br i1 %211, label %250, label %261

214:                                              ; preds = %199, %250, %273, %286, %297
  %215 = phi i1 [ %305, %297 ], [ %294, %286 ], [ %281, %273 ], [ %258, %250 ], [ false, %199 ]
  %216 = xor i1 %215, true
  %217 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %218 = extractvalue { i64, %swift.bridge* } %217, 0
  %219 = extractvalue { i64, %swift.bridge* } %217, 1
  %220 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %221 = extractvalue { i8*, %swift.refcounted* } %220, 0
  %222 = extractvalue { i8*, %swift.refcounted* } %220, 1
  %223 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %222) #3
  %224 = bitcast %swift.refcounted* %222 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %225 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %216, i8* %221, %swift.opaque* %224, %swift.opaque* noalias nocapture %53, i1 %225, i64 %218, %swift.bridge* %219, i64 208)
  call void @swift_release(%swift.refcounted* %222) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %222) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %219) #3
  %226 = load i8*, i8** @"\01L_selector(test_whenDictionariesAreNotEqual_fails)", align 8
  %227 = call swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %226, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %227)
  %228 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %227 to %TSo6XCTestC*
  %229 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %228)
  %230 = extractvalue { i8*, %swift.refcounted* } %229, 0
  %231 = extractvalue { i8*, %swift.refcounted* } %229, 1
  %232 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %231) #3
  %233 = bitcast %swift.refcounted* %231 to %swift.opaque*
  %234 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %234, i8* %230, %swift.opaque* %233)
  call void @swift_release(%swift.refcounted* %231) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %234) #3
  call void @swift_release(%swift.refcounted* %231) #3
  %235 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %227 to i8*
  %236 = call i8* @llvm.objc.retain(i8* %235)
  %237 = bitcast i8* %236 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %238 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %227 to %TSo6XCTestC*
  %239 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %240 = bitcast %TSo6XCTestC* %238 to %5*
  %241 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %240, i8* %239)
  %242 = bitcast %6* %241 to i8*
  %243 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %242)
  %244 = bitcast i8* %243 to %6*
  %245 = ptrtoint %6* %244 to i64
  %246 = bitcast %TSo6XCTestC* %238 to i8*
  call void @llvm.objc.release(i8* %246)
  %247 = icmp eq i64 %245, 0
  br i1 %247, label %308, label %248

248:                                              ; preds = %214
  %249 = inttoptr i64 %245 to %TSo9XCTestRunC*
  br label %315

250:                                              ; preds = %200
  %251 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %251)
  %252 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %252)
  %._value42 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %45, i32 0, i32 0
  store i8 %183, i8* %._value42, align 1
  %253 = bitcast %TSi* %44 to %swift.opaque*
  %254 = bitcast %Ts4Int8V* %45 to %swift.opaque*
  %255 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %253, %swift.opaque* noalias nocapture %254, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %255, %swift.type* swiftself @"$sSiN")
  %256 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %256)
  %._value43 = getelementptr inbounds %TSi, %TSi* %44, i32 0, i32 0
  %257 = load i64, i64* %._value43, align 8
  %258 = icmp eq i64 %257, 0
  %259 = call %TSi* @"$sSiWOh"(%TSi* %44)
  %260 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260)
  br label %214

261:                                              ; preds = %200
  %262 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %262)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %183, i8* %._value12, align 1
  %263 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %264 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %263)
  %265 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %266 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %266)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %267 = bitcast %TSi* %14 to %swift.opaque*
  %268 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %267)
  %269 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %270 = icmp slt i64 %268, %264
  %271 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271)
  %272 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %272)
  br i1 %270, label %273, label %284

273:                                              ; preds = %261
  %274 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %274)
  %275 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %275)
  %._value40 = getelementptr inbounds %TSi, %TSi* %43, i32 0, i32 0
  store i64 0, i64* %._value40, align 8
  %276 = bitcast %Ts4Int8V* %42 to %swift.opaque*
  %277 = bitcast %TSi* %43 to %swift.opaque*
  %278 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %276, %swift.opaque* noalias nocapture %277, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %278, %swift.type* swiftself @"$ss4Int8VN")
  %279 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279)
  %._value41 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %42, i32 0, i32 0
  %280 = load i8, i8* %._value41, align 1
  %281 = icmp eq i8 %183, %280
  %282 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %42)
  %283 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %283)
  br label %214

284:                                              ; preds = %261
  %285 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %285, label %286, label %297

286:                                              ; preds = %284
  %287 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %287)
  %288 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %288)
  %._value38 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %41, i32 0, i32 0
  store i8 %183, i8* %._value38, align 1
  %289 = bitcast %TSi* %40 to %swift.opaque*
  %290 = bitcast %Ts4Int8V* %41 to %swift.opaque*
  %291 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %289, %swift.opaque* noalias nocapture %290, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %291, %swift.type* swiftself @"$sSiN")
  %292 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %292)
  %._value39 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  %293 = load i64, i64* %._value39, align 8
  %294 = icmp eq i64 %293, 0
  %295 = call %TSi* @"$sSiWOh"(%TSi* %40)
  %296 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296)
  br label %214

297:                                              ; preds = %284
  %298 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %298)
  %299 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %299)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %300 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %301 = bitcast %TSi* %16 to %swift.opaque*
  %302 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %300, %swift.opaque* noalias nocapture %301, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %302, %swift.type* swiftself @"$ss4Int8VN")
  %303 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %303)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %304 = load i8, i8* %._value15, align 1
  %305 = icmp eq i8 %183, %304
  %306 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %307 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %307)
  br label %214

308:                                              ; preds = %214
  br label %309

309:                                              ; preds = %308
  br label %310

310:                                              ; preds = %309
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312
  br label %314

314:                                              ; preds = %313
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 212, i32 1)
  unreachable

315:                                              ; preds = %248
  %316 = phi %TSo9XCTestRunC* [ %249, %248 ]
  store %TSo9XCTestRunC* %316, %TSo9XCTestRunC** %failingTestRun.debug, align 8
  %317 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %317)
  %._value16 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value16, align 8
  %318 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %319 = bitcast %TSo9XCTestRunC* %316 to %6*
  %320 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %319, i8* %318)
  %321 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %321)
  %._value17 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %320, i64* %._value17, align 8
  %322 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %323 = extractvalue { i64, %swift.bridge* } %322, 0
  %324 = extractvalue { i64, %swift.bridge* } %322, 1
  %325 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %326 = extractvalue { i8*, %swift.refcounted* } %325, 0
  %327 = extractvalue { i8*, %swift.refcounted* } %325, 1
  %328 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %327) #3
  %329 = bitcast %swift.refcounted* %327 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %330 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %331 = bitcast %TSi* %18 to %swift.opaque*
  %332 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %331, %swift.opaque* noalias nocapture %332, i8* %326, %swift.opaque* %329, %swift.opaque* noalias nocapture %53, i1 %330, i64 %323, %swift.bridge* %324, i64 213, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %327) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %327) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %324) #3
  %333 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %333)
  %334 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334)
  %335 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %335)
  %._value18 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value18, align 8
  %336 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %337 = bitcast %TSo9XCTestRunC* %316 to %6*
  %338 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %337, i8* %336)
  %339 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %339)
  %._value19 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %338, i64* %._value19, align 8
  %340 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %341 = extractvalue { i64, %swift.bridge* } %340, 0
  %342 = extractvalue { i64, %swift.bridge* } %340, 1
  %343 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %344 = extractvalue { i8*, %swift.refcounted* } %343, 0
  %345 = extractvalue { i8*, %swift.refcounted* } %343, 1
  %346 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %345) #3
  %347 = bitcast %swift.refcounted* %345 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %348 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %349 = bitcast %TSi* %20 to %swift.opaque*
  %350 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %349, %swift.opaque* noalias nocapture %350, i8* %344, %swift.opaque* %347, %swift.opaque* noalias nocapture %53, i1 %348, i64 %341, %swift.bridge* %342, i64 214, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %345) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %345) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %342) #3
  %351 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %351)
  %352 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352)
  %353 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %353)
  %._value20 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 1, i64* %._value20, align 8
  %354 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %355 = bitcast %TSo9XCTestRunC* %316 to %6*
  %356 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %355, i8* %354)
  %357 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %357)
  %._value21 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %356, i64* %._value21, align 8
  %358 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %359 = extractvalue { i64, %swift.bridge* } %358, 0
  %360 = extractvalue { i64, %swift.bridge* } %358, 1
  %361 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %362 = extractvalue { i8*, %swift.refcounted* } %361, 0
  %363 = extractvalue { i8*, %swift.refcounted* } %361, 1
  %364 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %363) #3
  %365 = bitcast %swift.refcounted* %363 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %366 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %367 = bitcast %TSi* %22 to %swift.opaque*
  %368 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %367, %swift.opaque* noalias nocapture %368, i8* %362, %swift.opaque* %365, %swift.opaque* noalias nocapture %53, i1 %366, i64 %359, %swift.bridge* %360, i64 215, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %363) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %363) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %360) #3
  %369 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369)
  %370 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370)
  %371 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %371)
  %._value22 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 0, i64* %._value22, align 8
  %372 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %373 = bitcast %TSo9XCTestRunC* %316 to %6*
  %374 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %373, i8* %372)
  %375 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %375)
  %._value23 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %374, i64* %._value23, align 8
  %376 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %377 = extractvalue { i64, %swift.bridge* } %376, 0
  %378 = extractvalue { i64, %swift.bridge* } %376, 1
  %379 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %380 = extractvalue { i8*, %swift.refcounted* } %379, 0
  %381 = extractvalue { i8*, %swift.refcounted* } %379, 1
  %382 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %381) #3
  %383 = bitcast %swift.refcounted* %381 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %384 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %385 = bitcast %TSi* %24 to %swift.opaque*
  %386 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %385, %swift.opaque* noalias nocapture %386, i8* %380, %swift.opaque* %383, %swift.opaque* noalias nocapture %53, i1 %384, i64 %377, %swift.bridge* %378, i64 216, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %381) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %381) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %378) #3
  %387 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387)
  %388 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388)
  %389 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389)
  %._value24 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value24, align 8
  %390 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %391 = bitcast %TSo9XCTestRunC* %316 to %6*
  %392 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %391, i8* %390)
  %393 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %393)
  %._value25 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %392, i64* %._value25, align 8
  %394 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %395 = extractvalue { i64, %swift.bridge* } %394, 0
  %396 = extractvalue { i64, %swift.bridge* } %394, 1
  %397 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %398 = extractvalue { i8*, %swift.refcounted* } %397, 0
  %399 = extractvalue { i8*, %swift.refcounted* } %397, 1
  %400 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %399) #3
  %401 = bitcast %swift.refcounted* %399 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %402 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %403 = bitcast %TSi* %26 to %swift.opaque*
  %404 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %403, %swift.opaque* noalias nocapture %404, i8* %398, %swift.opaque* %401, %swift.opaque* noalias nocapture %53, i1 %402, i64 %395, %swift.bridge* %396, i64 217, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %399) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %399) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %396) #3
  %405 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %405)
  %406 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %406)
  %407 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %408 = bitcast %TSo9XCTestRunC* %316 to %6*
  %409 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %408, i8* %407)
  %410 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %410, label %411, label %413

411:                                              ; preds = %315
  %412 = icmp slt i8 %409, 0
  br label %414

413:                                              ; preds = %315
  br label %414

414:                                              ; preds = %411, %413
  %415 = phi i1 [ false, %413 ], [ %412, %411 ]
  %416 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %416, label %417, label %418

417:                                              ; preds = %414
  br label %419

418:                                              ; preds = %414
  br label %419

419:                                              ; preds = %417, %418
  %420 = phi i1 [ false, %418 ], [ false, %417 ]
  %421 = icmp eq i1 %415, %420
  %422 = xor i1 %421, true
  br i1 %422, label %423, label %424

423:                                              ; preds = %419
  br label %438

424:                                              ; preds = %419
  %425 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %425)
  %._value26 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %409, i8* %._value26, align 1
  %426 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %427 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %428 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %426, %swift.opaque* noalias nocapture swiftself %427)
  %429 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %430 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %430)
  %._value27 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value27, align 8
  %431 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %432 = bitcast %TSi* %29 to %swift.opaque*
  %433 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %431, %swift.opaque* noalias nocapture swiftself %432)
  %434 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %435 = icmp slt i64 %428, %433
  %436 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %436)
  %437 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %437)
  br i1 %435, label %455, label %466

438:                                              ; preds = %423, %455, %478, %491, %502
  %439 = phi i1 [ %510, %502 ], [ %499, %491 ], [ %486, %478 ], [ %463, %455 ], [ false, %423 ]
  %440 = xor i1 %439, true
  %441 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %442 = extractvalue { i64, %swift.bridge* } %441, 0
  %443 = extractvalue { i64, %swift.bridge* } %441, 1
  %444 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %445 = extractvalue { i8*, %swift.refcounted* } %444, 0
  %446 = extractvalue { i8*, %swift.refcounted* } %444, 1
  %447 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %446) #3
  %448 = bitcast %swift.refcounted* %446 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %449 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %440, i8* %445, %swift.opaque* %448, %swift.opaque* noalias nocapture %53, i1 %449, i64 %442, %swift.bridge* %443, i64 218)
  call void @swift_release(%swift.refcounted* %446) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %446) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %443) #3
  %450 = bitcast %TSo9XCTestRunC* %316 to i8*
  call void @llvm.objc.release(i8* %450)
  %451 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %227 to i8*
  call void @llvm.objc.release(i8* %451)
  %452 = bitcast %TSo9XCTestRunC* %88 to i8*
  call void @llvm.objc.release(i8* %452)
  %453 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %57 to i8*
  call void @llvm.objc.release(i8* %453)
  %454 = bitcast %swift.opaque* %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %454)
  ret void

455:                                              ; preds = %424
  %456 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %456)
  %457 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %457)
  %._value36 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %39, i32 0, i32 0
  store i8 %409, i8* %._value36, align 1
  %458 = bitcast %TSi* %38 to %swift.opaque*
  %459 = bitcast %Ts4Int8V* %39 to %swift.opaque*
  %460 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %458, %swift.opaque* noalias nocapture %459, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %431, i8** %460, %swift.type* swiftself @"$sSiN")
  %461 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %461)
  %._value37 = getelementptr inbounds %TSi, %TSi* %38, i32 0, i32 0
  %462 = load i64, i64* %._value37, align 8
  %463 = icmp eq i64 %462, 0
  %464 = call %TSi* @"$sSiWOh"(%TSi* %38)
  %465 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465)
  br label %438

466:                                              ; preds = %424
  %467 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %467)
  %._value28 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %409, i8* %._value28, align 1
  %468 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %469 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %426, %swift.opaque* noalias nocapture swiftself %468)
  %470 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %471 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %471)
  %._value29 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value29, align 8
  %472 = bitcast %TSi* %31 to %swift.opaque*
  %473 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %431, %swift.opaque* noalias nocapture swiftself %472)
  %474 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %475 = icmp slt i64 %473, %469
  %476 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476)
  %477 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %477)
  br i1 %475, label %478, label %489

478:                                              ; preds = %466
  %479 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %479)
  %480 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %480)
  %._value34 = getelementptr inbounds %TSi, %TSi* %37, i32 0, i32 0
  store i64 0, i64* %._value34, align 8
  %481 = bitcast %Ts4Int8V* %36 to %swift.opaque*
  %482 = bitcast %TSi* %37 to %swift.opaque*
  %483 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %481, %swift.opaque* noalias nocapture %482, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %426, i8** %483, %swift.type* swiftself @"$ss4Int8VN")
  %484 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484)
  %._value35 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %36, i32 0, i32 0
  %485 = load i8, i8* %._value35, align 1
  %486 = icmp eq i8 %409, %485
  %487 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %36)
  %488 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %488)
  br label %438

489:                                              ; preds = %466
  %490 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %490, label %491, label %502

491:                                              ; preds = %489
  %492 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %492)
  %493 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %493)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %35, i32 0, i32 0
  store i8 %409, i8* %._value32, align 1
  %494 = bitcast %TSi* %34 to %swift.opaque*
  %495 = bitcast %Ts4Int8V* %35 to %swift.opaque*
  %496 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %494, %swift.opaque* noalias nocapture %495, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %431, i8** %496, %swift.type* swiftself @"$sSiN")
  %497 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %497)
  %._value33 = getelementptr inbounds %TSi, %TSi* %34, i32 0, i32 0
  %498 = load i64, i64* %._value33, align 8
  %499 = icmp eq i64 %498, 0
  %500 = call %TSi* @"$sSiWOh"(%TSi* %34)
  %501 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %501)
  br label %438

502:                                              ; preds = %489
  %503 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %503)
  %504 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %504)
  %._value30 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %505 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %506 = bitcast %TSi* %33 to %swift.opaque*
  %507 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %505, %swift.opaque* noalias nocapture %506, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %426, i8** %507, %swift.type* swiftself @"$ss4Int8VN")
  %508 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %508)
  %._value31 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %509 = load i8, i8* %._value31, align 1
  %510 = icmp eq i8 %409, %509
  %511 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %512 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %512)
  br label %438
}

define internal swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %4 to %11*
  %7 = call %11* bitcast (void ()* @objc_msgSend to %11* (%11*, i8*, i8*)*)(%11* %6, i8* %5, i8* %0)
  %8 = bitcast %11* %7 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  ret %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU4_"() #0 {
entry:
  %0 = alloca %Ts4Int8V, align 1
  %1 = alloca %TSi, align 8
  %2 = alloca %Ts4Int8V, align 1
  %3 = alloca %TSi, align 8
  %4 = alloca %Ts4Int8V, align 1
  %5 = alloca %TSi, align 8
  %failingTestRun.debug = alloca %TSo9XCTestRunC*, align 8
  %6 = bitcast %TSo9XCTestRunC** %failingTestRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 8, i1 false)
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %TSi, align 8
  %12 = alloca %Ts4Int8V, align 1
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %TSi, align 8
  %16 = alloca %Ts4Int8V, align 1
  %17 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %18 = extractvalue %swift.metadata_response %17, 0
  %19 = bitcast %swift.type* %18 to i8***
  %20 = getelementptr inbounds i8**, i8*** %19, i64 -1
  %.valueWitnesses = load i8**, i8*** %20, align 8, !invariant.load !178, !dereferenceable !179
  %21 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %22 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %21, i32 0, i32 8
  %size = load i64, i64* %22, align 8, !invariant.load !178
  %23 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %23)
  %24 = bitcast i8* %23 to %swift.opaque*
  %25 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = load i8*, i8** @"\01L_selector(test_whenEqual_passes)", align 8
  %28 = call swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %27, %swift.type* swiftself %26)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %28)
  %29 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %28 to %TSo6XCTestC*
  %30 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %29)
  %31 = extractvalue { i8*, %swift.refcounted* } %30, 0
  %32 = extractvalue { i8*, %swift.refcounted* } %30, 1
  %33 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %32) #3
  %34 = bitcast %swift.refcounted* %32 to %swift.opaque*
  %35 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %35, i8* %31, %swift.opaque* %34)
  call void @swift_release(%swift.refcounted* %32) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %35) #3
  call void @swift_release(%swift.refcounted* %32) #3
  %36 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %28 to i8*
  %37 = call i8* @llvm.objc.retain(i8* %36)
  %38 = bitcast i8* %37 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %39 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %28 to %TSo6XCTestC*
  %40 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %41 = bitcast %TSo6XCTestC* %39 to %5*
  %42 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %41, i8* %40)
  %43 = bitcast %6* %42 to i8*
  %44 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %43)
  %45 = bitcast i8* %44 to %6*
  %46 = ptrtoint %6* %45 to i64
  %47 = bitcast %TSo6XCTestC* %39 to i8*
  call void @llvm.objc.release(i8* %47)
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %entry
  %50 = inttoptr i64 %46 to %TSo9XCTestRunC*
  br label %58

51:                                               ; preds = %entry
  br label %52

52:                                               ; preds = %51
  br label %53

53:                                               ; preds = %52
  br label %54

54:                                               ; preds = %53
  br label %55

55:                                               ; preds = %54
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 236, i32 1)
  unreachable

58:                                               ; preds = %49
  %59 = phi %TSo9XCTestRunC* [ %50, %49 ]
  %60 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %61 = bitcast %TSo9XCTestRunC* %59 to %6*
  %62 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %61, i8* %60)
  %63 = call i8** @"$ss4Int8VABSZsWl"() #6
  %64 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %63, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = icmp slt i8 %62, 0
  br label %68

67:                                               ; preds = %58
  br label %68

68:                                               ; preds = %65, %67
  %69 = phi i1 [ false, %67 ], [ %66, %65 ]
  %70 = call i8** @"$sS2iSZsWl"() #6
  %71 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %70, %swift.type* swiftself @"$sSiN")
  br i1 %71, label %72, label %73

72:                                               ; preds = %68
  br label %74

73:                                               ; preds = %68
  br label %74

74:                                               ; preds = %72, %73
  %75 = phi i1 [ false, %73 ], [ false, %72 ]
  %76 = icmp eq i1 %69, %75
  %77 = xor i1 %76, true
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  br label %93

79:                                               ; preds = %74
  %80 = bitcast %Ts4Int8V* %0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %80)
  %._value = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %0, i32 0, i32 0
  store i8 %62, i8* %._value, align 1
  %81 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %82 = bitcast %Ts4Int8V* %0 to %swift.opaque*
  %83 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %81, %swift.opaque* noalias nocapture swiftself %82)
  %84 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %0)
  %85 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %85)
  %._value1 = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 0, i64* %._value1, align 8
  %86 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %87 = bitcast %TSi* %1 to %swift.opaque*
  %88 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %86, %swift.opaque* noalias nocapture swiftself %87)
  %89 = call %TSi* @"$sSiWOh"(%TSi* %1)
  %90 = icmp slt i64 %83, %88
  %91 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91)
  %92 = bitcast %Ts4Int8V* %0 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %92)
  br i1 %90, label %132, label %143

93:                                               ; preds = %78, %132, %155, %168, %179
  %94 = phi i1 [ %187, %179 ], [ %176, %168 ], [ %163, %155 ], [ %140, %132 ], [ false, %78 ]
  %95 = xor i1 %94, true
  %96 = bitcast %TSo9XCTestRunC* %59 to i8*
  call void @llvm.objc.release(i8* %96)
  %97 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %98 = extractvalue { i64, %swift.bridge* } %97, 0
  %99 = extractvalue { i64, %swift.bridge* } %97, 1
  %100 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %101 = extractvalue { i8*, %swift.refcounted* } %100, 0
  %102 = extractvalue { i8*, %swift.refcounted* } %100, 1
  %103 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %102) #3
  %104 = bitcast %swift.refcounted* %102 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %24)
  %105 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %95, i8* %101, %swift.opaque* %104, %swift.opaque* noalias nocapture %24, i1 %105, i64 %98, %swift.bridge* %99, i64 236)
  call void @swift_release(%swift.refcounted* %102) #3
  %106 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %107 = load i8*, i8** %106, align 8, !invariant.load !178
  %destroy = bitcast i8* %107 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %24, %swift.type* %18) #3
  call void @swift_release(%swift.refcounted* %102) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %99) #3
  %108 = load i8*, i8** @"\01L_selector(test_whenNotEqual_fails)", align 8
  %109 = call swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %108, %swift.type* swiftself %26)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %109)
  %110 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %109 to %TSo6XCTestC*
  %111 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %110)
  %112 = extractvalue { i8*, %swift.refcounted* } %111, 0
  %113 = extractvalue { i8*, %swift.refcounted* } %111, 1
  %114 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %113) #3
  %115 = bitcast %swift.refcounted* %113 to %swift.opaque*
  %116 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %116, i8* %112, %swift.opaque* %115)
  call void @swift_release(%swift.refcounted* %113) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %116) #3
  call void @swift_release(%swift.refcounted* %113) #3
  %117 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %109 to i8*
  %118 = call i8* @llvm.objc.retain(i8* %117)
  %119 = bitcast i8* %118 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %120 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %109 to %TSo6XCTestC*
  %121 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %122 = bitcast %TSo6XCTestC* %120 to %5*
  %123 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %122, i8* %121)
  %124 = bitcast %6* %123 to i8*
  %125 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %124)
  %126 = bitcast i8* %125 to %6*
  %127 = ptrtoint %6* %126 to i64
  %128 = bitcast %TSo6XCTestC* %120 to i8*
  call void @llvm.objc.release(i8* %128)
  %129 = icmp eq i64 %127, 0
  br i1 %129, label %190, label %130

130:                                              ; preds = %93
  %131 = inttoptr i64 %127 to %TSo9XCTestRunC*
  br label %197

132:                                              ; preds = %79
  %133 = bitcast %TSi* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %133)
  %134 = bitcast %Ts4Int8V* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %134)
  %._value14 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %16, i32 0, i32 0
  store i8 %62, i8* %._value14, align 1
  %135 = bitcast %TSi* %15 to %swift.opaque*
  %136 = bitcast %Ts4Int8V* %16 to %swift.opaque*
  %137 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %135, %swift.opaque* noalias nocapture %136, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %86, i8** %137, %swift.type* swiftself @"$sSiN")
  %138 = bitcast %Ts4Int8V* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %138)
  %._value15 = getelementptr inbounds %TSi, %TSi* %15, i32 0, i32 0
  %139 = load i64, i64* %._value15, align 8
  %140 = icmp eq i64 %139, 0
  %141 = call %TSi* @"$sSiWOh"(%TSi* %15)
  %142 = bitcast %TSi* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142)
  br label %93

143:                                              ; preds = %79
  %144 = bitcast %Ts4Int8V* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %144)
  %._value2 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %2, i32 0, i32 0
  store i8 %62, i8* %._value2, align 1
  %145 = bitcast %Ts4Int8V* %2 to %swift.opaque*
  %146 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %81, %swift.opaque* noalias nocapture swiftself %145)
  %147 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %2)
  %148 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %148)
  %._value3 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 0, i64* %._value3, align 8
  %149 = bitcast %TSi* %3 to %swift.opaque*
  %150 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %86, %swift.opaque* noalias nocapture swiftself %149)
  %151 = call %TSi* @"$sSiWOh"(%TSi* %3)
  %152 = icmp slt i64 %150, %146
  %153 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153)
  %154 = bitcast %Ts4Int8V* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %154)
  br i1 %152, label %155, label %166

155:                                              ; preds = %143
  %156 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %156)
  %157 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %157)
  %._value12 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value12, align 8
  %158 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %159 = bitcast %TSi* %14 to %swift.opaque*
  %160 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %158, %swift.opaque* noalias nocapture %159, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %81, i8** %160, %swift.type* swiftself @"$ss4Int8VN")
  %161 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161)
  %._value13 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  %162 = load i8, i8* %._value13, align 1
  %163 = icmp eq i8 %62, %162
  %164 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %165 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %165)
  br label %93

166:                                              ; preds = %143
  %167 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %63, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %167, label %168, label %179

168:                                              ; preds = %166
  %169 = bitcast %TSi* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %169)
  %170 = bitcast %Ts4Int8V* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %170)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %12, i32 0, i32 0
  store i8 %62, i8* %._value10, align 1
  %171 = bitcast %TSi* %11 to %swift.opaque*
  %172 = bitcast %Ts4Int8V* %12 to %swift.opaque*
  %173 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %171, %swift.opaque* noalias nocapture %172, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %86, i8** %173, %swift.type* swiftself @"$sSiN")
  %174 = bitcast %Ts4Int8V* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %174)
  %._value11 = getelementptr inbounds %TSi, %TSi* %11, i32 0, i32 0
  %175 = load i64, i64* %._value11, align 8
  %176 = icmp eq i64 %175, 0
  %177 = call %TSi* @"$sSiWOh"(%TSi* %11)
  %178 = bitcast %TSi* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178)
  br label %93

179:                                              ; preds = %166
  %180 = bitcast %Ts4Int8V* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %180)
  %181 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %181)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %182 = bitcast %Ts4Int8V* %4 to %swift.opaque*
  %183 = bitcast %TSi* %5 to %swift.opaque*
  %184 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %182, %swift.opaque* noalias nocapture %183, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %81, i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  %185 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185)
  %._value5 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %4, i32 0, i32 0
  %186 = load i8, i8* %._value5, align 1
  %187 = icmp eq i8 %62, %186
  %188 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %4)
  %189 = bitcast %Ts4Int8V* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %189)
  br label %93

190:                                              ; preds = %93
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 240, i32 1)
  unreachable

197:                                              ; preds = %130
  %198 = phi %TSo9XCTestRunC* [ %131, %130 ]
  store %TSo9XCTestRunC* %198, %TSo9XCTestRunC** %failingTestRun.debug, align 8
  %199 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %199)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 2, i64* %._value6, align 8
  %200 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %201 = bitcast %TSo9XCTestRunC* %198 to %6*
  %202 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %201, i8* %200)
  %203 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %203)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %202, i64* %._value7, align 8
  %204 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %205 = extractvalue { i64, %swift.bridge* } %204, 0
  %206 = extractvalue { i64, %swift.bridge* } %204, 1
  %207 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %208 = extractvalue { i8*, %swift.refcounted* } %207, 0
  %209 = extractvalue { i8*, %swift.refcounted* } %207, 1
  %210 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %209) #3
  %211 = bitcast %swift.refcounted* %209 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %24, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %212 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %213 = bitcast %TSi* %7 to %swift.opaque*
  %214 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %213, %swift.opaque* noalias nocapture %214, i8* %208, %swift.opaque* %211, %swift.opaque* noalias nocapture %24, i1 %212, i64 %205, %swift.bridge* %206, i64 241, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %209) #3
  call void %destroy(%swift.opaque* noalias %24, %swift.type* %18) #3
  call void @swift_release(%swift.refcounted* %209) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %206) #3
  %215 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %215)
  %216 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %216)
  %217 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %217)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %218 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %219 = bitcast %TSo9XCTestRunC* %198 to %6*
  %220 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %219, i8* %218)
  %221 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %221)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %220, i64* %._value9, align 8
  %222 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %223 = extractvalue { i64, %swift.bridge* } %222, 0
  %224 = extractvalue { i64, %swift.bridge* } %222, 1
  %225 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %226 = extractvalue { i8*, %swift.refcounted* } %225, 0
  %227 = extractvalue { i8*, %swift.refcounted* } %225, 1
  %228 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %227) #3
  %229 = bitcast %swift.refcounted* %227 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %24, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %230 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %231 = bitcast %TSi* %9 to %swift.opaque*
  %232 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %231, %swift.opaque* noalias nocapture %232, i8* %226, %swift.opaque* %229, %swift.opaque* noalias nocapture %24, i1 %230, i64 %223, %swift.bridge* %224, i64 242, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %227) #3
  call void %destroy(%swift.opaque* noalias %24, %swift.type* %18) #3
  call void @swift_release(%swift.refcounted* %227) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %224) #3
  %233 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233)
  %234 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234)
  %235 = bitcast %TSo9XCTestRunC* %198 to i8*
  call void @llvm.objc.release(i8* %235)
  %236 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %109 to i8*
  call void @llvm.objc.release(i8* %236)
  %237 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %28 to i8*
  call void @llvm.objc.release(i8* %237)
  %238 = bitcast %swift.opaque* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %238)
  ret void
}

define internal swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %4 to %12*
  %7 = call %12* bitcast (void ()* @objc_msgSend to %12* (%12*, i8*, i8*)*)(%12* %6, i8* %5, i8* %0)
  %8 = bitcast %12* %7 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  ret %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU5_"() #0 {
entry:
  %testRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %testRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %testRun.debug16 = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %testRun.debug16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %testRun.debug33 = alloca %TSo9XCTestRunC*, align 8
  %34 = bitcast %TSo9XCTestRunC** %testRun.debug33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 8, i1 false)
  %35 = alloca %TSi, align 8
  %36 = alloca %TSi, align 8
  %37 = alloca %TSi, align 8
  %38 = alloca %TSi, align 8
  %39 = alloca %TSi, align 8
  %40 = alloca %TSi, align 8
  %41 = alloca %TSi, align 8
  %42 = alloca %TSi, align 8
  %43 = alloca %TSi, align 8
  %44 = alloca %TSi, align 8
  %45 = alloca %Ts4Int8V, align 1
  %46 = alloca %TSi, align 8
  %47 = alloca %Ts4Int8V, align 1
  %48 = alloca %TSi, align 8
  %49 = alloca %Ts4Int8V, align 1
  %50 = alloca %TSi, align 8
  %51 = alloca %TSi, align 8
  %52 = alloca %Ts4Int8V, align 1
  %53 = alloca %Ts4Int8V, align 1
  %54 = alloca %TSi, align 8
  %55 = alloca %TSi, align 8
  %56 = alloca %Ts4Int8V, align 1
  %57 = alloca %TSi, align 8
  %58 = alloca %Ts4Int8V, align 1
  %59 = alloca %Ts4Int8V, align 1
  %60 = alloca %TSi, align 8
  %61 = alloca %TSi, align 8
  %62 = alloca %Ts4Int8V, align 1
  %63 = alloca %TSi, align 8
  %64 = alloca %Ts4Int8V, align 1
  %65 = alloca %Ts4Int8V, align 1
  %66 = alloca %TSi, align 8
  %67 = alloca %TSi, align 8
  %68 = alloca %Ts4Int8V, align 1
  %69 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %70 = extractvalue %swift.metadata_response %69, 0
  %71 = bitcast %swift.type* %70 to i8***
  %72 = getelementptr inbounds i8**, i8*** %71, i64 -1
  %.valueWitnesses = load i8**, i8*** %72, align 8, !invariant.load !178, !dereferenceable !179
  %73 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %74 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %73, i32 0, i32 8
  %size = load i64, i64* %74, align 8, !invariant.load !178
  %75 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %75)
  %76 = bitcast i8* %75 to %swift.opaque*
  %77 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa"(i64 0) #6
  %78 = extractvalue %swift.metadata_response %77, 0
  %79 = load i8*, i8** @"\01L_selector(test_throws)", align 8
  %80 = call swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %79, %swift.type* swiftself %78)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* %80)
  %81 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %80 to %TSo6XCTestC*
  %82 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %81)
  %83 = extractvalue { i8*, %swift.refcounted* } %82, 0
  %84 = extractvalue { i8*, %swift.refcounted* } %82, 1
  %85 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %84) #3
  %86 = bitcast %swift.refcounted* %84 to %swift.opaque*
  %87 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %87, i8* %83, %swift.opaque* %86)
  call void @swift_release(%swift.refcounted* %84) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %87) #3
  call void @swift_release(%swift.refcounted* %84) #3
  %88 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %80 to i8*
  %89 = call i8* @llvm.objc.retain(i8* %88)
  %90 = bitcast i8* %89 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %91 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %80 to %TSo6XCTestC*
  %92 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %93 = bitcast %TSo6XCTestC* %91 to %5*
  %94 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %93, i8* %92)
  %95 = bitcast %6* %94 to i8*
  %96 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %95)
  %97 = bitcast i8* %96 to %6*
  %98 = ptrtoint %6* %97 to i64
  %99 = bitcast %TSo6XCTestC* %91 to i8*
  call void @llvm.objc.release(i8* %99)
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %entry
  %102 = inttoptr i64 %98 to %TSo9XCTestRunC*
  br label %110

103:                                              ; preds = %entry
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 270, i32 1)
  unreachable

110:                                              ; preds = %101
  %111 = phi %TSo9XCTestRunC* [ %102, %101 ]
  store %TSo9XCTestRunC* %111, %TSo9XCTestRunC** %testRun.debug, align 8
  %112 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %112)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %113 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %114 = bitcast %TSo9XCTestRunC* %111 to %6*
  %115 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %114, i8* %113)
  %116 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %116)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %115, i64* %._value1, align 8
  %117 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %118 = extractvalue { i64, %swift.bridge* } %117, 0
  %119 = extractvalue { i64, %swift.bridge* } %117, 1
  %120 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %121 = extractvalue { i8*, %swift.refcounted* } %120, 0
  %122 = extractvalue { i8*, %swift.refcounted* } %120, 1
  %123 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %122) #3
  %124 = bitcast %swift.refcounted* %122 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %125 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %126 = bitcast %TSi* %1 to %swift.opaque*
  %127 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %126, %swift.opaque* noalias nocapture %127, i8* %121, %swift.opaque* %124, %swift.opaque* noalias nocapture %76, i1 %125, i64 %118, %swift.bridge* %119, i64 272, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %122) #3
  %128 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %129 = load i8*, i8** %128, align 8, !invariant.load !178
  %destroy = bitcast i8* %129 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %122) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %119) #3
  %130 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130)
  %131 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131)
  %132 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %132)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %133 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %134 = bitcast %TSo9XCTestRunC* %111 to %6*
  %135 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %134, i8* %133)
  %136 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %136)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %135, i64* %._value3, align 8
  %137 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %138 = extractvalue { i64, %swift.bridge* } %137, 0
  %139 = extractvalue { i64, %swift.bridge* } %137, 1
  %140 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %141 = extractvalue { i8*, %swift.refcounted* } %140, 0
  %142 = extractvalue { i8*, %swift.refcounted* } %140, 1
  %143 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %142) #3
  %144 = bitcast %swift.refcounted* %142 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %145 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %146 = bitcast %TSi* %3 to %swift.opaque*
  %147 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %146, %swift.opaque* noalias nocapture %147, i8* %141, %swift.opaque* %144, %swift.opaque* noalias nocapture %76, i1 %145, i64 %138, %swift.bridge* %139, i64 273, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %142) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %142) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %139) #3
  %148 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148)
  %149 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149)
  %150 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %150)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %151 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %152 = bitcast %TSo9XCTestRunC* %111 to %6*
  %153 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %152, i8* %151)
  %154 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %154)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %153, i64* %._value5, align 8
  %155 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %156 = extractvalue { i64, %swift.bridge* } %155, 0
  %157 = extractvalue { i64, %swift.bridge* } %155, 1
  %158 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %159 = extractvalue { i8*, %swift.refcounted* } %158, 0
  %160 = extractvalue { i8*, %swift.refcounted* } %158, 1
  %161 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %160) #3
  %162 = bitcast %swift.refcounted* %160 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %163 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %164 = bitcast %TSi* %5 to %swift.opaque*
  %165 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %164, %swift.opaque* noalias nocapture %165, i8* %159, %swift.opaque* %162, %swift.opaque* noalias nocapture %76, i1 %163, i64 %156, %swift.bridge* %157, i64 274, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %160) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %160) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %157) #3
  %166 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166)
  %167 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167)
  %168 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %168)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %169 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %170 = bitcast %TSo9XCTestRunC* %111 to %6*
  %171 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %170, i8* %169)
  %172 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %171, i64* %._value7, align 8
  %173 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %174 = extractvalue { i64, %swift.bridge* } %173, 0
  %175 = extractvalue { i64, %swift.bridge* } %173, 1
  %176 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %177 = extractvalue { i8*, %swift.refcounted* } %176, 0
  %178 = extractvalue { i8*, %swift.refcounted* } %176, 1
  %179 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %178) #3
  %180 = bitcast %swift.refcounted* %178 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %181 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %182 = bitcast %TSi* %7 to %swift.opaque*
  %183 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %182, %swift.opaque* noalias nocapture %183, i8* %177, %swift.opaque* %180, %swift.opaque* noalias nocapture %76, i1 %181, i64 %174, %swift.bridge* %175, i64 275, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %178) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %178) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %175) #3
  %184 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184)
  %185 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185)
  %186 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %186)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %187 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %188 = bitcast %TSo9XCTestRunC* %111 to %6*
  %189 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %188, i8* %187)
  %190 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %190)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %189, i64* %._value9, align 8
  %191 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %192 = extractvalue { i64, %swift.bridge* } %191, 0
  %193 = extractvalue { i64, %swift.bridge* } %191, 1
  %194 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %195 = extractvalue { i8*, %swift.refcounted* } %194, 0
  %196 = extractvalue { i8*, %swift.refcounted* } %194, 1
  %197 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %196) #3
  %198 = bitcast %swift.refcounted* %196 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %199 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %200 = bitcast %TSi* %9 to %swift.opaque*
  %201 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %200, %swift.opaque* noalias nocapture %201, i8* %195, %swift.opaque* %198, %swift.opaque* noalias nocapture %76, i1 %199, i64 %192, %swift.bridge* %193, i64 276, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %196) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %196) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %193) #3
  %202 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202)
  %203 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203)
  %204 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %205 = bitcast %TSo9XCTestRunC* %111 to %6*
  %206 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %205, i8* %204)
  %207 = call i8** @"$ss4Int8VABSZsWl"() #6
  %208 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %208, label %209, label %211

209:                                              ; preds = %110
  %210 = icmp slt i8 %206, 0
  br label %212

211:                                              ; preds = %110
  br label %212

212:                                              ; preds = %209, %211
  %213 = phi i1 [ false, %211 ], [ %210, %209 ]
  %214 = call i8** @"$sS2iSZsWl"() #6
  %215 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %214, %swift.type* swiftself @"$sSiN")
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  br label %218

217:                                              ; preds = %212
  br label %218

218:                                              ; preds = %216, %217
  %219 = phi i1 [ false, %217 ], [ false, %216 ]
  %220 = icmp eq i1 %213, %219
  %221 = xor i1 %220, true
  br i1 %221, label %222, label %223

222:                                              ; preds = %218
  br label %237

223:                                              ; preds = %218
  %224 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %224)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %206, i8* %._value10, align 1
  %225 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %226 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %227 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %225, %swift.opaque* noalias nocapture swiftself %226)
  %228 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %229 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %230 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %231 = bitcast %TSi* %12 to %swift.opaque*
  %232 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %230, %swift.opaque* noalias nocapture swiftself %231)
  %233 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %234 = icmp slt i64 %227, %232
  %235 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235)
  %236 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %236)
  br i1 %234, label %275, label %286

237:                                              ; preds = %222, %275, %298, %311, %322
  %238 = phi i1 [ %330, %322 ], [ %319, %311 ], [ %306, %298 ], [ %283, %275 ], [ false, %222 ]
  %239 = xor i1 %238, true
  %240 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %241 = extractvalue { i64, %swift.bridge* } %240, 0
  %242 = extractvalue { i64, %swift.bridge* } %240, 1
  %243 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %244 = extractvalue { i8*, %swift.refcounted* } %243, 0
  %245 = extractvalue { i8*, %swift.refcounted* } %243, 1
  %246 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %245) #3
  %247 = bitcast %swift.refcounted* %245 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %76)
  %248 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %239, i8* %244, %swift.opaque* %247, %swift.opaque* noalias nocapture %76, i1 %248, i64 %241, %swift.bridge* %242, i64 277)
  call void @swift_release(%swift.refcounted* %245) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %245) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %242) #3
  %249 = bitcast %TSo9XCTestRunC* %111 to i8*
  call void @llvm.objc.release(i8* %249)
  %250 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %80 to i8*
  call void @llvm.objc.release(i8* %250)
  %251 = load i8*, i8** @"\01L_selector(test_throws)", align 8
  %252 = call swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %251, %swift.type* swiftself %78)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* %252)
  call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvs"(i1 false, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %252)
  %253 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %252 to %TSo6XCTestC*
  %254 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %253)
  %255 = extractvalue { i8*, %swift.refcounted* } %254, 0
  %256 = extractvalue { i8*, %swift.refcounted* } %254, 1
  %257 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %256) #3
  %258 = bitcast %swift.refcounted* %256 to %swift.opaque*
  %259 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %259, i8* %255, %swift.opaque* %258)
  call void @swift_release(%swift.refcounted* %256) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %259) #3
  call void @swift_release(%swift.refcounted* %256) #3
  %260 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %252 to i8*
  %261 = call i8* @llvm.objc.retain(i8* %260)
  %262 = bitcast i8* %261 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %263 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %252 to %TSo6XCTestC*
  %264 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %265 = bitcast %TSo6XCTestC* %263 to %5*
  %266 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %265, i8* %264)
  %267 = bitcast %6* %266 to i8*
  %268 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %267)
  %269 = bitcast i8* %268 to %6*
  %270 = ptrtoint %6* %269 to i64
  %271 = bitcast %TSo6XCTestC* %263 to i8*
  call void @llvm.objc.release(i8* %271)
  %272 = icmp eq i64 %270, 0
  br i1 %272, label %333, label %273

273:                                              ; preds = %237
  %274 = inttoptr i64 %270 to %TSo9XCTestRunC*
  br label %340

275:                                              ; preds = %223
  %276 = bitcast %TSi* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %276)
  %277 = bitcast %Ts4Int8V* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %277)
  %._value66 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %68, i32 0, i32 0
  store i8 %206, i8* %._value66, align 1
  %278 = bitcast %TSi* %67 to %swift.opaque*
  %279 = bitcast %Ts4Int8V* %68 to %swift.opaque*
  %280 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %278, %swift.opaque* noalias nocapture %279, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %230, i8** %280, %swift.type* swiftself @"$sSiN")
  %281 = bitcast %Ts4Int8V* %68 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %281)
  %._value67 = getelementptr inbounds %TSi, %TSi* %67, i32 0, i32 0
  %282 = load i64, i64* %._value67, align 8
  %283 = icmp eq i64 %282, 0
  %284 = call %TSi* @"$sSiWOh"(%TSi* %67)
  %285 = bitcast %TSi* %67 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285)
  br label %237

286:                                              ; preds = %223
  %287 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %287)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %206, i8* %._value12, align 1
  %288 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %289 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %225, %swift.opaque* noalias nocapture swiftself %288)
  %290 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %291 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %291)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %292 = bitcast %TSi* %14 to %swift.opaque*
  %293 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %230, %swift.opaque* noalias nocapture swiftself %292)
  %294 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %295 = icmp slt i64 %293, %289
  %296 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296)
  %297 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %297)
  br i1 %295, label %298, label %309

298:                                              ; preds = %286
  %299 = bitcast %Ts4Int8V* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %299)
  %300 = bitcast %TSi* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %300)
  %._value64 = getelementptr inbounds %TSi, %TSi* %66, i32 0, i32 0
  store i64 0, i64* %._value64, align 8
  %301 = bitcast %Ts4Int8V* %65 to %swift.opaque*
  %302 = bitcast %TSi* %66 to %swift.opaque*
  %303 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %301, %swift.opaque* noalias nocapture %302, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %225, i8** %303, %swift.type* swiftself @"$ss4Int8VN")
  %304 = bitcast %TSi* %66 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304)
  %._value65 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %65, i32 0, i32 0
  %305 = load i8, i8* %._value65, align 1
  %306 = icmp eq i8 %206, %305
  %307 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %65)
  %308 = bitcast %Ts4Int8V* %65 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %308)
  br label %237

309:                                              ; preds = %286
  %310 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %310, label %311, label %322

311:                                              ; preds = %309
  %312 = bitcast %TSi* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %312)
  %313 = bitcast %Ts4Int8V* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %313)
  %._value62 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %64, i32 0, i32 0
  store i8 %206, i8* %._value62, align 1
  %314 = bitcast %TSi* %63 to %swift.opaque*
  %315 = bitcast %Ts4Int8V* %64 to %swift.opaque*
  %316 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %314, %swift.opaque* noalias nocapture %315, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %230, i8** %316, %swift.type* swiftself @"$sSiN")
  %317 = bitcast %Ts4Int8V* %64 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %317)
  %._value63 = getelementptr inbounds %TSi, %TSi* %63, i32 0, i32 0
  %318 = load i64, i64* %._value63, align 8
  %319 = icmp eq i64 %318, 0
  %320 = call %TSi* @"$sSiWOh"(%TSi* %63)
  %321 = bitcast %TSi* %63 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %321)
  br label %237

322:                                              ; preds = %309
  %323 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %323)
  %324 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %324)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %325 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %326 = bitcast %TSi* %16 to %swift.opaque*
  %327 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %325, %swift.opaque* noalias nocapture %326, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %225, i8** %327, %swift.type* swiftself @"$ss4Int8VN")
  %328 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %328)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %329 = load i8, i8* %._value15, align 1
  %330 = icmp eq i8 %206, %329
  %331 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %332 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %332)
  br label %237

333:                                              ; preds = %237
  br label %334

334:                                              ; preds = %333
  br label %335

335:                                              ; preds = %334
  br label %336

336:                                              ; preds = %335
  br label %337

337:                                              ; preds = %336
  br label %338

338:                                              ; preds = %337
  br label %339

339:                                              ; preds = %338
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 285, i32 1)
  unreachable

340:                                              ; preds = %273
  %341 = phi %TSo9XCTestRunC* [ %274, %273 ]
  store %TSo9XCTestRunC* %341, %TSo9XCTestRunC** %testRun.debug16, align 8
  %342 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %342)
  %._value17 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value17, align 8
  %343 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %344 = bitcast %TSo9XCTestRunC* %341 to %6*
  %345 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %344, i8* %343)
  %346 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %346)
  %._value18 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %345, i64* %._value18, align 8
  %347 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %348 = extractvalue { i64, %swift.bridge* } %347, 0
  %349 = extractvalue { i64, %swift.bridge* } %347, 1
  %350 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %351 = extractvalue { i8*, %swift.refcounted* } %350, 0
  %352 = extractvalue { i8*, %swift.refcounted* } %350, 1
  %353 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %352) #3
  %354 = bitcast %swift.refcounted* %352 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %355 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %356 = bitcast %TSi* %18 to %swift.opaque*
  %357 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %356, %swift.opaque* noalias nocapture %357, i8* %351, %swift.opaque* %354, %swift.opaque* noalias nocapture %76, i1 %355, i64 %348, %swift.bridge* %349, i64 287, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %352) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %352) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %349) #3
  %358 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %358)
  %359 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %359)
  %360 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %360)
  %._value19 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value19, align 8
  %361 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %362 = bitcast %TSo9XCTestRunC* %341 to %6*
  %363 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %362, i8* %361)
  %364 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %364)
  %._value20 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %363, i64* %._value20, align 8
  %365 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %366 = extractvalue { i64, %swift.bridge* } %365, 0
  %367 = extractvalue { i64, %swift.bridge* } %365, 1
  %368 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %369 = extractvalue { i8*, %swift.refcounted* } %368, 0
  %370 = extractvalue { i8*, %swift.refcounted* } %368, 1
  %371 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %370) #3
  %372 = bitcast %swift.refcounted* %370 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %373 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %374 = bitcast %TSi* %20 to %swift.opaque*
  %375 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %374, %swift.opaque* noalias nocapture %375, i8* %369, %swift.opaque* %372, %swift.opaque* noalias nocapture %76, i1 %373, i64 %366, %swift.bridge* %367, i64 288, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %370) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %370) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %367) #3
  %376 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376)
  %377 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377)
  %378 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %378)
  %._value21 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 1, i64* %._value21, align 8
  %379 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %380 = bitcast %TSo9XCTestRunC* %341 to %6*
  %381 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %380, i8* %379)
  %382 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %382)
  %._value22 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %381, i64* %._value22, align 8
  %383 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %384 = extractvalue { i64, %swift.bridge* } %383, 0
  %385 = extractvalue { i64, %swift.bridge* } %383, 1
  %386 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %387 = extractvalue { i8*, %swift.refcounted* } %386, 0
  %388 = extractvalue { i8*, %swift.refcounted* } %386, 1
  %389 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %388) #3
  %390 = bitcast %swift.refcounted* %388 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %391 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %392 = bitcast %TSi* %22 to %swift.opaque*
  %393 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %392, %swift.opaque* noalias nocapture %393, i8* %387, %swift.opaque* %390, %swift.opaque* noalias nocapture %76, i1 %391, i64 %384, %swift.bridge* %385, i64 289, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %388) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %388) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %385) #3
  %394 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394)
  %395 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %395)
  %396 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %396)
  %._value23 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 0, i64* %._value23, align 8
  %397 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %398 = bitcast %TSo9XCTestRunC* %341 to %6*
  %399 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %398, i8* %397)
  %400 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %400)
  %._value24 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %399, i64* %._value24, align 8
  %401 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %402 = extractvalue { i64, %swift.bridge* } %401, 0
  %403 = extractvalue { i64, %swift.bridge* } %401, 1
  %404 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %405 = extractvalue { i8*, %swift.refcounted* } %404, 0
  %406 = extractvalue { i8*, %swift.refcounted* } %404, 1
  %407 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %406) #3
  %408 = bitcast %swift.refcounted* %406 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %409 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %410 = bitcast %TSi* %24 to %swift.opaque*
  %411 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %410, %swift.opaque* noalias nocapture %411, i8* %405, %swift.opaque* %408, %swift.opaque* noalias nocapture %76, i1 %409, i64 %402, %swift.bridge* %403, i64 290, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %406) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %406) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %403) #3
  %412 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412)
  %413 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %413)
  %414 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %414)
  %._value25 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value25, align 8
  %415 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %416 = bitcast %TSo9XCTestRunC* %341 to %6*
  %417 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %416, i8* %415)
  %418 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %418)
  %._value26 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %417, i64* %._value26, align 8
  %419 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %420 = extractvalue { i64, %swift.bridge* } %419, 0
  %421 = extractvalue { i64, %swift.bridge* } %419, 1
  %422 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %423 = extractvalue { i8*, %swift.refcounted* } %422, 0
  %424 = extractvalue { i8*, %swift.refcounted* } %422, 1
  %425 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %424) #3
  %426 = bitcast %swift.refcounted* %424 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %427 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %428 = bitcast %TSi* %26 to %swift.opaque*
  %429 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %428, %swift.opaque* noalias nocapture %429, i8* %423, %swift.opaque* %426, %swift.opaque* noalias nocapture %76, i1 %427, i64 %420, %swift.bridge* %421, i64 291, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %424) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %424) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %421) #3
  %430 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %430)
  %431 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %431)
  %432 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %433 = bitcast %TSo9XCTestRunC* %341 to %6*
  %434 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %433, i8* %432)
  %435 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %435, label %436, label %438

436:                                              ; preds = %340
  %437 = icmp slt i8 %434, 0
  br label %439

438:                                              ; preds = %340
  br label %439

439:                                              ; preds = %436, %438
  %440 = phi i1 [ false, %438 ], [ %437, %436 ]
  %441 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %214, %swift.type* swiftself @"$sSiN")
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  br label %444

443:                                              ; preds = %439
  br label %444

444:                                              ; preds = %442, %443
  %445 = phi i1 [ false, %443 ], [ false, %442 ]
  %446 = icmp eq i1 %440, %445
  %447 = xor i1 %446, true
  br i1 %447, label %448, label %449

448:                                              ; preds = %444
  br label %463

449:                                              ; preds = %444
  %450 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %450)
  %._value27 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %434, i8* %._value27, align 1
  %451 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %452 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %453 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %451, %swift.opaque* noalias nocapture swiftself %452)
  %454 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %455 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %455)
  %._value28 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value28, align 8
  %456 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %457 = bitcast %TSi* %29 to %swift.opaque*
  %458 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %456, %swift.opaque* noalias nocapture swiftself %457)
  %459 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %460 = icmp slt i64 %453, %458
  %461 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %461)
  %462 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %462)
  br i1 %460, label %501, label %512

463:                                              ; preds = %448, %501, %524, %537, %548
  %464 = phi i1 [ %556, %548 ], [ %545, %537 ], [ %532, %524 ], [ %509, %501 ], [ false, %448 ]
  %465 = xor i1 %464, true
  %466 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %467 = extractvalue { i64, %swift.bridge* } %466, 0
  %468 = extractvalue { i64, %swift.bridge* } %466, 1
  %469 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %470 = extractvalue { i8*, %swift.refcounted* } %469, 0
  %471 = extractvalue { i8*, %swift.refcounted* } %469, 1
  %472 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %471) #3
  %473 = bitcast %swift.refcounted* %471 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %76)
  %474 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %465, i8* %470, %swift.opaque* %473, %swift.opaque* noalias nocapture %76, i1 %474, i64 %467, %swift.bridge* %468, i64 292)
  call void @swift_release(%swift.refcounted* %471) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %471) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %468) #3
  %475 = bitcast %TSo9XCTestRunC* %341 to i8*
  call void @llvm.objc.release(i8* %475)
  %476 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %252 to i8*
  call void @llvm.objc.release(i8* %476)
  %477 = load i8*, i8** @"\01L_selector(test_throws)", align 8
  %478 = call swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %477, %swift.type* swiftself %78)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* %478)
  call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivs"(i64 23, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %478)
  %479 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %478 to %TSo6XCTestC*
  %480 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %479)
  %481 = extractvalue { i8*, %swift.refcounted* } %480, 0
  %482 = extractvalue { i8*, %swift.refcounted* } %480, 1
  %483 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %482) #3
  %484 = bitcast %swift.refcounted* %482 to %swift.opaque*
  %485 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %485, i8* %481, %swift.opaque* %484)
  call void @swift_release(%swift.refcounted* %482) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %485) #3
  call void @swift_release(%swift.refcounted* %482) #3
  %486 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %478 to i8*
  %487 = call i8* @llvm.objc.retain(i8* %486)
  %488 = bitcast i8* %487 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %489 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %478 to %TSo6XCTestC*
  %490 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %491 = bitcast %TSo6XCTestC* %489 to %5*
  %492 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %491, i8* %490)
  %493 = bitcast %6* %492 to i8*
  %494 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %493)
  %495 = bitcast i8* %494 to %6*
  %496 = ptrtoint %6* %495 to i64
  %497 = bitcast %TSo6XCTestC* %489 to i8*
  call void @llvm.objc.release(i8* %497)
  %498 = icmp eq i64 %496, 0
  br i1 %498, label %559, label %499

499:                                              ; preds = %463
  %500 = inttoptr i64 %496 to %TSo9XCTestRunC*
  br label %566

501:                                              ; preds = %449
  %502 = bitcast %TSi* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %502)
  %503 = bitcast %Ts4Int8V* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %503)
  %._value60 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %62, i32 0, i32 0
  store i8 %434, i8* %._value60, align 1
  %504 = bitcast %TSi* %61 to %swift.opaque*
  %505 = bitcast %Ts4Int8V* %62 to %swift.opaque*
  %506 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %504, %swift.opaque* noalias nocapture %505, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %456, i8** %506, %swift.type* swiftself @"$sSiN")
  %507 = bitcast %Ts4Int8V* %62 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %507)
  %._value61 = getelementptr inbounds %TSi, %TSi* %61, i32 0, i32 0
  %508 = load i64, i64* %._value61, align 8
  %509 = icmp eq i64 %508, 0
  %510 = call %TSi* @"$sSiWOh"(%TSi* %61)
  %511 = bitcast %TSi* %61 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %511)
  br label %463

512:                                              ; preds = %449
  %513 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %513)
  %._value29 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %434, i8* %._value29, align 1
  %514 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %515 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %451, %swift.opaque* noalias nocapture swiftself %514)
  %516 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %517 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %517)
  %._value30 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %518 = bitcast %TSi* %31 to %swift.opaque*
  %519 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %456, %swift.opaque* noalias nocapture swiftself %518)
  %520 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %521 = icmp slt i64 %519, %515
  %522 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %522)
  %523 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %523)
  br i1 %521, label %524, label %535

524:                                              ; preds = %512
  %525 = bitcast %Ts4Int8V* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %525)
  %526 = bitcast %TSi* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %526)
  %._value58 = getelementptr inbounds %TSi, %TSi* %60, i32 0, i32 0
  store i64 0, i64* %._value58, align 8
  %527 = bitcast %Ts4Int8V* %59 to %swift.opaque*
  %528 = bitcast %TSi* %60 to %swift.opaque*
  %529 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %527, %swift.opaque* noalias nocapture %528, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %451, i8** %529, %swift.type* swiftself @"$ss4Int8VN")
  %530 = bitcast %TSi* %60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %530)
  %._value59 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %59, i32 0, i32 0
  %531 = load i8, i8* %._value59, align 1
  %532 = icmp eq i8 %434, %531
  %533 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %59)
  %534 = bitcast %Ts4Int8V* %59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %534)
  br label %463

535:                                              ; preds = %512
  %536 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %536, label %537, label %548

537:                                              ; preds = %535
  %538 = bitcast %TSi* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %538)
  %539 = bitcast %Ts4Int8V* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %539)
  %._value56 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %58, i32 0, i32 0
  store i8 %434, i8* %._value56, align 1
  %540 = bitcast %TSi* %57 to %swift.opaque*
  %541 = bitcast %Ts4Int8V* %58 to %swift.opaque*
  %542 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %540, %swift.opaque* noalias nocapture %541, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %456, i8** %542, %swift.type* swiftself @"$sSiN")
  %543 = bitcast %Ts4Int8V* %58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %543)
  %._value57 = getelementptr inbounds %TSi, %TSi* %57, i32 0, i32 0
  %544 = load i64, i64* %._value57, align 8
  %545 = icmp eq i64 %544, 0
  %546 = call %TSi* @"$sSiWOh"(%TSi* %57)
  %547 = bitcast %TSi* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %547)
  br label %463

548:                                              ; preds = %535
  %549 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %549)
  %550 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %550)
  %._value31 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value31, align 8
  %551 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %552 = bitcast %TSi* %33 to %swift.opaque*
  %553 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %551, %swift.opaque* noalias nocapture %552, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %451, i8** %553, %swift.type* swiftself @"$ss4Int8VN")
  %554 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %554)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %555 = load i8, i8* %._value32, align 1
  %556 = icmp eq i8 %434, %555
  %557 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %558 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %558)
  br label %463

559:                                              ; preds = %463
  br label %560

560:                                              ; preds = %559
  br label %561

561:                                              ; preds = %560
  br label %562

562:                                              ; preds = %561
  br label %563

563:                                              ; preds = %562
  br label %564

564:                                              ; preds = %563
  br label %565

565:                                              ; preds = %564
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 301, i32 1)
  unreachable

566:                                              ; preds = %499
  %567 = phi %TSo9XCTestRunC* [ %500, %499 ]
  store %TSo9XCTestRunC* %567, %TSo9XCTestRunC** %testRun.debug33, align 8
  %568 = bitcast %TSi* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %568)
  %._value34 = getelementptr inbounds %TSi, %TSi* %35, i32 0, i32 0
  store i64 1, i64* %._value34, align 8
  %569 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %570 = bitcast %TSo9XCTestRunC* %567 to %6*
  %571 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %570, i8* %569)
  %572 = bitcast %TSi* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %572)
  %._value35 = getelementptr inbounds %TSi, %TSi* %36, i32 0, i32 0
  store i64 %571, i64* %._value35, align 8
  %573 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %574 = extractvalue { i64, %swift.bridge* } %573, 0
  %575 = extractvalue { i64, %swift.bridge* } %573, 1
  %576 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %577 = extractvalue { i8*, %swift.refcounted* } %576, 0
  %578 = extractvalue { i8*, %swift.refcounted* } %576, 1
  %579 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %578) #3
  %580 = bitcast %swift.refcounted* %578 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %581 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %582 = bitcast %TSi* %35 to %swift.opaque*
  %583 = bitcast %TSi* %36 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %582, %swift.opaque* noalias nocapture %583, i8* %577, %swift.opaque* %580, %swift.opaque* noalias nocapture %76, i1 %581, i64 %574, %swift.bridge* %575, i64 303, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %578) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %578) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %575) #3
  %584 = bitcast %TSi* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %584)
  %585 = bitcast %TSi* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %585)
  %586 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %586)
  %._value36 = getelementptr inbounds %TSi, %TSi* %37, i32 0, i32 0
  store i64 1, i64* %._value36, align 8
  %587 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %588 = bitcast %TSo9XCTestRunC* %567 to %6*
  %589 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %588, i8* %587)
  %590 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %590)
  %._value37 = getelementptr inbounds %TSi, %TSi* %38, i32 0, i32 0
  store i64 %589, i64* %._value37, align 8
  %591 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %592 = extractvalue { i64, %swift.bridge* } %591, 0
  %593 = extractvalue { i64, %swift.bridge* } %591, 1
  %594 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %595 = extractvalue { i8*, %swift.refcounted* } %594, 0
  %596 = extractvalue { i8*, %swift.refcounted* } %594, 1
  %597 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %596) #3
  %598 = bitcast %swift.refcounted* %596 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %599 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %600 = bitcast %TSi* %37 to %swift.opaque*
  %601 = bitcast %TSi* %38 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %600, %swift.opaque* noalias nocapture %601, i8* %595, %swift.opaque* %598, %swift.opaque* noalias nocapture %76, i1 %599, i64 %592, %swift.bridge* %593, i64 304, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %596) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %596) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %593) #3
  %602 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %602)
  %603 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %603)
  %604 = bitcast %TSi* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %604)
  %._value38 = getelementptr inbounds %TSi, %TSi* %39, i32 0, i32 0
  store i64 1, i64* %._value38, align 8
  %605 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %606 = bitcast %TSo9XCTestRunC* %567 to %6*
  %607 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %606, i8* %605)
  %608 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %608)
  %._value39 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  store i64 %607, i64* %._value39, align 8
  %609 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %610 = extractvalue { i64, %swift.bridge* } %609, 0
  %611 = extractvalue { i64, %swift.bridge* } %609, 1
  %612 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %613 = extractvalue { i8*, %swift.refcounted* } %612, 0
  %614 = extractvalue { i8*, %swift.refcounted* } %612, 1
  %615 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %614) #3
  %616 = bitcast %swift.refcounted* %614 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %617 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %618 = bitcast %TSi* %39 to %swift.opaque*
  %619 = bitcast %TSi* %40 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %618, %swift.opaque* noalias nocapture %619, i8* %613, %swift.opaque* %616, %swift.opaque* noalias nocapture %76, i1 %617, i64 %610, %swift.bridge* %611, i64 305, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %614) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %614) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %611) #3
  %620 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %620)
  %621 = bitcast %TSi* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %621)
  %622 = bitcast %TSi* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %622)
  %._value40 = getelementptr inbounds %TSi, %TSi* %41, i32 0, i32 0
  store i64 0, i64* %._value40, align 8
  %623 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %624 = bitcast %TSo9XCTestRunC* %567 to %6*
  %625 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %624, i8* %623)
  %626 = bitcast %TSi* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %626)
  %._value41 = getelementptr inbounds %TSi, %TSi* %42, i32 0, i32 0
  store i64 %625, i64* %._value41, align 8
  %627 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %628 = extractvalue { i64, %swift.bridge* } %627, 0
  %629 = extractvalue { i64, %swift.bridge* } %627, 1
  %630 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %631 = extractvalue { i8*, %swift.refcounted* } %630, 0
  %632 = extractvalue { i8*, %swift.refcounted* } %630, 1
  %633 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %632) #3
  %634 = bitcast %swift.refcounted* %632 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %635 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %636 = bitcast %TSi* %41 to %swift.opaque*
  %637 = bitcast %TSi* %42 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %636, %swift.opaque* noalias nocapture %637, i8* %631, %swift.opaque* %634, %swift.opaque* noalias nocapture %76, i1 %635, i64 %628, %swift.bridge* %629, i64 306, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %632) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %632) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %629) #3
  %638 = bitcast %TSi* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %638)
  %639 = bitcast %TSi* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %639)
  %640 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %640)
  %._value42 = getelementptr inbounds %TSi, %TSi* %43, i32 0, i32 0
  store i64 1, i64* %._value42, align 8
  %641 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %642 = bitcast %TSo9XCTestRunC* %567 to %6*
  %643 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %642, i8* %641)
  %644 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %644)
  %._value43 = getelementptr inbounds %TSi, %TSi* %44, i32 0, i32 0
  store i64 %643, i64* %._value43, align 8
  %645 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %646 = extractvalue { i64, %swift.bridge* } %645, 0
  %647 = extractvalue { i64, %swift.bridge* } %645, 1
  %648 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %649 = extractvalue { i8*, %swift.refcounted* } %648, 0
  %650 = extractvalue { i8*, %swift.refcounted* } %648, 1
  %651 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %650) #3
  %652 = bitcast %swift.refcounted* %650 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %653 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %654 = bitcast %TSi* %43 to %swift.opaque*
  %655 = bitcast %TSi* %44 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %654, %swift.opaque* noalias nocapture %655, i8* %649, %swift.opaque* %652, %swift.opaque* noalias nocapture %76, i1 %653, i64 %646, %swift.bridge* %647, i64 307, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %650) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %650) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %647) #3
  %656 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %656)
  %657 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %657)
  %658 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %659 = bitcast %TSo9XCTestRunC* %567 to %6*
  %660 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %659, i8* %658)
  %661 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %661, label %662, label %664

662:                                              ; preds = %566
  %663 = icmp slt i8 %660, 0
  br label %665

664:                                              ; preds = %566
  br label %665

665:                                              ; preds = %662, %664
  %666 = phi i1 [ false, %664 ], [ %663, %662 ]
  %667 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %214, %swift.type* swiftself @"$sSiN")
  br i1 %667, label %668, label %669

668:                                              ; preds = %665
  br label %670

669:                                              ; preds = %665
  br label %670

670:                                              ; preds = %668, %669
  %671 = phi i1 [ false, %669 ], [ false, %668 ]
  %672 = icmp eq i1 %666, %671
  %673 = xor i1 %672, true
  br i1 %673, label %674, label %675

674:                                              ; preds = %670
  br label %689

675:                                              ; preds = %670
  %676 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %676)
  %._value44 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %45, i32 0, i32 0
  store i8 %660, i8* %._value44, align 1
  %677 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %678 = bitcast %Ts4Int8V* %45 to %swift.opaque*
  %679 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %677, %swift.opaque* noalias nocapture swiftself %678)
  %680 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %45)
  %681 = bitcast %TSi* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %681)
  %._value45 = getelementptr inbounds %TSi, %TSi* %46, i32 0, i32 0
  store i64 0, i64* %._value45, align 8
  %682 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %683 = bitcast %TSi* %46 to %swift.opaque*
  %684 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %682, %swift.opaque* noalias nocapture swiftself %683)
  %685 = call %TSi* @"$sSiWOh"(%TSi* %46)
  %686 = icmp slt i64 %679, %684
  %687 = bitcast %TSi* %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %687)
  %688 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %688)
  br i1 %686, label %704, label %715

689:                                              ; preds = %674, %704, %727, %740, %751
  %690 = phi i1 [ %759, %751 ], [ %748, %740 ], [ %735, %727 ], [ %712, %704 ], [ false, %674 ]
  %691 = xor i1 %690, true
  %692 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %693 = extractvalue { i64, %swift.bridge* } %692, 0
  %694 = extractvalue { i64, %swift.bridge* } %692, 1
  %695 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %696 = extractvalue { i8*, %swift.refcounted* } %695, 0
  %697 = extractvalue { i8*, %swift.refcounted* } %695, 1
  %698 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %697) #3
  %699 = bitcast %swift.refcounted* %697 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %76)
  %700 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %691, i8* %696, %swift.opaque* %699, %swift.opaque* noalias nocapture %76, i1 %700, i64 %693, %swift.bridge* %694, i64 308)
  call void @swift_release(%swift.refcounted* %697) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %697) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %694) #3
  %701 = bitcast %TSo9XCTestRunC* %567 to i8*
  call void @llvm.objc.release(i8* %701)
  %702 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %478 to i8*
  call void @llvm.objc.release(i8* %702)
  %703 = bitcast %swift.opaque* %76 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %703)
  ret void

704:                                              ; preds = %675
  %705 = bitcast %TSi* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %705)
  %706 = bitcast %Ts4Int8V* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %706)
  %._value54 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %56, i32 0, i32 0
  store i8 %660, i8* %._value54, align 1
  %707 = bitcast %TSi* %55 to %swift.opaque*
  %708 = bitcast %Ts4Int8V* %56 to %swift.opaque*
  %709 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %707, %swift.opaque* noalias nocapture %708, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %682, i8** %709, %swift.type* swiftself @"$sSiN")
  %710 = bitcast %Ts4Int8V* %56 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %710)
  %._value55 = getelementptr inbounds %TSi, %TSi* %55, i32 0, i32 0
  %711 = load i64, i64* %._value55, align 8
  %712 = icmp eq i64 %711, 0
  %713 = call %TSi* @"$sSiWOh"(%TSi* %55)
  %714 = bitcast %TSi* %55 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %714)
  br label %689

715:                                              ; preds = %675
  %716 = bitcast %Ts4Int8V* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %716)
  %._value46 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %47, i32 0, i32 0
  store i8 %660, i8* %._value46, align 1
  %717 = bitcast %Ts4Int8V* %47 to %swift.opaque*
  %718 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %677, %swift.opaque* noalias nocapture swiftself %717)
  %719 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %47)
  %720 = bitcast %TSi* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %720)
  %._value47 = getelementptr inbounds %TSi, %TSi* %48, i32 0, i32 0
  store i64 0, i64* %._value47, align 8
  %721 = bitcast %TSi* %48 to %swift.opaque*
  %722 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %682, %swift.opaque* noalias nocapture swiftself %721)
  %723 = call %TSi* @"$sSiWOh"(%TSi* %48)
  %724 = icmp slt i64 %722, %718
  %725 = bitcast %TSi* %48 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %725)
  %726 = bitcast %Ts4Int8V* %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %726)
  br i1 %724, label %727, label %738

727:                                              ; preds = %715
  %728 = bitcast %Ts4Int8V* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %728)
  %729 = bitcast %TSi* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %729)
  %._value52 = getelementptr inbounds %TSi, %TSi* %54, i32 0, i32 0
  store i64 0, i64* %._value52, align 8
  %730 = bitcast %Ts4Int8V* %53 to %swift.opaque*
  %731 = bitcast %TSi* %54 to %swift.opaque*
  %732 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %730, %swift.opaque* noalias nocapture %731, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %677, i8** %732, %swift.type* swiftself @"$ss4Int8VN")
  %733 = bitcast %TSi* %54 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %733)
  %._value53 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %53, i32 0, i32 0
  %734 = load i8, i8* %._value53, align 1
  %735 = icmp eq i8 %660, %734
  %736 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %53)
  %737 = bitcast %Ts4Int8V* %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %737)
  br label %689

738:                                              ; preds = %715
  %739 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %739, label %740, label %751

740:                                              ; preds = %738
  %741 = bitcast %TSi* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %741)
  %742 = bitcast %Ts4Int8V* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %742)
  %._value50 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %52, i32 0, i32 0
  store i8 %660, i8* %._value50, align 1
  %743 = bitcast %TSi* %51 to %swift.opaque*
  %744 = bitcast %Ts4Int8V* %52 to %swift.opaque*
  %745 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %743, %swift.opaque* noalias nocapture %744, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %682, i8** %745, %swift.type* swiftself @"$sSiN")
  %746 = bitcast %Ts4Int8V* %52 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %746)
  %._value51 = getelementptr inbounds %TSi, %TSi* %51, i32 0, i32 0
  %747 = load i64, i64* %._value51, align 8
  %748 = icmp eq i64 %747, 0
  %749 = call %TSi* @"$sSiWOh"(%TSi* %51)
  %750 = bitcast %TSi* %51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %750)
  br label %689

751:                                              ; preds = %738
  %752 = bitcast %Ts4Int8V* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %752)
  %753 = bitcast %TSi* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %753)
  %._value48 = getelementptr inbounds %TSi, %TSi* %50, i32 0, i32 0
  store i64 0, i64* %._value48, align 8
  %754 = bitcast %Ts4Int8V* %49 to %swift.opaque*
  %755 = bitcast %TSi* %50 to %swift.opaque*
  %756 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %754, %swift.opaque* noalias nocapture %755, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %677, i8** %756, %swift.type* swiftself @"$ss4Int8VN")
  %757 = bitcast %TSi* %50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %757)
  %._value49 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %49, i32 0, i32 0
  %758 = load i8, i8* %._value49, align 1
  %759 = icmp eq i8 %660, %758
  %760 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %49)
  %761 = bitcast %Ts4Int8V* %49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %761)
  br label %689
}

define internal swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %4 to %13*
  %7 = call %13* bitcast (void ()* @objc_msgSend to %13* (%13*, i8*, i8*)*)(%13* %6, i8* %5, i8* %0)
  %8 = bitcast %13* %7 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  ret %T7_XCTestyycfU5_13ErrorTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU6_"() #0 {
entry:
  %testRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %testRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %testRun.debug16 = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %testRun.debug16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %testRun.debug33 = alloca %TSo9XCTestRunC*, align 8
  %34 = bitcast %TSo9XCTestRunC** %testRun.debug33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 8, i1 false)
  %35 = alloca %TSi, align 8
  %36 = alloca %TSi, align 8
  %37 = alloca %TSi, align 8
  %38 = alloca %TSi, align 8
  %39 = alloca %TSi, align 8
  %40 = alloca %TSi, align 8
  %41 = alloca %TSi, align 8
  %42 = alloca %TSi, align 8
  %43 = alloca %TSi, align 8
  %44 = alloca %TSi, align 8
  %45 = alloca %Ts4Int8V, align 1
  %46 = alloca %TSi, align 8
  %47 = alloca %Ts4Int8V, align 1
  %48 = alloca %TSi, align 8
  %49 = alloca %Ts4Int8V, align 1
  %50 = alloca %TSi, align 8
  %51 = alloca %TSi, align 8
  %52 = alloca %Ts4Int8V, align 1
  %53 = alloca %Ts4Int8V, align 1
  %54 = alloca %TSi, align 8
  %55 = alloca %TSi, align 8
  %56 = alloca %Ts4Int8V, align 1
  %57 = alloca %TSi, align 8
  %58 = alloca %Ts4Int8V, align 1
  %59 = alloca %Ts4Int8V, align 1
  %60 = alloca %TSi, align 8
  %61 = alloca %TSi, align 8
  %62 = alloca %Ts4Int8V, align 1
  %63 = alloca %TSi, align 8
  %64 = alloca %Ts4Int8V, align 1
  %65 = alloca %Ts4Int8V, align 1
  %66 = alloca %TSi, align 8
  %67 = alloca %TSi, align 8
  %68 = alloca %Ts4Int8V, align 1
  %69 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %70 = extractvalue %swift.metadata_response %69, 0
  %71 = bitcast %swift.type* %70 to i8***
  %72 = getelementptr inbounds i8**, i8*** %71, i64 -1
  %.valueWitnesses = load i8**, i8*** %72, align 8, !invariant.load !178, !dereferenceable !179
  %73 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %74 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %73, i32 0, i32 8
  %size = load i64, i64* %74, align 8, !invariant.load !178
  %75 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %75)
  %76 = bitcast i8* %75 to %swift.opaque*
  %77 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa"(i64 0) #6
  %78 = extractvalue %swift.metadata_response %77, 0
  %79 = load i8*, i8** @"\01L_selector(test_throws)", align 8
  %80 = call swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %79, %swift.type* swiftself %78)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* %80)
  call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvs"(i1 false, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %80)
  %81 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %80 to %TSo6XCTestC*
  %82 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %81)
  %83 = extractvalue { i8*, %swift.refcounted* } %82, 0
  %84 = extractvalue { i8*, %swift.refcounted* } %82, 1
  %85 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %84) #3
  %86 = bitcast %swift.refcounted* %84 to %swift.opaque*
  %87 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %87, i8* %83, %swift.opaque* %86)
  call void @swift_release(%swift.refcounted* %84) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %87) #3
  call void @swift_release(%swift.refcounted* %84) #3
  %88 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %80 to i8*
  %89 = call i8* @llvm.objc.retain(i8* %88)
  %90 = bitcast i8* %89 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %91 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %80 to %TSo6XCTestC*
  %92 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %93 = bitcast %TSo6XCTestC* %91 to %5*
  %94 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %93, i8* %92)
  %95 = bitcast %6* %94 to i8*
  %96 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %95)
  %97 = bitcast i8* %96 to %6*
  %98 = ptrtoint %6* %97 to i64
  %99 = bitcast %TSo6XCTestC* %91 to i8*
  call void @llvm.objc.release(i8* %99)
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %entry
  %102 = inttoptr i64 %98 to %TSo9XCTestRunC*
  br label %110

103:                                              ; preds = %entry
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 334, i32 1)
  unreachable

110:                                              ; preds = %101
  %111 = phi %TSo9XCTestRunC* [ %102, %101 ]
  store %TSo9XCTestRunC* %111, %TSo9XCTestRunC** %testRun.debug, align 8
  %112 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %112)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %113 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %114 = bitcast %TSo9XCTestRunC* %111 to %6*
  %115 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %114, i8* %113)
  %116 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %116)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %115, i64* %._value1, align 8
  %117 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %118 = extractvalue { i64, %swift.bridge* } %117, 0
  %119 = extractvalue { i64, %swift.bridge* } %117, 1
  %120 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %121 = extractvalue { i8*, %swift.refcounted* } %120, 0
  %122 = extractvalue { i8*, %swift.refcounted* } %120, 1
  %123 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %122) #3
  %124 = bitcast %swift.refcounted* %122 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %125 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %126 = bitcast %TSi* %1 to %swift.opaque*
  %127 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %126, %swift.opaque* noalias nocapture %127, i8* %121, %swift.opaque* %124, %swift.opaque* noalias nocapture %76, i1 %125, i64 %118, %swift.bridge* %119, i64 336, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %122) #3
  %128 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %129 = load i8*, i8** %128, align 8, !invariant.load !178
  %destroy = bitcast i8* %129 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %122) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %119) #3
  %130 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130)
  %131 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131)
  %132 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %132)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %133 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %134 = bitcast %TSo9XCTestRunC* %111 to %6*
  %135 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %134, i8* %133)
  %136 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %136)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %135, i64* %._value3, align 8
  %137 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %138 = extractvalue { i64, %swift.bridge* } %137, 0
  %139 = extractvalue { i64, %swift.bridge* } %137, 1
  %140 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %141 = extractvalue { i8*, %swift.refcounted* } %140, 0
  %142 = extractvalue { i8*, %swift.refcounted* } %140, 1
  %143 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %142) #3
  %144 = bitcast %swift.refcounted* %142 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %145 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %146 = bitcast %TSi* %3 to %swift.opaque*
  %147 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %146, %swift.opaque* noalias nocapture %147, i8* %141, %swift.opaque* %144, %swift.opaque* noalias nocapture %76, i1 %145, i64 %138, %swift.bridge* %139, i64 337, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %142) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %142) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %139) #3
  %148 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148)
  %149 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149)
  %150 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %150)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %151 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %152 = bitcast %TSo9XCTestRunC* %111 to %6*
  %153 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %152, i8* %151)
  %154 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %154)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %153, i64* %._value5, align 8
  %155 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %156 = extractvalue { i64, %swift.bridge* } %155, 0
  %157 = extractvalue { i64, %swift.bridge* } %155, 1
  %158 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %159 = extractvalue { i8*, %swift.refcounted* } %158, 0
  %160 = extractvalue { i8*, %swift.refcounted* } %158, 1
  %161 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %160) #3
  %162 = bitcast %swift.refcounted* %160 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %163 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %164 = bitcast %TSi* %5 to %swift.opaque*
  %165 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %164, %swift.opaque* noalias nocapture %165, i8* %159, %swift.opaque* %162, %swift.opaque* noalias nocapture %76, i1 %163, i64 %156, %swift.bridge* %157, i64 338, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %160) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %160) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %157) #3
  %166 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166)
  %167 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167)
  %168 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %168)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %169 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %170 = bitcast %TSo9XCTestRunC* %111 to %6*
  %171 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %170, i8* %169)
  %172 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %171, i64* %._value7, align 8
  %173 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %174 = extractvalue { i64, %swift.bridge* } %173, 0
  %175 = extractvalue { i64, %swift.bridge* } %173, 1
  %176 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %177 = extractvalue { i8*, %swift.refcounted* } %176, 0
  %178 = extractvalue { i8*, %swift.refcounted* } %176, 1
  %179 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %178) #3
  %180 = bitcast %swift.refcounted* %178 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %181 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %182 = bitcast %TSi* %7 to %swift.opaque*
  %183 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %182, %swift.opaque* noalias nocapture %183, i8* %177, %swift.opaque* %180, %swift.opaque* noalias nocapture %76, i1 %181, i64 %174, %swift.bridge* %175, i64 339, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %178) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %178) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %175) #3
  %184 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184)
  %185 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185)
  %186 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %186)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %187 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %188 = bitcast %TSo9XCTestRunC* %111 to %6*
  %189 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %188, i8* %187)
  %190 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %190)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %189, i64* %._value9, align 8
  %191 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %192 = extractvalue { i64, %swift.bridge* } %191, 0
  %193 = extractvalue { i64, %swift.bridge* } %191, 1
  %194 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %195 = extractvalue { i8*, %swift.refcounted* } %194, 0
  %196 = extractvalue { i8*, %swift.refcounted* } %194, 1
  %197 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %196) #3
  %198 = bitcast %swift.refcounted* %196 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %199 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %200 = bitcast %TSi* %9 to %swift.opaque*
  %201 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %200, %swift.opaque* noalias nocapture %201, i8* %195, %swift.opaque* %198, %swift.opaque* noalias nocapture %76, i1 %199, i64 %192, %swift.bridge* %193, i64 340, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %196) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %196) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %193) #3
  %202 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202)
  %203 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203)
  %204 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %205 = bitcast %TSo9XCTestRunC* %111 to %6*
  %206 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %205, i8* %204)
  %207 = call i8** @"$ss4Int8VABSZsWl"() #6
  %208 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %208, label %209, label %211

209:                                              ; preds = %110
  %210 = icmp slt i8 %206, 0
  br label %212

211:                                              ; preds = %110
  br label %212

212:                                              ; preds = %209, %211
  %213 = phi i1 [ false, %211 ], [ %210, %209 ]
  %214 = call i8** @"$sS2iSZsWl"() #6
  %215 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %214, %swift.type* swiftself @"$sSiN")
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  br label %218

217:                                              ; preds = %212
  br label %218

218:                                              ; preds = %216, %217
  %219 = phi i1 [ false, %217 ], [ false, %216 ]
  %220 = icmp eq i1 %213, %219
  %221 = xor i1 %220, true
  br i1 %221, label %222, label %223

222:                                              ; preds = %218
  br label %237

223:                                              ; preds = %218
  %224 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %224)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %206, i8* %._value10, align 1
  %225 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %226 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %227 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %225, %swift.opaque* noalias nocapture swiftself %226)
  %228 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %229 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %230 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %231 = bitcast %TSi* %12 to %swift.opaque*
  %232 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %230, %swift.opaque* noalias nocapture swiftself %231)
  %233 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %234 = icmp slt i64 %227, %232
  %235 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235)
  %236 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %236)
  br i1 %234, label %275, label %286

237:                                              ; preds = %222, %275, %298, %311, %322
  %238 = phi i1 [ %330, %322 ], [ %319, %311 ], [ %306, %298 ], [ %283, %275 ], [ false, %222 ]
  %239 = xor i1 %238, true
  %240 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %241 = extractvalue { i64, %swift.bridge* } %240, 0
  %242 = extractvalue { i64, %swift.bridge* } %240, 1
  %243 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %244 = extractvalue { i8*, %swift.refcounted* } %243, 0
  %245 = extractvalue { i8*, %swift.refcounted* } %243, 1
  %246 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %245) #3
  %247 = bitcast %swift.refcounted* %245 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %76)
  %248 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %239, i8* %244, %swift.opaque* %247, %swift.opaque* noalias nocapture %76, i1 %248, i64 %241, %swift.bridge* %242, i64 341)
  call void @swift_release(%swift.refcounted* %245) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %245) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %242) #3
  %249 = bitcast %TSo9XCTestRunC* %111 to i8*
  call void @llvm.objc.release(i8* %249)
  %250 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %80 to i8*
  call void @llvm.objc.release(i8* %250)
  %251 = load i8*, i8** @"\01L_selector(test_throws)", align 8
  %252 = call swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %251, %swift.type* swiftself %78)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* %252)
  %253 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %252 to %TSo6XCTestC*
  %254 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %253)
  %255 = extractvalue { i8*, %swift.refcounted* } %254, 0
  %256 = extractvalue { i8*, %swift.refcounted* } %254, 1
  %257 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %256) #3
  %258 = bitcast %swift.refcounted* %256 to %swift.opaque*
  %259 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %259, i8* %255, %swift.opaque* %258)
  call void @swift_release(%swift.refcounted* %256) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %259) #3
  call void @swift_release(%swift.refcounted* %256) #3
  %260 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %252 to i8*
  %261 = call i8* @llvm.objc.retain(i8* %260)
  %262 = bitcast i8* %261 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %263 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %252 to %TSo6XCTestC*
  %264 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %265 = bitcast %TSo6XCTestC* %263 to %5*
  %266 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %265, i8* %264)
  %267 = bitcast %6* %266 to i8*
  %268 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %267)
  %269 = bitcast i8* %268 to %6*
  %270 = ptrtoint %6* %269 to i64
  %271 = bitcast %TSo6XCTestC* %263 to i8*
  call void @llvm.objc.release(i8* %271)
  %272 = icmp eq i64 %270, 0
  br i1 %272, label %333, label %273

273:                                              ; preds = %237
  %274 = inttoptr i64 %270 to %TSo9XCTestRunC*
  br label %340

275:                                              ; preds = %223
  %276 = bitcast %TSi* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %276)
  %277 = bitcast %Ts4Int8V* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %277)
  %._value66 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %68, i32 0, i32 0
  store i8 %206, i8* %._value66, align 1
  %278 = bitcast %TSi* %67 to %swift.opaque*
  %279 = bitcast %Ts4Int8V* %68 to %swift.opaque*
  %280 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %278, %swift.opaque* noalias nocapture %279, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %230, i8** %280, %swift.type* swiftself @"$sSiN")
  %281 = bitcast %Ts4Int8V* %68 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %281)
  %._value67 = getelementptr inbounds %TSi, %TSi* %67, i32 0, i32 0
  %282 = load i64, i64* %._value67, align 8
  %283 = icmp eq i64 %282, 0
  %284 = call %TSi* @"$sSiWOh"(%TSi* %67)
  %285 = bitcast %TSi* %67 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285)
  br label %237

286:                                              ; preds = %223
  %287 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %287)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %206, i8* %._value12, align 1
  %288 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %289 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %225, %swift.opaque* noalias nocapture swiftself %288)
  %290 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %291 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %291)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %292 = bitcast %TSi* %14 to %swift.opaque*
  %293 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %230, %swift.opaque* noalias nocapture swiftself %292)
  %294 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %295 = icmp slt i64 %293, %289
  %296 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296)
  %297 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %297)
  br i1 %295, label %298, label %309

298:                                              ; preds = %286
  %299 = bitcast %Ts4Int8V* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %299)
  %300 = bitcast %TSi* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %300)
  %._value64 = getelementptr inbounds %TSi, %TSi* %66, i32 0, i32 0
  store i64 0, i64* %._value64, align 8
  %301 = bitcast %Ts4Int8V* %65 to %swift.opaque*
  %302 = bitcast %TSi* %66 to %swift.opaque*
  %303 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %301, %swift.opaque* noalias nocapture %302, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %225, i8** %303, %swift.type* swiftself @"$ss4Int8VN")
  %304 = bitcast %TSi* %66 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304)
  %._value65 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %65, i32 0, i32 0
  %305 = load i8, i8* %._value65, align 1
  %306 = icmp eq i8 %206, %305
  %307 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %65)
  %308 = bitcast %Ts4Int8V* %65 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %308)
  br label %237

309:                                              ; preds = %286
  %310 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %310, label %311, label %322

311:                                              ; preds = %309
  %312 = bitcast %TSi* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %312)
  %313 = bitcast %Ts4Int8V* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %313)
  %._value62 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %64, i32 0, i32 0
  store i8 %206, i8* %._value62, align 1
  %314 = bitcast %TSi* %63 to %swift.opaque*
  %315 = bitcast %Ts4Int8V* %64 to %swift.opaque*
  %316 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %314, %swift.opaque* noalias nocapture %315, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %230, i8** %316, %swift.type* swiftself @"$sSiN")
  %317 = bitcast %Ts4Int8V* %64 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %317)
  %._value63 = getelementptr inbounds %TSi, %TSi* %63, i32 0, i32 0
  %318 = load i64, i64* %._value63, align 8
  %319 = icmp eq i64 %318, 0
  %320 = call %TSi* @"$sSiWOh"(%TSi* %63)
  %321 = bitcast %TSi* %63 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %321)
  br label %237

322:                                              ; preds = %309
  %323 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %323)
  %324 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %324)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %325 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %326 = bitcast %TSi* %16 to %swift.opaque*
  %327 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %325, %swift.opaque* noalias nocapture %326, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %225, i8** %327, %swift.type* swiftself @"$ss4Int8VN")
  %328 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %328)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %329 = load i8, i8* %._value15, align 1
  %330 = icmp eq i8 %206, %329
  %331 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %332 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %332)
  br label %237

333:                                              ; preds = %237
  br label %334

334:                                              ; preds = %333
  br label %335

335:                                              ; preds = %334
  br label %336

336:                                              ; preds = %335
  br label %337

337:                                              ; preds = %336
  br label %338

338:                                              ; preds = %337
  br label %339

339:                                              ; preds = %338
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 348, i32 1)
  unreachable

340:                                              ; preds = %273
  %341 = phi %TSo9XCTestRunC* [ %274, %273 ]
  store %TSo9XCTestRunC* %341, %TSo9XCTestRunC** %testRun.debug16, align 8
  %342 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %342)
  %._value17 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value17, align 8
  %343 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %344 = bitcast %TSo9XCTestRunC* %341 to %6*
  %345 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %344, i8* %343)
  %346 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %346)
  %._value18 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %345, i64* %._value18, align 8
  %347 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %348 = extractvalue { i64, %swift.bridge* } %347, 0
  %349 = extractvalue { i64, %swift.bridge* } %347, 1
  %350 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %351 = extractvalue { i8*, %swift.refcounted* } %350, 0
  %352 = extractvalue { i8*, %swift.refcounted* } %350, 1
  %353 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %352) #3
  %354 = bitcast %swift.refcounted* %352 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %355 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %356 = bitcast %TSi* %18 to %swift.opaque*
  %357 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %356, %swift.opaque* noalias nocapture %357, i8* %351, %swift.opaque* %354, %swift.opaque* noalias nocapture %76, i1 %355, i64 %348, %swift.bridge* %349, i64 350, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %352) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %352) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %349) #3
  %358 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %358)
  %359 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %359)
  %360 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %360)
  %._value19 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value19, align 8
  %361 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %362 = bitcast %TSo9XCTestRunC* %341 to %6*
  %363 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %362, i8* %361)
  %364 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %364)
  %._value20 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %363, i64* %._value20, align 8
  %365 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %366 = extractvalue { i64, %swift.bridge* } %365, 0
  %367 = extractvalue { i64, %swift.bridge* } %365, 1
  %368 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %369 = extractvalue { i8*, %swift.refcounted* } %368, 0
  %370 = extractvalue { i8*, %swift.refcounted* } %368, 1
  %371 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %370) #3
  %372 = bitcast %swift.refcounted* %370 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %373 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %374 = bitcast %TSi* %20 to %swift.opaque*
  %375 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %374, %swift.opaque* noalias nocapture %375, i8* %369, %swift.opaque* %372, %swift.opaque* noalias nocapture %76, i1 %373, i64 %366, %swift.bridge* %367, i64 351, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %370) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %370) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %367) #3
  %376 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376)
  %377 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377)
  %378 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %378)
  %._value21 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 1, i64* %._value21, align 8
  %379 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %380 = bitcast %TSo9XCTestRunC* %341 to %6*
  %381 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %380, i8* %379)
  %382 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %382)
  %._value22 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %381, i64* %._value22, align 8
  %383 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %384 = extractvalue { i64, %swift.bridge* } %383, 0
  %385 = extractvalue { i64, %swift.bridge* } %383, 1
  %386 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %387 = extractvalue { i8*, %swift.refcounted* } %386, 0
  %388 = extractvalue { i8*, %swift.refcounted* } %386, 1
  %389 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %388) #3
  %390 = bitcast %swift.refcounted* %388 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %391 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %392 = bitcast %TSi* %22 to %swift.opaque*
  %393 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %392, %swift.opaque* noalias nocapture %393, i8* %387, %swift.opaque* %390, %swift.opaque* noalias nocapture %76, i1 %391, i64 %384, %swift.bridge* %385, i64 352, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %388) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %388) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %385) #3
  %394 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394)
  %395 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %395)
  %396 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %396)
  %._value23 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 0, i64* %._value23, align 8
  %397 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %398 = bitcast %TSo9XCTestRunC* %341 to %6*
  %399 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %398, i8* %397)
  %400 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %400)
  %._value24 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %399, i64* %._value24, align 8
  %401 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %402 = extractvalue { i64, %swift.bridge* } %401, 0
  %403 = extractvalue { i64, %swift.bridge* } %401, 1
  %404 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %405 = extractvalue { i8*, %swift.refcounted* } %404, 0
  %406 = extractvalue { i8*, %swift.refcounted* } %404, 1
  %407 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %406) #3
  %408 = bitcast %swift.refcounted* %406 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %409 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %410 = bitcast %TSi* %24 to %swift.opaque*
  %411 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %410, %swift.opaque* noalias nocapture %411, i8* %405, %swift.opaque* %408, %swift.opaque* noalias nocapture %76, i1 %409, i64 %402, %swift.bridge* %403, i64 353, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %406) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %406) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %403) #3
  %412 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412)
  %413 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %413)
  %414 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %414)
  %._value25 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value25, align 8
  %415 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %416 = bitcast %TSo9XCTestRunC* %341 to %6*
  %417 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %416, i8* %415)
  %418 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %418)
  %._value26 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %417, i64* %._value26, align 8
  %419 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %420 = extractvalue { i64, %swift.bridge* } %419, 0
  %421 = extractvalue { i64, %swift.bridge* } %419, 1
  %422 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %423 = extractvalue { i8*, %swift.refcounted* } %422, 0
  %424 = extractvalue { i8*, %swift.refcounted* } %422, 1
  %425 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %424) #3
  %426 = bitcast %swift.refcounted* %424 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %427 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %428 = bitcast %TSi* %26 to %swift.opaque*
  %429 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %428, %swift.opaque* noalias nocapture %429, i8* %423, %swift.opaque* %426, %swift.opaque* noalias nocapture %76, i1 %427, i64 %420, %swift.bridge* %421, i64 354, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %424) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %424) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %421) #3
  %430 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %430)
  %431 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %431)
  %432 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %433 = bitcast %TSo9XCTestRunC* %341 to %6*
  %434 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %433, i8* %432)
  %435 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %435, label %436, label %438

436:                                              ; preds = %340
  %437 = icmp slt i8 %434, 0
  br label %439

438:                                              ; preds = %340
  br label %439

439:                                              ; preds = %436, %438
  %440 = phi i1 [ false, %438 ], [ %437, %436 ]
  %441 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %214, %swift.type* swiftself @"$sSiN")
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  br label %444

443:                                              ; preds = %439
  br label %444

444:                                              ; preds = %442, %443
  %445 = phi i1 [ false, %443 ], [ false, %442 ]
  %446 = icmp eq i1 %440, %445
  %447 = xor i1 %446, true
  br i1 %447, label %448, label %449

448:                                              ; preds = %444
  br label %463

449:                                              ; preds = %444
  %450 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %450)
  %._value27 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %434, i8* %._value27, align 1
  %451 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %452 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %453 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %451, %swift.opaque* noalias nocapture swiftself %452)
  %454 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %455 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %455)
  %._value28 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value28, align 8
  %456 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %457 = bitcast %TSi* %29 to %swift.opaque*
  %458 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %456, %swift.opaque* noalias nocapture swiftself %457)
  %459 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %460 = icmp slt i64 %453, %458
  %461 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %461)
  %462 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %462)
  br i1 %460, label %501, label %512

463:                                              ; preds = %448, %501, %524, %537, %548
  %464 = phi i1 [ %556, %548 ], [ %545, %537 ], [ %532, %524 ], [ %509, %501 ], [ false, %448 ]
  %465 = xor i1 %464, true
  %466 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %467 = extractvalue { i64, %swift.bridge* } %466, 0
  %468 = extractvalue { i64, %swift.bridge* } %466, 1
  %469 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %470 = extractvalue { i8*, %swift.refcounted* } %469, 0
  %471 = extractvalue { i8*, %swift.refcounted* } %469, 1
  %472 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %471) #3
  %473 = bitcast %swift.refcounted* %471 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %76)
  %474 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %465, i8* %470, %swift.opaque* %473, %swift.opaque* noalias nocapture %76, i1 %474, i64 %467, %swift.bridge* %468, i64 355)
  call void @swift_release(%swift.refcounted* %471) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %471) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %468) #3
  %475 = bitcast %TSo9XCTestRunC* %341 to i8*
  call void @llvm.objc.release(i8* %475)
  %476 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %252 to i8*
  call void @llvm.objc.release(i8* %476)
  %477 = load i8*, i8** @"\01L_selector(test_throws)", align 8
  %478 = call swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %477, %swift.type* swiftself %78)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* %478)
  call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivs"(i64 23, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %478)
  %479 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %478 to %TSo6XCTestC*
  %480 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %479)
  %481 = extractvalue { i8*, %swift.refcounted* } %480, 0
  %482 = extractvalue { i8*, %swift.refcounted* } %480, 1
  %483 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %482) #3
  %484 = bitcast %swift.refcounted* %482 to %swift.opaque*
  %485 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %485, i8* %481, %swift.opaque* %484)
  call void @swift_release(%swift.refcounted* %482) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %485) #3
  call void @swift_release(%swift.refcounted* %482) #3
  %486 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %478 to i8*
  %487 = call i8* @llvm.objc.retain(i8* %486)
  %488 = bitcast i8* %487 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %489 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %478 to %TSo6XCTestC*
  %490 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %491 = bitcast %TSo6XCTestC* %489 to %5*
  %492 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %491, i8* %490)
  %493 = bitcast %6* %492 to i8*
  %494 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %493)
  %495 = bitcast i8* %494 to %6*
  %496 = ptrtoint %6* %495 to i64
  %497 = bitcast %TSo6XCTestC* %489 to i8*
  call void @llvm.objc.release(i8* %497)
  %498 = icmp eq i64 %496, 0
  br i1 %498, label %559, label %499

499:                                              ; preds = %463
  %500 = inttoptr i64 %496 to %TSo9XCTestRunC*
  br label %566

501:                                              ; preds = %449
  %502 = bitcast %TSi* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %502)
  %503 = bitcast %Ts4Int8V* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %503)
  %._value60 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %62, i32 0, i32 0
  store i8 %434, i8* %._value60, align 1
  %504 = bitcast %TSi* %61 to %swift.opaque*
  %505 = bitcast %Ts4Int8V* %62 to %swift.opaque*
  %506 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %504, %swift.opaque* noalias nocapture %505, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %456, i8** %506, %swift.type* swiftself @"$sSiN")
  %507 = bitcast %Ts4Int8V* %62 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %507)
  %._value61 = getelementptr inbounds %TSi, %TSi* %61, i32 0, i32 0
  %508 = load i64, i64* %._value61, align 8
  %509 = icmp eq i64 %508, 0
  %510 = call %TSi* @"$sSiWOh"(%TSi* %61)
  %511 = bitcast %TSi* %61 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %511)
  br label %463

512:                                              ; preds = %449
  %513 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %513)
  %._value29 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %434, i8* %._value29, align 1
  %514 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %515 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %451, %swift.opaque* noalias nocapture swiftself %514)
  %516 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %517 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %517)
  %._value30 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %518 = bitcast %TSi* %31 to %swift.opaque*
  %519 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %456, %swift.opaque* noalias nocapture swiftself %518)
  %520 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %521 = icmp slt i64 %519, %515
  %522 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %522)
  %523 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %523)
  br i1 %521, label %524, label %535

524:                                              ; preds = %512
  %525 = bitcast %Ts4Int8V* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %525)
  %526 = bitcast %TSi* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %526)
  %._value58 = getelementptr inbounds %TSi, %TSi* %60, i32 0, i32 0
  store i64 0, i64* %._value58, align 8
  %527 = bitcast %Ts4Int8V* %59 to %swift.opaque*
  %528 = bitcast %TSi* %60 to %swift.opaque*
  %529 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %527, %swift.opaque* noalias nocapture %528, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %451, i8** %529, %swift.type* swiftself @"$ss4Int8VN")
  %530 = bitcast %TSi* %60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %530)
  %._value59 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %59, i32 0, i32 0
  %531 = load i8, i8* %._value59, align 1
  %532 = icmp eq i8 %434, %531
  %533 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %59)
  %534 = bitcast %Ts4Int8V* %59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %534)
  br label %463

535:                                              ; preds = %512
  %536 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %536, label %537, label %548

537:                                              ; preds = %535
  %538 = bitcast %TSi* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %538)
  %539 = bitcast %Ts4Int8V* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %539)
  %._value56 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %58, i32 0, i32 0
  store i8 %434, i8* %._value56, align 1
  %540 = bitcast %TSi* %57 to %swift.opaque*
  %541 = bitcast %Ts4Int8V* %58 to %swift.opaque*
  %542 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %540, %swift.opaque* noalias nocapture %541, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %456, i8** %542, %swift.type* swiftself @"$sSiN")
  %543 = bitcast %Ts4Int8V* %58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %543)
  %._value57 = getelementptr inbounds %TSi, %TSi* %57, i32 0, i32 0
  %544 = load i64, i64* %._value57, align 8
  %545 = icmp eq i64 %544, 0
  %546 = call %TSi* @"$sSiWOh"(%TSi* %57)
  %547 = bitcast %TSi* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %547)
  br label %463

548:                                              ; preds = %535
  %549 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %549)
  %550 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %550)
  %._value31 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value31, align 8
  %551 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %552 = bitcast %TSi* %33 to %swift.opaque*
  %553 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %551, %swift.opaque* noalias nocapture %552, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %451, i8** %553, %swift.type* swiftself @"$ss4Int8VN")
  %554 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %554)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %555 = load i8, i8* %._value32, align 1
  %556 = icmp eq i8 %434, %555
  %557 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %558 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %558)
  br label %463

559:                                              ; preds = %463
  br label %560

560:                                              ; preds = %559
  br label %561

561:                                              ; preds = %560
  br label %562

562:                                              ; preds = %561
  br label %563

563:                                              ; preds = %562
  br label %564

564:                                              ; preds = %563
  br label %565

565:                                              ; preds = %564
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 363, i32 1)
  unreachable

566:                                              ; preds = %499
  %567 = phi %TSo9XCTestRunC* [ %500, %499 ]
  store %TSo9XCTestRunC* %567, %TSo9XCTestRunC** %testRun.debug33, align 8
  %568 = bitcast %TSi* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %568)
  %._value34 = getelementptr inbounds %TSi, %TSi* %35, i32 0, i32 0
  store i64 1, i64* %._value34, align 8
  %569 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %570 = bitcast %TSo9XCTestRunC* %567 to %6*
  %571 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %570, i8* %569)
  %572 = bitcast %TSi* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %572)
  %._value35 = getelementptr inbounds %TSi, %TSi* %36, i32 0, i32 0
  store i64 %571, i64* %._value35, align 8
  %573 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %574 = extractvalue { i64, %swift.bridge* } %573, 0
  %575 = extractvalue { i64, %swift.bridge* } %573, 1
  %576 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %577 = extractvalue { i8*, %swift.refcounted* } %576, 0
  %578 = extractvalue { i8*, %swift.refcounted* } %576, 1
  %579 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %578) #3
  %580 = bitcast %swift.refcounted* %578 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %581 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %582 = bitcast %TSi* %35 to %swift.opaque*
  %583 = bitcast %TSi* %36 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %582, %swift.opaque* noalias nocapture %583, i8* %577, %swift.opaque* %580, %swift.opaque* noalias nocapture %76, i1 %581, i64 %574, %swift.bridge* %575, i64 365, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %578) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %578) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %575) #3
  %584 = bitcast %TSi* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %584)
  %585 = bitcast %TSi* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %585)
  %586 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %586)
  %._value36 = getelementptr inbounds %TSi, %TSi* %37, i32 0, i32 0
  store i64 1, i64* %._value36, align 8
  %587 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %588 = bitcast %TSo9XCTestRunC* %567 to %6*
  %589 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %588, i8* %587)
  %590 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %590)
  %._value37 = getelementptr inbounds %TSi, %TSi* %38, i32 0, i32 0
  store i64 %589, i64* %._value37, align 8
  %591 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %592 = extractvalue { i64, %swift.bridge* } %591, 0
  %593 = extractvalue { i64, %swift.bridge* } %591, 1
  %594 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %595 = extractvalue { i8*, %swift.refcounted* } %594, 0
  %596 = extractvalue { i8*, %swift.refcounted* } %594, 1
  %597 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %596) #3
  %598 = bitcast %swift.refcounted* %596 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %599 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %600 = bitcast %TSi* %37 to %swift.opaque*
  %601 = bitcast %TSi* %38 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %600, %swift.opaque* noalias nocapture %601, i8* %595, %swift.opaque* %598, %swift.opaque* noalias nocapture %76, i1 %599, i64 %592, %swift.bridge* %593, i64 366, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %596) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %596) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %593) #3
  %602 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %602)
  %603 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %603)
  %604 = bitcast %TSi* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %604)
  %._value38 = getelementptr inbounds %TSi, %TSi* %39, i32 0, i32 0
  store i64 1, i64* %._value38, align 8
  %605 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %606 = bitcast %TSo9XCTestRunC* %567 to %6*
  %607 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %606, i8* %605)
  %608 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %608)
  %._value39 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  store i64 %607, i64* %._value39, align 8
  %609 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %610 = extractvalue { i64, %swift.bridge* } %609, 0
  %611 = extractvalue { i64, %swift.bridge* } %609, 1
  %612 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %613 = extractvalue { i8*, %swift.refcounted* } %612, 0
  %614 = extractvalue { i8*, %swift.refcounted* } %612, 1
  %615 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %614) #3
  %616 = bitcast %swift.refcounted* %614 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %617 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %618 = bitcast %TSi* %39 to %swift.opaque*
  %619 = bitcast %TSi* %40 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %618, %swift.opaque* noalias nocapture %619, i8* %613, %swift.opaque* %616, %swift.opaque* noalias nocapture %76, i1 %617, i64 %610, %swift.bridge* %611, i64 367, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %614) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %614) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %611) #3
  %620 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %620)
  %621 = bitcast %TSi* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %621)
  %622 = bitcast %TSi* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %622)
  %._value40 = getelementptr inbounds %TSi, %TSi* %41, i32 0, i32 0
  store i64 0, i64* %._value40, align 8
  %623 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %624 = bitcast %TSo9XCTestRunC* %567 to %6*
  %625 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %624, i8* %623)
  %626 = bitcast %TSi* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %626)
  %._value41 = getelementptr inbounds %TSi, %TSi* %42, i32 0, i32 0
  store i64 %625, i64* %._value41, align 8
  %627 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %628 = extractvalue { i64, %swift.bridge* } %627, 0
  %629 = extractvalue { i64, %swift.bridge* } %627, 1
  %630 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %631 = extractvalue { i8*, %swift.refcounted* } %630, 0
  %632 = extractvalue { i8*, %swift.refcounted* } %630, 1
  %633 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %632) #3
  %634 = bitcast %swift.refcounted* %632 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %635 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %636 = bitcast %TSi* %41 to %swift.opaque*
  %637 = bitcast %TSi* %42 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %636, %swift.opaque* noalias nocapture %637, i8* %631, %swift.opaque* %634, %swift.opaque* noalias nocapture %76, i1 %635, i64 %628, %swift.bridge* %629, i64 368, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %632) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %632) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %629) #3
  %638 = bitcast %TSi* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %638)
  %639 = bitcast %TSi* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %639)
  %640 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %640)
  %._value42 = getelementptr inbounds %TSi, %TSi* %43, i32 0, i32 0
  store i64 1, i64* %._value42, align 8
  %641 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %642 = bitcast %TSo9XCTestRunC* %567 to %6*
  %643 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %642, i8* %641)
  %644 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %644)
  %._value43 = getelementptr inbounds %TSi, %TSi* %44, i32 0, i32 0
  store i64 %643, i64* %._value43, align 8
  %645 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %646 = extractvalue { i64, %swift.bridge* } %645, 0
  %647 = extractvalue { i64, %swift.bridge* } %645, 1
  %648 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %649 = extractvalue { i8*, %swift.refcounted* } %648, 0
  %650 = extractvalue { i8*, %swift.refcounted* } %648, 1
  %651 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %650) #3
  %652 = bitcast %swift.refcounted* %650 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %76, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %653 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %654 = bitcast %TSi* %43 to %swift.opaque*
  %655 = bitcast %TSi* %44 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %654, %swift.opaque* noalias nocapture %655, i8* %649, %swift.opaque* %652, %swift.opaque* noalias nocapture %76, i1 %653, i64 %646, %swift.bridge* %647, i64 369, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %650) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %650) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %647) #3
  %656 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %656)
  %657 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %657)
  %658 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %659 = bitcast %TSo9XCTestRunC* %567 to %6*
  %660 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %659, i8* %658)
  %661 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %661, label %662, label %664

662:                                              ; preds = %566
  %663 = icmp slt i8 %660, 0
  br label %665

664:                                              ; preds = %566
  br label %665

665:                                              ; preds = %662, %664
  %666 = phi i1 [ false, %664 ], [ %663, %662 ]
  %667 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %214, %swift.type* swiftself @"$sSiN")
  br i1 %667, label %668, label %669

668:                                              ; preds = %665
  br label %670

669:                                              ; preds = %665
  br label %670

670:                                              ; preds = %668, %669
  %671 = phi i1 [ false, %669 ], [ false, %668 ]
  %672 = icmp eq i1 %666, %671
  %673 = xor i1 %672, true
  br i1 %673, label %674, label %675

674:                                              ; preds = %670
  br label %689

675:                                              ; preds = %670
  %676 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %676)
  %._value44 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %45, i32 0, i32 0
  store i8 %660, i8* %._value44, align 1
  %677 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %678 = bitcast %Ts4Int8V* %45 to %swift.opaque*
  %679 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %677, %swift.opaque* noalias nocapture swiftself %678)
  %680 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %45)
  %681 = bitcast %TSi* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %681)
  %._value45 = getelementptr inbounds %TSi, %TSi* %46, i32 0, i32 0
  store i64 0, i64* %._value45, align 8
  %682 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %683 = bitcast %TSi* %46 to %swift.opaque*
  %684 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %682, %swift.opaque* noalias nocapture swiftself %683)
  %685 = call %TSi* @"$sSiWOh"(%TSi* %46)
  %686 = icmp slt i64 %679, %684
  %687 = bitcast %TSi* %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %687)
  %688 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %688)
  br i1 %686, label %704, label %715

689:                                              ; preds = %674, %704, %727, %740, %751
  %690 = phi i1 [ %759, %751 ], [ %748, %740 ], [ %735, %727 ], [ %712, %704 ], [ false, %674 ]
  %691 = xor i1 %690, true
  %692 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %693 = extractvalue { i64, %swift.bridge* } %692, 0
  %694 = extractvalue { i64, %swift.bridge* } %692, 1
  %695 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %696 = extractvalue { i8*, %swift.refcounted* } %695, 0
  %697 = extractvalue { i8*, %swift.refcounted* } %695, 1
  %698 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %697) #3
  %699 = bitcast %swift.refcounted* %697 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %76)
  %700 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %691, i8* %696, %swift.opaque* %699, %swift.opaque* noalias nocapture %76, i1 %700, i64 %693, %swift.bridge* %694, i64 370)
  call void @swift_release(%swift.refcounted* %697) #3
  call void %destroy(%swift.opaque* noalias %76, %swift.type* %70) #3
  call void @swift_release(%swift.refcounted* %697) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %694) #3
  %701 = bitcast %TSo9XCTestRunC* %567 to i8*
  call void @llvm.objc.release(i8* %701)
  %702 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %478 to i8*
  call void @llvm.objc.release(i8* %702)
  %703 = bitcast %swift.opaque* %76 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %703)
  ret void

704:                                              ; preds = %675
  %705 = bitcast %TSi* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %705)
  %706 = bitcast %Ts4Int8V* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %706)
  %._value54 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %56, i32 0, i32 0
  store i8 %660, i8* %._value54, align 1
  %707 = bitcast %TSi* %55 to %swift.opaque*
  %708 = bitcast %Ts4Int8V* %56 to %swift.opaque*
  %709 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %707, %swift.opaque* noalias nocapture %708, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %682, i8** %709, %swift.type* swiftself @"$sSiN")
  %710 = bitcast %Ts4Int8V* %56 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %710)
  %._value55 = getelementptr inbounds %TSi, %TSi* %55, i32 0, i32 0
  %711 = load i64, i64* %._value55, align 8
  %712 = icmp eq i64 %711, 0
  %713 = call %TSi* @"$sSiWOh"(%TSi* %55)
  %714 = bitcast %TSi* %55 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %714)
  br label %689

715:                                              ; preds = %675
  %716 = bitcast %Ts4Int8V* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %716)
  %._value46 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %47, i32 0, i32 0
  store i8 %660, i8* %._value46, align 1
  %717 = bitcast %Ts4Int8V* %47 to %swift.opaque*
  %718 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %677, %swift.opaque* noalias nocapture swiftself %717)
  %719 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %47)
  %720 = bitcast %TSi* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %720)
  %._value47 = getelementptr inbounds %TSi, %TSi* %48, i32 0, i32 0
  store i64 0, i64* %._value47, align 8
  %721 = bitcast %TSi* %48 to %swift.opaque*
  %722 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %682, %swift.opaque* noalias nocapture swiftself %721)
  %723 = call %TSi* @"$sSiWOh"(%TSi* %48)
  %724 = icmp slt i64 %722, %718
  %725 = bitcast %TSi* %48 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %725)
  %726 = bitcast %Ts4Int8V* %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %726)
  br i1 %724, label %727, label %738

727:                                              ; preds = %715
  %728 = bitcast %Ts4Int8V* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %728)
  %729 = bitcast %TSi* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %729)
  %._value52 = getelementptr inbounds %TSi, %TSi* %54, i32 0, i32 0
  store i64 0, i64* %._value52, align 8
  %730 = bitcast %Ts4Int8V* %53 to %swift.opaque*
  %731 = bitcast %TSi* %54 to %swift.opaque*
  %732 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %730, %swift.opaque* noalias nocapture %731, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %677, i8** %732, %swift.type* swiftself @"$ss4Int8VN")
  %733 = bitcast %TSi* %54 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %733)
  %._value53 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %53, i32 0, i32 0
  %734 = load i8, i8* %._value53, align 1
  %735 = icmp eq i8 %660, %734
  %736 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %53)
  %737 = bitcast %Ts4Int8V* %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %737)
  br label %689

738:                                              ; preds = %715
  %739 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %207, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %739, label %740, label %751

740:                                              ; preds = %738
  %741 = bitcast %TSi* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %741)
  %742 = bitcast %Ts4Int8V* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %742)
  %._value50 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %52, i32 0, i32 0
  store i8 %660, i8* %._value50, align 1
  %743 = bitcast %TSi* %51 to %swift.opaque*
  %744 = bitcast %Ts4Int8V* %52 to %swift.opaque*
  %745 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %743, %swift.opaque* noalias nocapture %744, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %682, i8** %745, %swift.type* swiftself @"$sSiN")
  %746 = bitcast %Ts4Int8V* %52 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %746)
  %._value51 = getelementptr inbounds %TSi, %TSi* %51, i32 0, i32 0
  %747 = load i64, i64* %._value51, align 8
  %748 = icmp eq i64 %747, 0
  %749 = call %TSi* @"$sSiWOh"(%TSi* %51)
  %750 = bitcast %TSi* %51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %750)
  br label %689

751:                                              ; preds = %738
  %752 = bitcast %Ts4Int8V* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %752)
  %753 = bitcast %TSi* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %753)
  %._value48 = getelementptr inbounds %TSi, %TSi* %50, i32 0, i32 0
  store i64 0, i64* %._value48, align 8
  %754 = bitcast %Ts4Int8V* %49 to %swift.opaque*
  %755 = bitcast %TSi* %50 to %swift.opaque*
  %756 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %754, %swift.opaque* noalias nocapture %755, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %677, i8** %756, %swift.type* swiftself @"$ss4Int8VN")
  %757 = bitcast %TSi* %50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %757)
  %._value49 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %49, i32 0, i32 0
  %758 = load i8, i8* %._value49, align 1
  %759 = icmp eq i8 %660, %758
  %760 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %49)
  %761 = bitcast %Ts4Int8V* %49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %761)
  br label %689
}

define internal swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %4 to %14*
  %7 = call %14* bitcast (void ()* @objc_msgSend to %14* (%14*, i8*, i8*)*)(%14* %6, i8* %5, i8* %0)
  %8 = bitcast %14* %7 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  ret %T7_XCTestyycfU6_13ErrorTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU7_"() #0 {
entry:
  %testRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %testRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %testRun.debug16 = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %testRun.debug16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %34 = alloca %TSi, align 8
  %35 = alloca %Ts4Int8V, align 1
  %36 = alloca %Ts4Int8V, align 1
  %37 = alloca %TSi, align 8
  %38 = alloca %TSi, align 8
  %39 = alloca %Ts4Int8V, align 1
  %40 = alloca %TSi, align 8
  %41 = alloca %Ts4Int8V, align 1
  %42 = alloca %Ts4Int8V, align 1
  %43 = alloca %TSi, align 8
  %44 = alloca %TSi, align 8
  %45 = alloca %Ts4Int8V, align 1
  %46 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %47 = extractvalue %swift.metadata_response %46, 0
  %48 = bitcast %swift.type* %47 to i8***
  %49 = getelementptr inbounds i8**, i8*** %48, i64 -1
  %.valueWitnesses = load i8**, i8*** %49, align 8, !invariant.load !178, !dereferenceable !179
  %50 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %51 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %50, i32 0, i32 8
  %size = load i64, i64* %51, align 8, !invariant.load !178
  %52 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %52)
  %53 = bitcast i8* %52 to %swift.opaque*
  %54 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa"(i64 0) #6
  %55 = extractvalue %swift.metadata_response %54, 0
  %56 = load i8*, i8** @"\01L_selector(test_withThrowing)", align 8
  %57 = call swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %56, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* %57)
  call swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvs"(i1 false, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %57)
  %58 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %57 to %TSo6XCTestC*
  %59 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %58)
  %60 = extractvalue { i8*, %swift.refcounted* } %59, 0
  %61 = extractvalue { i8*, %swift.refcounted* } %59, 1
  %62 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %61) #3
  %63 = bitcast %swift.refcounted* %61 to %swift.opaque*
  %64 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %64, i8* %60, %swift.opaque* %63)
  call void @swift_release(%swift.refcounted* %61) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %64) #3
  call void @swift_release(%swift.refcounted* %61) #3
  %65 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %57 to i8*
  %66 = call i8* @llvm.objc.retain(i8* %65)
  %67 = bitcast i8* %66 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %68 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %57 to %TSo6XCTestC*
  %69 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %70 = bitcast %TSo6XCTestC* %68 to %5*
  %71 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %70, i8* %69)
  %72 = bitcast %6* %71 to i8*
  %73 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %72)
  %74 = bitcast i8* %73 to %6*
  %75 = ptrtoint %6* %74 to i64
  %76 = bitcast %TSo6XCTestC* %68 to i8*
  call void @llvm.objc.release(i8* %76)
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %entry
  %79 = inttoptr i64 %75 to %TSo9XCTestRunC*
  br label %87

80:                                               ; preds = %entry
  br label %81

81:                                               ; preds = %80
  br label %82

82:                                               ; preds = %81
  br label %83

83:                                               ; preds = %82
  br label %84

84:                                               ; preds = %83
  br label %85

85:                                               ; preds = %84
  br label %86

86:                                               ; preds = %85
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 396, i32 1)
  unreachable

87:                                               ; preds = %78
  %88 = phi %TSo9XCTestRunC* [ %79, %78 ]
  store %TSo9XCTestRunC* %88, %TSo9XCTestRunC** %testRun.debug, align 8
  %89 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %90 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %91 = bitcast %TSo9XCTestRunC* %88 to %6*
  %92 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %91, i8* %90)
  %93 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %92, i64* %._value1, align 8
  %94 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %95 = extractvalue { i64, %swift.bridge* } %94, 0
  %96 = extractvalue { i64, %swift.bridge* } %94, 1
  %97 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %98 = extractvalue { i8*, %swift.refcounted* } %97, 0
  %99 = extractvalue { i8*, %swift.refcounted* } %97, 1
  %100 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %99) #3
  %101 = bitcast %swift.refcounted* %99 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %102 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %103 = bitcast %TSi* %1 to %swift.opaque*
  %104 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %103, %swift.opaque* noalias nocapture %104, i8* %98, %swift.opaque* %101, %swift.opaque* noalias nocapture %53, i1 %102, i64 %95, %swift.bridge* %96, i64 398, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %99) #3
  %105 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %106 = load i8*, i8** %105, align 8, !invariant.load !178
  %destroy = bitcast i8* %106 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %99) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %96) #3
  %107 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107)
  %108 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108)
  %109 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %110 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %111 = bitcast %TSo9XCTestRunC* %88 to %6*
  %112 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %111, i8* %110)
  %113 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %112, i64* %._value3, align 8
  %114 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %115 = extractvalue { i64, %swift.bridge* } %114, 0
  %116 = extractvalue { i64, %swift.bridge* } %114, 1
  %117 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %118 = extractvalue { i8*, %swift.refcounted* } %117, 0
  %119 = extractvalue { i8*, %swift.refcounted* } %117, 1
  %120 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %119) #3
  %121 = bitcast %swift.refcounted* %119 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %122 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %123 = bitcast %TSi* %3 to %swift.opaque*
  %124 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %123, %swift.opaque* noalias nocapture %124, i8* %118, %swift.opaque* %121, %swift.opaque* noalias nocapture %53, i1 %122, i64 %115, %swift.bridge* %116, i64 399, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %119) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %119) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %116) #3
  %125 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125)
  %126 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126)
  %127 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %128 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %129 = bitcast %TSo9XCTestRunC* %88 to %6*
  %130 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %129, i8* %128)
  %131 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %131)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %130, i64* %._value5, align 8
  %132 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %133 = extractvalue { i64, %swift.bridge* } %132, 0
  %134 = extractvalue { i64, %swift.bridge* } %132, 1
  %135 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %136 = extractvalue { i8*, %swift.refcounted* } %135, 0
  %137 = extractvalue { i8*, %swift.refcounted* } %135, 1
  %138 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %137) #3
  %139 = bitcast %swift.refcounted* %137 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %140 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %141 = bitcast %TSi* %5 to %swift.opaque*
  %142 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %141, %swift.opaque* noalias nocapture %142, i8* %136, %swift.opaque* %139, %swift.opaque* noalias nocapture %53, i1 %140, i64 %133, %swift.bridge* %134, i64 400, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %137) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %137) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %134) #3
  %143 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143)
  %144 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144)
  %145 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %146 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %147 = bitcast %TSo9XCTestRunC* %88 to %6*
  %148 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %147, i8* %146)
  %149 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %149)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %148, i64* %._value7, align 8
  %150 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %151 = extractvalue { i64, %swift.bridge* } %150, 0
  %152 = extractvalue { i64, %swift.bridge* } %150, 1
  %153 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %154 = extractvalue { i8*, %swift.refcounted* } %153, 0
  %155 = extractvalue { i8*, %swift.refcounted* } %153, 1
  %156 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %155) #3
  %157 = bitcast %swift.refcounted* %155 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %158 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %159 = bitcast %TSi* %7 to %swift.opaque*
  %160 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %159, %swift.opaque* noalias nocapture %160, i8* %154, %swift.opaque* %157, %swift.opaque* noalias nocapture %53, i1 %158, i64 %151, %swift.bridge* %152, i64 401, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %155) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %155) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %152) #3
  %161 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161)
  %162 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162)
  %163 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %164 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %165 = bitcast %TSo9XCTestRunC* %88 to %6*
  %166 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %165, i8* %164)
  %167 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %166, i64* %._value9, align 8
  %168 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %169 = extractvalue { i64, %swift.bridge* } %168, 0
  %170 = extractvalue { i64, %swift.bridge* } %168, 1
  %171 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %172 = extractvalue { i8*, %swift.refcounted* } %171, 0
  %173 = extractvalue { i8*, %swift.refcounted* } %171, 1
  %174 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %173) #3
  %175 = bitcast %swift.refcounted* %173 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %176 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %177 = bitcast %TSi* %9 to %swift.opaque*
  %178 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %177, %swift.opaque* noalias nocapture %178, i8* %172, %swift.opaque* %175, %swift.opaque* noalias nocapture %53, i1 %176, i64 %169, %swift.bridge* %170, i64 402, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %173) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %173) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %170) #3
  %179 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %179)
  %180 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180)
  %181 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %182 = bitcast %TSo9XCTestRunC* %88 to %6*
  %183 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %182, i8* %181)
  %184 = call i8** @"$ss4Int8VABSZsWl"() #6
  %185 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %185, label %186, label %188

186:                                              ; preds = %87
  %187 = icmp slt i8 %183, 0
  br label %189

188:                                              ; preds = %87
  br label %189

189:                                              ; preds = %186, %188
  %190 = phi i1 [ false, %188 ], [ %187, %186 ]
  %191 = call i8** @"$sS2iSZsWl"() #6
  %192 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  br label %195

194:                                              ; preds = %189
  br label %195

195:                                              ; preds = %193, %194
  %196 = phi i1 [ false, %194 ], [ false, %193 ]
  %197 = icmp eq i1 %190, %196
  %198 = xor i1 %197, true
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  br label %214

200:                                              ; preds = %195
  %201 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %201)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %183, i8* %._value10, align 1
  %202 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %203 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %204 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %203)
  %205 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %206 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %207 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %208 = bitcast %TSi* %12 to %swift.opaque*
  %209 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %208)
  %210 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %211 = icmp slt i64 %204, %209
  %212 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %212)
  %213 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %213)
  br i1 %211, label %252, label %263

214:                                              ; preds = %199, %252, %275, %288, %299
  %215 = phi i1 [ %307, %299 ], [ %296, %288 ], [ %283, %275 ], [ %260, %252 ], [ false, %199 ]
  %216 = xor i1 %215, true
  %217 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %218 = extractvalue { i64, %swift.bridge* } %217, 0
  %219 = extractvalue { i64, %swift.bridge* } %217, 1
  %220 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %221 = extractvalue { i8*, %swift.refcounted* } %220, 0
  %222 = extractvalue { i8*, %swift.refcounted* } %220, 1
  %223 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %222) #3
  %224 = bitcast %swift.refcounted* %222 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %225 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %216, i8* %221, %swift.opaque* %224, %swift.opaque* noalias nocapture %53, i1 %225, i64 %218, %swift.bridge* %219, i64 403)
  call void @swift_release(%swift.refcounted* %222) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %222) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %219) #3
  %226 = bitcast %TSo9XCTestRunC* %88 to i8*
  call void @llvm.objc.release(i8* %226)
  %227 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %57 to i8*
  call void @llvm.objc.release(i8* %227)
  %228 = load i8*, i8** @"\01L_selector(test_withThrowing)", align 8
  %229 = call swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %228, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* %229)
  %230 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %229 to %TSo6XCTestC*
  %231 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %230)
  %232 = extractvalue { i8*, %swift.refcounted* } %231, 0
  %233 = extractvalue { i8*, %swift.refcounted* } %231, 1
  %234 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %233) #3
  %235 = bitcast %swift.refcounted* %233 to %swift.opaque*
  %236 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %236, i8* %232, %swift.opaque* %235)
  call void @swift_release(%swift.refcounted* %233) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %236) #3
  call void @swift_release(%swift.refcounted* %233) #3
  %237 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %229 to i8*
  %238 = call i8* @llvm.objc.retain(i8* %237)
  %239 = bitcast i8* %238 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %240 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %229 to %TSo6XCTestC*
  %241 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %242 = bitcast %TSo6XCTestC* %240 to %5*
  %243 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %242, i8* %241)
  %244 = bitcast %6* %243 to i8*
  %245 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %244)
  %246 = bitcast i8* %245 to %6*
  %247 = ptrtoint %6* %246 to i64
  %248 = bitcast %TSo6XCTestC* %240 to i8*
  call void @llvm.objc.release(i8* %248)
  %249 = icmp eq i64 %247, 0
  br i1 %249, label %310, label %250

250:                                              ; preds = %214
  %251 = inttoptr i64 %247 to %TSo9XCTestRunC*
  br label %317

252:                                              ; preds = %200
  %253 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %253)
  %254 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %254)
  %._value43 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %45, i32 0, i32 0
  store i8 %183, i8* %._value43, align 1
  %255 = bitcast %TSi* %44 to %swift.opaque*
  %256 = bitcast %Ts4Int8V* %45 to %swift.opaque*
  %257 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %255, %swift.opaque* noalias nocapture %256, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %257, %swift.type* swiftself @"$sSiN")
  %258 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %258)
  %._value44 = getelementptr inbounds %TSi, %TSi* %44, i32 0, i32 0
  %259 = load i64, i64* %._value44, align 8
  %260 = icmp eq i64 %259, 0
  %261 = call %TSi* @"$sSiWOh"(%TSi* %44)
  %262 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262)
  br label %214

263:                                              ; preds = %200
  %264 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %264)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %183, i8* %._value12, align 1
  %265 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %266 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %265)
  %267 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %268 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %268)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %269 = bitcast %TSi* %14 to %swift.opaque*
  %270 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %269)
  %271 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %272 = icmp slt i64 %270, %266
  %273 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273)
  %274 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %274)
  br i1 %272, label %275, label %286

275:                                              ; preds = %263
  %276 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %276)
  %277 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %277)
  %._value41 = getelementptr inbounds %TSi, %TSi* %43, i32 0, i32 0
  store i64 0, i64* %._value41, align 8
  %278 = bitcast %Ts4Int8V* %42 to %swift.opaque*
  %279 = bitcast %TSi* %43 to %swift.opaque*
  %280 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %278, %swift.opaque* noalias nocapture %279, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %280, %swift.type* swiftself @"$ss4Int8VN")
  %281 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %281)
  %._value42 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %42, i32 0, i32 0
  %282 = load i8, i8* %._value42, align 1
  %283 = icmp eq i8 %183, %282
  %284 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %42)
  %285 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %285)
  br label %214

286:                                              ; preds = %263
  %287 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %287, label %288, label %299

288:                                              ; preds = %286
  %289 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %289)
  %290 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %290)
  %._value39 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %41, i32 0, i32 0
  store i8 %183, i8* %._value39, align 1
  %291 = bitcast %TSi* %40 to %swift.opaque*
  %292 = bitcast %Ts4Int8V* %41 to %swift.opaque*
  %293 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %291, %swift.opaque* noalias nocapture %292, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %293, %swift.type* swiftself @"$sSiN")
  %294 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %294)
  %._value40 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  %295 = load i64, i64* %._value40, align 8
  %296 = icmp eq i64 %295, 0
  %297 = call %TSi* @"$sSiWOh"(%TSi* %40)
  %298 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %298)
  br label %214

299:                                              ; preds = %286
  %300 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %300)
  %301 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %301)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %302 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %303 = bitcast %TSi* %16 to %swift.opaque*
  %304 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %302, %swift.opaque* noalias nocapture %303, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %304, %swift.type* swiftself @"$ss4Int8VN")
  %305 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %306 = load i8, i8* %._value15, align 1
  %307 = icmp eq i8 %183, %306
  %308 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %309 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %309)
  br label %214

310:                                              ; preds = %214
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312
  br label %314

314:                                              ; preds = %313
  br label %315

315:                                              ; preds = %314
  br label %316

316:                                              ; preds = %315
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 410, i32 1)
  unreachable

317:                                              ; preds = %250
  %318 = phi %TSo9XCTestRunC* [ %251, %250 ]
  store %TSo9XCTestRunC* %318, %TSo9XCTestRunC** %testRun.debug16, align 8
  %319 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %319)
  %._value17 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value17, align 8
  %320 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %321 = bitcast %TSo9XCTestRunC* %318 to %6*
  %322 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %321, i8* %320)
  %323 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %323)
  %._value18 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %322, i64* %._value18, align 8
  %324 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %325 = extractvalue { i64, %swift.bridge* } %324, 0
  %326 = extractvalue { i64, %swift.bridge* } %324, 1
  %327 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %328 = extractvalue { i8*, %swift.refcounted* } %327, 0
  %329 = extractvalue { i8*, %swift.refcounted* } %327, 1
  %330 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %329) #3
  %331 = bitcast %swift.refcounted* %329 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %332 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %333 = bitcast %TSi* %18 to %swift.opaque*
  %334 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %333, %swift.opaque* noalias nocapture %334, i8* %328, %swift.opaque* %331, %swift.opaque* noalias nocapture %53, i1 %332, i64 %325, %swift.bridge* %326, i64 412, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %329) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %329) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %326) #3
  %335 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %335)
  %336 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336)
  %337 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %337)
  %._value19 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value19, align 8
  %338 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %339 = bitcast %TSo9XCTestRunC* %318 to %6*
  %340 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %339, i8* %338)
  %341 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %341)
  %._value20 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %340, i64* %._value20, align 8
  %342 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %343 = extractvalue { i64, %swift.bridge* } %342, 0
  %344 = extractvalue { i64, %swift.bridge* } %342, 1
  %345 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %346 = extractvalue { i8*, %swift.refcounted* } %345, 0
  %347 = extractvalue { i8*, %swift.refcounted* } %345, 1
  %348 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %347) #3
  %349 = bitcast %swift.refcounted* %347 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %350 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %351 = bitcast %TSi* %20 to %swift.opaque*
  %352 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %351, %swift.opaque* noalias nocapture %352, i8* %346, %swift.opaque* %349, %swift.opaque* noalias nocapture %53, i1 %350, i64 %343, %swift.bridge* %344, i64 413, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %347) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %347) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %344) #3
  %353 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353)
  %354 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354)
  %355 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %355)
  %._value21 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 0, i64* %._value21, align 8
  %356 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %357 = bitcast %TSo9XCTestRunC* %318 to %6*
  %358 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %357, i8* %356)
  %359 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %359)
  %._value22 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %358, i64* %._value22, align 8
  %360 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %361 = extractvalue { i64, %swift.bridge* } %360, 0
  %362 = extractvalue { i64, %swift.bridge* } %360, 1
  %363 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %364 = extractvalue { i8*, %swift.refcounted* } %363, 0
  %365 = extractvalue { i8*, %swift.refcounted* } %363, 1
  %366 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %365) #3
  %367 = bitcast %swift.refcounted* %365 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %368 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %369 = bitcast %TSi* %22 to %swift.opaque*
  %370 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %369, %swift.opaque* noalias nocapture %370, i8* %364, %swift.opaque* %367, %swift.opaque* noalias nocapture %53, i1 %368, i64 %361, %swift.bridge* %362, i64 414, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %365) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %365) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %362) #3
  %371 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371)
  %372 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372)
  %373 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %373)
  %._value23 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 1, i64* %._value23, align 8
  %374 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %375 = bitcast %TSo9XCTestRunC* %318 to %6*
  %376 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %375, i8* %374)
  %377 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %377)
  %._value24 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %376, i64* %._value24, align 8
  %378 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %379 = extractvalue { i64, %swift.bridge* } %378, 0
  %380 = extractvalue { i64, %swift.bridge* } %378, 1
  %381 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %382 = extractvalue { i8*, %swift.refcounted* } %381, 0
  %383 = extractvalue { i8*, %swift.refcounted* } %381, 1
  %384 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %383) #3
  %385 = bitcast %swift.refcounted* %383 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %386 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %387 = bitcast %TSi* %24 to %swift.opaque*
  %388 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %387, %swift.opaque* noalias nocapture %388, i8* %382, %swift.opaque* %385, %swift.opaque* noalias nocapture %53, i1 %386, i64 %379, %swift.bridge* %380, i64 415, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %383) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %383) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %380) #3
  %389 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %389)
  %390 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %390)
  %391 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %391)
  %._value25 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value25, align 8
  %392 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %393 = bitcast %TSo9XCTestRunC* %318 to %6*
  %394 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %393, i8* %392)
  %395 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %395)
  %._value26 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %394, i64* %._value26, align 8
  %396 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %397 = extractvalue { i64, %swift.bridge* } %396, 0
  %398 = extractvalue { i64, %swift.bridge* } %396, 1
  %399 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %400 = extractvalue { i8*, %swift.refcounted* } %399, 0
  %401 = extractvalue { i8*, %swift.refcounted* } %399, 1
  %402 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %401) #3
  %403 = bitcast %swift.refcounted* %401 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %404 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %405 = bitcast %TSi* %26 to %swift.opaque*
  %406 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %405, %swift.opaque* noalias nocapture %406, i8* %400, %swift.opaque* %403, %swift.opaque* noalias nocapture %53, i1 %404, i64 %397, %swift.bridge* %398, i64 416, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %401) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %401) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %398) #3
  %407 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %407)
  %408 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %408)
  %409 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %410 = bitcast %TSo9XCTestRunC* %318 to %6*
  %411 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %410, i8* %409)
  %412 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %412, label %413, label %415

413:                                              ; preds = %317
  %414 = icmp slt i8 %411, 0
  br label %416

415:                                              ; preds = %317
  br label %416

416:                                              ; preds = %413, %415
  %417 = phi i1 [ false, %415 ], [ %414, %413 ]
  %418 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  br label %421

420:                                              ; preds = %416
  br label %421

421:                                              ; preds = %419, %420
  %422 = phi i1 [ false, %420 ], [ false, %419 ]
  %423 = icmp eq i1 %417, %422
  %424 = xor i1 %423, true
  br i1 %424, label %425, label %426

425:                                              ; preds = %421
  br label %440

426:                                              ; preds = %421
  %427 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %427)
  %._value27 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %411, i8* %._value27, align 1
  %428 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %429 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %430 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %428, %swift.opaque* noalias nocapture swiftself %429)
  %431 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %432 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %432)
  %._value28 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value28, align 8
  %433 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %434 = bitcast %TSi* %29 to %swift.opaque*
  %435 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %433, %swift.opaque* noalias nocapture swiftself %434)
  %436 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %437 = icmp slt i64 %430, %435
  %438 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %438)
  %439 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %439)
  br i1 %437, label %455, label %466

440:                                              ; preds = %425, %455, %478, %491, %502
  %441 = phi i1 [ %510, %502 ], [ %499, %491 ], [ %486, %478 ], [ %463, %455 ], [ false, %425 ]
  %442 = xor i1 %441, true
  %443 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %444 = extractvalue { i64, %swift.bridge* } %443, 0
  %445 = extractvalue { i64, %swift.bridge* } %443, 1
  %446 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %447 = extractvalue { i8*, %swift.refcounted* } %446, 0
  %448 = extractvalue { i8*, %swift.refcounted* } %446, 1
  %449 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %448) #3
  %450 = bitcast %swift.refcounted* %448 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %451 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %442, i8* %447, %swift.opaque* %450, %swift.opaque* noalias nocapture %53, i1 %451, i64 %444, %swift.bridge* %445, i64 417)
  call void @swift_release(%swift.refcounted* %448) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %448) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %445) #3
  %452 = bitcast %TSo9XCTestRunC* %318 to i8*
  call void @llvm.objc.release(i8* %452)
  %453 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %229 to i8*
  call void @llvm.objc.release(i8* %453)
  %454 = bitcast %swift.opaque* %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %454)
  ret void

455:                                              ; preds = %426
  %456 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %456)
  %457 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %457)
  %._value37 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %39, i32 0, i32 0
  store i8 %411, i8* %._value37, align 1
  %458 = bitcast %TSi* %38 to %swift.opaque*
  %459 = bitcast %Ts4Int8V* %39 to %swift.opaque*
  %460 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %458, %swift.opaque* noalias nocapture %459, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %433, i8** %460, %swift.type* swiftself @"$sSiN")
  %461 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %461)
  %._value38 = getelementptr inbounds %TSi, %TSi* %38, i32 0, i32 0
  %462 = load i64, i64* %._value38, align 8
  %463 = icmp eq i64 %462, 0
  %464 = call %TSi* @"$sSiWOh"(%TSi* %38)
  %465 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465)
  br label %440

466:                                              ; preds = %426
  %467 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %467)
  %._value29 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %411, i8* %._value29, align 1
  %468 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %469 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %428, %swift.opaque* noalias nocapture swiftself %468)
  %470 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %471 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %471)
  %._value30 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %472 = bitcast %TSi* %31 to %swift.opaque*
  %473 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %433, %swift.opaque* noalias nocapture swiftself %472)
  %474 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %475 = icmp slt i64 %473, %469
  %476 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476)
  %477 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %477)
  br i1 %475, label %478, label %489

478:                                              ; preds = %466
  %479 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %479)
  %480 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %480)
  %._value35 = getelementptr inbounds %TSi, %TSi* %37, i32 0, i32 0
  store i64 0, i64* %._value35, align 8
  %481 = bitcast %Ts4Int8V* %36 to %swift.opaque*
  %482 = bitcast %TSi* %37 to %swift.opaque*
  %483 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %481, %swift.opaque* noalias nocapture %482, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %428, i8** %483, %swift.type* swiftself @"$ss4Int8VN")
  %484 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484)
  %._value36 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %36, i32 0, i32 0
  %485 = load i8, i8* %._value36, align 1
  %486 = icmp eq i8 %411, %485
  %487 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %36)
  %488 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %488)
  br label %440

489:                                              ; preds = %466
  %490 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %490, label %491, label %502

491:                                              ; preds = %489
  %492 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %492)
  %493 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %493)
  %._value33 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %35, i32 0, i32 0
  store i8 %411, i8* %._value33, align 1
  %494 = bitcast %TSi* %34 to %swift.opaque*
  %495 = bitcast %Ts4Int8V* %35 to %swift.opaque*
  %496 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %494, %swift.opaque* noalias nocapture %495, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %433, i8** %496, %swift.type* swiftself @"$sSiN")
  %497 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %497)
  %._value34 = getelementptr inbounds %TSi, %TSi* %34, i32 0, i32 0
  %498 = load i64, i64* %._value34, align 8
  %499 = icmp eq i64 %498, 0
  %500 = call %TSi* @"$sSiWOh"(%TSi* %34)
  %501 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %501)
  br label %440

502:                                              ; preds = %489
  %503 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %503)
  %504 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %504)
  %._value31 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value31, align 8
  %505 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %506 = bitcast %TSi* %33 to %swift.opaque*
  %507 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %505, %swift.opaque* noalias nocapture %506, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %428, i8** %507, %swift.type* swiftself @"$ss4Int8VN")
  %508 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %508)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %509 = load i8, i8* %._value32, align 1
  %510 = icmp eq i8 %411, %509
  %511 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %512 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %512)
  br label %440
}

define internal swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %4 to %15*
  %7 = call %15* bitcast (void ()* @objc_msgSend to %15* (%15*, i8*, i8*)*)(%15* %6, i8* %5, i8* %0)
  %8 = bitcast %15* %7 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  ret %T7_XCTestyycfU7_13ErrorTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU8_"() #0 {
entry:
  %testRun.debug = alloca %TSo9XCTestRunC*, align 8
  %0 = bitcast %TSo9XCTestRunC** %testRun.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false)
  %1 = alloca %TSi, align 8
  %2 = alloca %TSi, align 8
  %3 = alloca %TSi, align 8
  %4 = alloca %TSi, align 8
  %5 = alloca %TSi, align 8
  %6 = alloca %TSi, align 8
  %7 = alloca %TSi, align 8
  %8 = alloca %TSi, align 8
  %9 = alloca %TSi, align 8
  %10 = alloca %TSi, align 8
  %11 = alloca %Ts4Int8V, align 1
  %12 = alloca %TSi, align 8
  %13 = alloca %Ts4Int8V, align 1
  %14 = alloca %TSi, align 8
  %15 = alloca %Ts4Int8V, align 1
  %16 = alloca %TSi, align 8
  %testRun.debug16 = alloca %TSo9XCTestRunC*, align 8
  %17 = bitcast %TSo9XCTestRunC** %testRun.debug16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false)
  %18 = alloca %TSi, align 8
  %19 = alloca %TSi, align 8
  %20 = alloca %TSi, align 8
  %21 = alloca %TSi, align 8
  %22 = alloca %TSi, align 8
  %23 = alloca %TSi, align 8
  %24 = alloca %TSi, align 8
  %25 = alloca %TSi, align 8
  %26 = alloca %TSi, align 8
  %27 = alloca %TSi, align 8
  %28 = alloca %Ts4Int8V, align 1
  %29 = alloca %TSi, align 8
  %30 = alloca %Ts4Int8V, align 1
  %31 = alloca %TSi, align 8
  %32 = alloca %Ts4Int8V, align 1
  %33 = alloca %TSi, align 8
  %34 = alloca %TSi, align 8
  %35 = alloca %Ts4Int8V, align 1
  %36 = alloca %Ts4Int8V, align 1
  %37 = alloca %TSi, align 8
  %38 = alloca %TSi, align 8
  %39 = alloca %Ts4Int8V, align 1
  %40 = alloca %TSi, align 8
  %41 = alloca %Ts4Int8V, align 1
  %42 = alloca %Ts4Int8V, align 1
  %43 = alloca %TSi, align 8
  %44 = alloca %TSi, align 8
  %45 = alloca %Ts4Int8V, align 1
  %46 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %47 = extractvalue %swift.metadata_response %46, 0
  %48 = bitcast %swift.type* %47 to i8***
  %49 = getelementptr inbounds i8**, i8*** %48, i64 -1
  %.valueWitnesses = load i8**, i8*** %49, align 8, !invariant.load !178, !dereferenceable !179
  %50 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %51 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %50, i32 0, i32 8
  %size = load i64, i64* %51, align 8, !invariant.load !178
  %52 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %52)
  %53 = bitcast i8* %52 to %swift.opaque*
  %54 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa"(i64 0) #6
  %55 = extractvalue %swift.metadata_response %54, 0
  %56 = load i8*, i8** @"\01L_selector(test_withThrowingAndReturnError:)", align 8
  %57 = call swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %56, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* %57)
  call swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvs"(i1 false, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %57)
  %58 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %57 to %TSo6XCTestC*
  %59 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %58)
  %60 = extractvalue { i8*, %swift.refcounted* } %59, 0
  %61 = extractvalue { i8*, %swift.refcounted* } %59, 1
  %62 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %61) #3
  %63 = bitcast %swift.refcounted* %61 to %swift.opaque*
  %64 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %64, i8* %60, %swift.opaque* %63)
  call void @swift_release(%swift.refcounted* %61) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %64) #3
  call void @swift_release(%swift.refcounted* %61) #3
  %65 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %57 to i8*
  %66 = call i8* @llvm.objc.retain(i8* %65)
  %67 = bitcast i8* %66 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %68 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %57 to %TSo6XCTestC*
  %69 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %70 = bitcast %TSo6XCTestC* %68 to %5*
  %71 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %70, i8* %69)
  %72 = bitcast %6* %71 to i8*
  %73 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %72)
  %74 = bitcast i8* %73 to %6*
  %75 = ptrtoint %6* %74 to i64
  %76 = bitcast %TSo6XCTestC* %68 to i8*
  call void @llvm.objc.release(i8* %76)
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %entry
  %79 = inttoptr i64 %75 to %TSo9XCTestRunC*
  br label %87

80:                                               ; preds = %entry
  br label %81

81:                                               ; preds = %80
  br label %82

82:                                               ; preds = %81
  br label %83

83:                                               ; preds = %82
  br label %84

84:                                               ; preds = %83
  br label %85

85:                                               ; preds = %84
  br label %86

86:                                               ; preds = %85
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 442, i32 1)
  unreachable

87:                                               ; preds = %78
  %88 = phi %TSo9XCTestRunC* [ %79, %78 ]
  store %TSo9XCTestRunC* %88, %TSo9XCTestRunC** %testRun.debug, align 8
  %89 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89)
  %._value = getelementptr inbounds %TSi, %TSi* %1, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %90 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %91 = bitcast %TSo9XCTestRunC* %88 to %6*
  %92 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %91, i8* %90)
  %93 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93)
  %._value1 = getelementptr inbounds %TSi, %TSi* %2, i32 0, i32 0
  store i64 %92, i64* %._value1, align 8
  %94 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %95 = extractvalue { i64, %swift.bridge* } %94, 0
  %96 = extractvalue { i64, %swift.bridge* } %94, 1
  %97 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %98 = extractvalue { i8*, %swift.refcounted* } %97, 0
  %99 = extractvalue { i8*, %swift.refcounted* } %97, 1
  %100 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %99) #3
  %101 = bitcast %swift.refcounted* %99 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %102 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %103 = bitcast %TSi* %1 to %swift.opaque*
  %104 = bitcast %TSi* %2 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %103, %swift.opaque* noalias nocapture %104, i8* %98, %swift.opaque* %101, %swift.opaque* noalias nocapture %53, i1 %102, i64 %95, %swift.bridge* %96, i64 444, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %99) #3
  %105 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %106 = load i8*, i8** %105, align 8, !invariant.load !178
  %destroy = bitcast i8* %106 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %99) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %96) #3
  %107 = bitcast %TSi* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107)
  %108 = bitcast %TSi* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108)
  %109 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109)
  %._value2 = getelementptr inbounds %TSi, %TSi* %3, i32 0, i32 0
  store i64 1, i64* %._value2, align 8
  %110 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %111 = bitcast %TSo9XCTestRunC* %88 to %6*
  %112 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %111, i8* %110)
  %113 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113)
  %._value3 = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 %112, i64* %._value3, align 8
  %114 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %115 = extractvalue { i64, %swift.bridge* } %114, 0
  %116 = extractvalue { i64, %swift.bridge* } %114, 1
  %117 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %118 = extractvalue { i8*, %swift.refcounted* } %117, 0
  %119 = extractvalue { i8*, %swift.refcounted* } %117, 1
  %120 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %119) #3
  %121 = bitcast %swift.refcounted* %119 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %122 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %123 = bitcast %TSi* %3 to %swift.opaque*
  %124 = bitcast %TSi* %4 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %123, %swift.opaque* noalias nocapture %124, i8* %118, %swift.opaque* %121, %swift.opaque* noalias nocapture %53, i1 %122, i64 %115, %swift.bridge* %116, i64 445, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %119) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %119) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %116) #3
  %125 = bitcast %TSi* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125)
  %126 = bitcast %TSi* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126)
  %127 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127)
  %._value4 = getelementptr inbounds %TSi, %TSi* %5, i32 0, i32 0
  store i64 0, i64* %._value4, align 8
  %128 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %129 = bitcast %TSo9XCTestRunC* %88 to %6*
  %130 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %129, i8* %128)
  %131 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %131)
  %._value5 = getelementptr inbounds %TSi, %TSi* %6, i32 0, i32 0
  store i64 %130, i64* %._value5, align 8
  %132 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %133 = extractvalue { i64, %swift.bridge* } %132, 0
  %134 = extractvalue { i64, %swift.bridge* } %132, 1
  %135 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %136 = extractvalue { i8*, %swift.refcounted* } %135, 0
  %137 = extractvalue { i8*, %swift.refcounted* } %135, 1
  %138 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %137) #3
  %139 = bitcast %swift.refcounted* %137 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %140 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %141 = bitcast %TSi* %5 to %swift.opaque*
  %142 = bitcast %TSi* %6 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %141, %swift.opaque* noalias nocapture %142, i8* %136, %swift.opaque* %139, %swift.opaque* noalias nocapture %53, i1 %140, i64 %133, %swift.bridge* %134, i64 446, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %137) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %137) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %134) #3
  %143 = bitcast %TSi* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143)
  %144 = bitcast %TSi* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144)
  %145 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145)
  %._value6 = getelementptr inbounds %TSi, %TSi* %7, i32 0, i32 0
  store i64 0, i64* %._value6, align 8
  %146 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %147 = bitcast %TSo9XCTestRunC* %88 to %6*
  %148 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %147, i8* %146)
  %149 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %149)
  %._value7 = getelementptr inbounds %TSi, %TSi* %8, i32 0, i32 0
  store i64 %148, i64* %._value7, align 8
  %150 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %151 = extractvalue { i64, %swift.bridge* } %150, 0
  %152 = extractvalue { i64, %swift.bridge* } %150, 1
  %153 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %154 = extractvalue { i8*, %swift.refcounted* } %153, 0
  %155 = extractvalue { i8*, %swift.refcounted* } %153, 1
  %156 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %155) #3
  %157 = bitcast %swift.refcounted* %155 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %158 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %159 = bitcast %TSi* %7 to %swift.opaque*
  %160 = bitcast %TSi* %8 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %159, %swift.opaque* noalias nocapture %160, i8* %154, %swift.opaque* %157, %swift.opaque* noalias nocapture %53, i1 %158, i64 %151, %swift.bridge* %152, i64 447, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %155) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %155) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %152) #3
  %161 = bitcast %TSi* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161)
  %162 = bitcast %TSi* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162)
  %163 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163)
  %._value8 = getelementptr inbounds %TSi, %TSi* %9, i32 0, i32 0
  store i64 0, i64* %._value8, align 8
  %164 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %165 = bitcast %TSo9XCTestRunC* %88 to %6*
  %166 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %165, i8* %164)
  %167 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167)
  %._value9 = getelementptr inbounds %TSi, %TSi* %10, i32 0, i32 0
  store i64 %166, i64* %._value9, align 8
  %168 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %169 = extractvalue { i64, %swift.bridge* } %168, 0
  %170 = extractvalue { i64, %swift.bridge* } %168, 1
  %171 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %172 = extractvalue { i8*, %swift.refcounted* } %171, 0
  %173 = extractvalue { i8*, %swift.refcounted* } %171, 1
  %174 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %173) #3
  %175 = bitcast %swift.refcounted* %173 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %176 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %177 = bitcast %TSi* %9 to %swift.opaque*
  %178 = bitcast %TSi* %10 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %177, %swift.opaque* noalias nocapture %178, i8* %172, %swift.opaque* %175, %swift.opaque* noalias nocapture %53, i1 %176, i64 %169, %swift.bridge* %170, i64 448, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %173) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %173) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %170) #3
  %179 = bitcast %TSi* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %179)
  %180 = bitcast %TSi* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180)
  %181 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %182 = bitcast %TSo9XCTestRunC* %88 to %6*
  %183 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %182, i8* %181)
  %184 = call i8** @"$ss4Int8VABSZsWl"() #6
  %185 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %185, label %186, label %188

186:                                              ; preds = %87
  %187 = icmp slt i8 %183, 0
  br label %189

188:                                              ; preds = %87
  br label %189

189:                                              ; preds = %186, %188
  %190 = phi i1 [ false, %188 ], [ %187, %186 ]
  %191 = call i8** @"$sS2iSZsWl"() #6
  %192 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %192, label %193, label %194

193:                                              ; preds = %189
  br label %195

194:                                              ; preds = %189
  br label %195

195:                                              ; preds = %193, %194
  %196 = phi i1 [ false, %194 ], [ false, %193 ]
  %197 = icmp eq i1 %190, %196
  %198 = xor i1 %197, true
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  br label %214

200:                                              ; preds = %195
  %201 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %201)
  %._value10 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %11, i32 0, i32 0
  store i8 %183, i8* %._value10, align 1
  %202 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %203 = bitcast %Ts4Int8V* %11 to %swift.opaque*
  %204 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %203)
  %205 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %11)
  %206 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206)
  %._value11 = getelementptr inbounds %TSi, %TSi* %12, i32 0, i32 0
  store i64 0, i64* %._value11, align 8
  %207 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %208 = bitcast %TSi* %12 to %swift.opaque*
  %209 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %208)
  %210 = call %TSi* @"$sSiWOh"(%TSi* %12)
  %211 = icmp slt i64 %204, %209
  %212 = bitcast %TSi* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %212)
  %213 = bitcast %Ts4Int8V* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %213)
  br i1 %211, label %252, label %263

214:                                              ; preds = %199, %252, %275, %288, %299
  %215 = phi i1 [ %307, %299 ], [ %296, %288 ], [ %283, %275 ], [ %260, %252 ], [ false, %199 ]
  %216 = xor i1 %215, true
  %217 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %218 = extractvalue { i64, %swift.bridge* } %217, 0
  %219 = extractvalue { i64, %swift.bridge* } %217, 1
  %220 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %221 = extractvalue { i8*, %swift.refcounted* } %220, 0
  %222 = extractvalue { i8*, %swift.refcounted* } %220, 1
  %223 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %222) #3
  %224 = bitcast %swift.refcounted* %222 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %225 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %216, i8* %221, %swift.opaque* %224, %swift.opaque* noalias nocapture %53, i1 %225, i64 %218, %swift.bridge* %219, i64 449)
  call void @swift_release(%swift.refcounted* %222) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %222) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %219) #3
  %226 = bitcast %TSo9XCTestRunC* %88 to i8*
  call void @llvm.objc.release(i8* %226)
  %227 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %57 to i8*
  call void @llvm.objc.release(i8* %227)
  %228 = load i8*, i8** @"\01L_selector(test_withThrowingAndReturnError:)", align 8
  %229 = call swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8* %228, %swift.type* swiftself %55)
  call void asm sideeffect "", "r"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* %229)
  %230 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %229 to %TSo6XCTestC*
  %231 = call swiftcc { i8*, %swift.refcounted* } @"$sSo6XCTestC3runyyFTcTO"(%TSo6XCTestC* %230)
  %232 = extractvalue { i8*, %swift.refcounted* } %231, 0
  %233 = extractvalue { i8*, %swift.refcounted* } %231, 1
  %234 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %233) #3
  %235 = bitcast %swift.refcounted* %233 to %swift.opaque*
  %236 = call swiftcc %swift.bridge* @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtFfA_"()
  call swiftcc void @"$s7_XCTest7execute9observers_ySaySo0A11Observation_pG_yyXEtF"(%swift.bridge* %236, i8* %232, %swift.opaque* %235)
  call void @swift_release(%swift.refcounted* %233) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %236) #3
  call void @swift_release(%swift.refcounted* %233) #3
  %237 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %229 to i8*
  %238 = call i8* @llvm.objc.retain(i8* %237)
  %239 = bitcast i8* %238 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %240 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %229 to %TSo6XCTestC*
  %241 = load i8*, i8** @"\01L_selector(testRun)", align 8
  %242 = bitcast %TSo6XCTestC* %240 to %5*
  %243 = call %6* bitcast (void ()* @objc_msgSend to %6* (%5*, i8*)*)(%5* %242, i8* %241)
  %244 = bitcast %6* %243 to i8*
  %245 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %244)
  %246 = bitcast i8* %245 to %6*
  %247 = ptrtoint %6* %246 to i64
  %248 = bitcast %TSo6XCTestC* %240 to i8*
  call void @llvm.objc.release(i8* %248)
  %249 = icmp eq i64 %247, 0
  br i1 %249, label %310, label %250

250:                                              ; preds = %214
  %251 = inttoptr i64 %247 to %TSo9XCTestRunC*
  br label %317

252:                                              ; preds = %200
  %253 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %253)
  %254 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %254)
  %._value43 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %45, i32 0, i32 0
  store i8 %183, i8* %._value43, align 1
  %255 = bitcast %TSi* %44 to %swift.opaque*
  %256 = bitcast %Ts4Int8V* %45 to %swift.opaque*
  %257 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %255, %swift.opaque* noalias nocapture %256, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %257, %swift.type* swiftself @"$sSiN")
  %258 = bitcast %Ts4Int8V* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %258)
  %._value44 = getelementptr inbounds %TSi, %TSi* %44, i32 0, i32 0
  %259 = load i64, i64* %._value44, align 8
  %260 = icmp eq i64 %259, 0
  %261 = call %TSi* @"$sSiWOh"(%TSi* %44)
  %262 = bitcast %TSi* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262)
  br label %214

263:                                              ; preds = %200
  %264 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %264)
  %._value12 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %13, i32 0, i32 0
  store i8 %183, i8* %._value12, align 1
  %265 = bitcast %Ts4Int8V* %13 to %swift.opaque*
  %266 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %202, %swift.opaque* noalias nocapture swiftself %265)
  %267 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %13)
  %268 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %268)
  %._value13 = getelementptr inbounds %TSi, %TSi* %14, i32 0, i32 0
  store i64 0, i64* %._value13, align 8
  %269 = bitcast %TSi* %14 to %swift.opaque*
  %270 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %207, %swift.opaque* noalias nocapture swiftself %269)
  %271 = call %TSi* @"$sSiWOh"(%TSi* %14)
  %272 = icmp slt i64 %270, %266
  %273 = bitcast %TSi* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273)
  %274 = bitcast %Ts4Int8V* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %274)
  br i1 %272, label %275, label %286

275:                                              ; preds = %263
  %276 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %276)
  %277 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %277)
  %._value41 = getelementptr inbounds %TSi, %TSi* %43, i32 0, i32 0
  store i64 0, i64* %._value41, align 8
  %278 = bitcast %Ts4Int8V* %42 to %swift.opaque*
  %279 = bitcast %TSi* %43 to %swift.opaque*
  %280 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %278, %swift.opaque* noalias nocapture %279, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %280, %swift.type* swiftself @"$ss4Int8VN")
  %281 = bitcast %TSi* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %281)
  %._value42 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %42, i32 0, i32 0
  %282 = load i8, i8* %._value42, align 1
  %283 = icmp eq i8 %183, %282
  %284 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %42)
  %285 = bitcast %Ts4Int8V* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %285)
  br label %214

286:                                              ; preds = %263
  %287 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %287, label %288, label %299

288:                                              ; preds = %286
  %289 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %289)
  %290 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %290)
  %._value39 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %41, i32 0, i32 0
  store i8 %183, i8* %._value39, align 1
  %291 = bitcast %TSi* %40 to %swift.opaque*
  %292 = bitcast %Ts4Int8V* %41 to %swift.opaque*
  %293 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %291, %swift.opaque* noalias nocapture %292, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %207, i8** %293, %swift.type* swiftself @"$sSiN")
  %294 = bitcast %Ts4Int8V* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %294)
  %._value40 = getelementptr inbounds %TSi, %TSi* %40, i32 0, i32 0
  %295 = load i64, i64* %._value40, align 8
  %296 = icmp eq i64 %295, 0
  %297 = call %TSi* @"$sSiWOh"(%TSi* %40)
  %298 = bitcast %TSi* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %298)
  br label %214

299:                                              ; preds = %286
  %300 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %300)
  %301 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %301)
  %._value14 = getelementptr inbounds %TSi, %TSi* %16, i32 0, i32 0
  store i64 0, i64* %._value14, align 8
  %302 = bitcast %Ts4Int8V* %15 to %swift.opaque*
  %303 = bitcast %TSi* %16 to %swift.opaque*
  %304 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %302, %swift.opaque* noalias nocapture %303, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %202, i8** %304, %swift.type* swiftself @"$ss4Int8VN")
  %305 = bitcast %TSi* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305)
  %._value15 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %15, i32 0, i32 0
  %306 = load i8, i8* %._value15, align 1
  %307 = icmp eq i8 %183, %306
  %308 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %15)
  %309 = bitcast %Ts4Int8V* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %309)
  br label %214

310:                                              ; preds = %214
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312
  br label %314

314:                                              ; preds = %313
  br label %315

315:                                              ; preds = %314
  br label %316

316:                                              ; preds = %315
  call swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64 ptrtoint ([12 x i8]* @70 to i64), i64 11, i8 2, i64 ptrtoint ([58 x i8]* @69 to i64), i64 57, i8 2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 456, i32 1)
  unreachable

317:                                              ; preds = %250
  %318 = phi %TSo9XCTestRunC* [ %251, %250 ]
  store %TSo9XCTestRunC* %318, %TSo9XCTestRunC** %testRun.debug16, align 8
  %319 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %319)
  %._value17 = getelementptr inbounds %TSi, %TSi* %18, i32 0, i32 0
  store i64 1, i64* %._value17, align 8
  %320 = load i8*, i8** @"\01L_selector(testCaseCount)", align 8
  %321 = bitcast %TSo9XCTestRunC* %318 to %6*
  %322 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %321, i8* %320)
  %323 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %323)
  %._value18 = getelementptr inbounds %TSi, %TSi* %19, i32 0, i32 0
  store i64 %322, i64* %._value18, align 8
  %324 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %325 = extractvalue { i64, %swift.bridge* } %324, 0
  %326 = extractvalue { i64, %swift.bridge* } %324, 1
  %327 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %328 = extractvalue { i8*, %swift.refcounted* } %327, 0
  %329 = extractvalue { i8*, %swift.refcounted* } %327, 1
  %330 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %329) #3
  %331 = bitcast %swift.refcounted* %329 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %332 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %333 = bitcast %TSi* %18 to %swift.opaque*
  %334 = bitcast %TSi* %19 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %333, %swift.opaque* noalias nocapture %334, i8* %328, %swift.opaque* %331, %swift.opaque* noalias nocapture %53, i1 %332, i64 %325, %swift.bridge* %326, i64 458, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %329) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %329) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %326) #3
  %335 = bitcast %TSi* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %335)
  %336 = bitcast %TSi* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336)
  %337 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %337)
  %._value19 = getelementptr inbounds %TSi, %TSi* %20, i32 0, i32 0
  store i64 1, i64* %._value19, align 8
  %338 = load i8*, i8** @"\01L_selector(executionCount)", align 8
  %339 = bitcast %TSo9XCTestRunC* %318 to %6*
  %340 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %339, i8* %338)
  %341 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %341)
  %._value20 = getelementptr inbounds %TSi, %TSi* %21, i32 0, i32 0
  store i64 %340, i64* %._value20, align 8
  %342 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %343 = extractvalue { i64, %swift.bridge* } %342, 0
  %344 = extractvalue { i64, %swift.bridge* } %342, 1
  %345 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %346 = extractvalue { i8*, %swift.refcounted* } %345, 0
  %347 = extractvalue { i8*, %swift.refcounted* } %345, 1
  %348 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %347) #3
  %349 = bitcast %swift.refcounted* %347 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %350 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %351 = bitcast %TSi* %20 to %swift.opaque*
  %352 = bitcast %TSi* %21 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %351, %swift.opaque* noalias nocapture %352, i8* %346, %swift.opaque* %349, %swift.opaque* noalias nocapture %53, i1 %350, i64 %343, %swift.bridge* %344, i64 459, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %347) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %347) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %344) #3
  %353 = bitcast %TSi* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353)
  %354 = bitcast %TSi* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354)
  %355 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %355)
  %._value21 = getelementptr inbounds %TSi, %TSi* %22, i32 0, i32 0
  store i64 0, i64* %._value21, align 8
  %356 = load i8*, i8** @"\01L_selector(failureCount)", align 8
  %357 = bitcast %TSo9XCTestRunC* %318 to %6*
  %358 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %357, i8* %356)
  %359 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %359)
  %._value22 = getelementptr inbounds %TSi, %TSi* %23, i32 0, i32 0
  store i64 %358, i64* %._value22, align 8
  %360 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %361 = extractvalue { i64, %swift.bridge* } %360, 0
  %362 = extractvalue { i64, %swift.bridge* } %360, 1
  %363 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %364 = extractvalue { i8*, %swift.refcounted* } %363, 0
  %365 = extractvalue { i8*, %swift.refcounted* } %363, 1
  %366 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %365) #3
  %367 = bitcast %swift.refcounted* %365 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %368 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %369 = bitcast %TSi* %22 to %swift.opaque*
  %370 = bitcast %TSi* %23 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %369, %swift.opaque* noalias nocapture %370, i8* %364, %swift.opaque* %367, %swift.opaque* noalias nocapture %53, i1 %368, i64 %361, %swift.bridge* %362, i64 460, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %365) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %365) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %362) #3
  %371 = bitcast %TSi* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371)
  %372 = bitcast %TSi* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372)
  %373 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %373)
  %._value23 = getelementptr inbounds %TSi, %TSi* %24, i32 0, i32 0
  store i64 1, i64* %._value23, align 8
  %374 = load i8*, i8** @"\01L_selector(unexpectedExceptionCount)", align 8
  %375 = bitcast %TSo9XCTestRunC* %318 to %6*
  %376 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %375, i8* %374)
  %377 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %377)
  %._value24 = getelementptr inbounds %TSi, %TSi* %25, i32 0, i32 0
  store i64 %376, i64* %._value24, align 8
  %378 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %379 = extractvalue { i64, %swift.bridge* } %378, 0
  %380 = extractvalue { i64, %swift.bridge* } %378, 1
  %381 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %382 = extractvalue { i8*, %swift.refcounted* } %381, 0
  %383 = extractvalue { i8*, %swift.refcounted* } %381, 1
  %384 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %383) #3
  %385 = bitcast %swift.refcounted* %383 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %386 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %387 = bitcast %TSi* %24 to %swift.opaque*
  %388 = bitcast %TSi* %25 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %387, %swift.opaque* noalias nocapture %388, i8* %382, %swift.opaque* %385, %swift.opaque* noalias nocapture %53, i1 %386, i64 %379, %swift.bridge* %380, i64 461, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %383) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %383) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %380) #3
  %389 = bitcast %TSi* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %389)
  %390 = bitcast %TSi* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %390)
  %391 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %391)
  %._value25 = getelementptr inbounds %TSi, %TSi* %26, i32 0, i32 0
  store i64 1, i64* %._value25, align 8
  %392 = load i8*, i8** @"\01L_selector(totalFailureCount)", align 8
  %393 = bitcast %TSo9XCTestRunC* %318 to %6*
  %394 = call i64 bitcast (void ()* @objc_msgSend to i64 (%6*, i8*)*)(%6* %393, i8* %392)
  %395 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %395)
  %._value26 = getelementptr inbounds %TSi, %TSi* %27, i32 0, i32 0
  store i64 %394, i64* %._value26, align 8
  %396 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %397 = extractvalue { i64, %swift.bridge* } %396, 0
  %398 = extractvalue { i64, %swift.bridge* } %396, 1
  %399 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %400 = extractvalue { i8*, %swift.refcounted* } %399, 0
  %401 = extractvalue { i8*, %swift.refcounted* } %399, 1
  %402 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %401) #3
  %403 = bitcast %swift.refcounted* %401 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA2_"(%swift.opaque* noalias nocapture sret %53, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %404 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA3_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %405 = bitcast %TSi* %26 to %swift.opaque*
  %406 = bitcast %TSi* %27 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture %405, %swift.opaque* noalias nocapture %406, i8* %400, %swift.opaque* %403, %swift.opaque* noalias nocapture %53, i1 %404, i64 %397, %swift.bridge* %398, i64 462, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %401) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %401) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %398) #3
  %407 = bitcast %TSi* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %407)
  %408 = bitcast %TSi* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %408)
  %409 = load i8*, i8** @"\01L_selector(hasSucceeded)", align 8
  %410 = bitcast %TSo9XCTestRunC* %318 to %6*
  %411 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%6*, i8*)*)(%6* %410, i8* %409)
  %412 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %412, label %413, label %415

413:                                              ; preds = %317
  %414 = icmp slt i8 %411, 0
  br label %416

415:                                              ; preds = %317
  br label %416

416:                                              ; preds = %413, %415
  %417 = phi i1 [ false, %415 ], [ %414, %413 ]
  %418 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$sSiN", i8** %191, %swift.type* swiftself @"$sSiN")
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  br label %421

420:                                              ; preds = %416
  br label %421

421:                                              ; preds = %419, %420
  %422 = phi i1 [ false, %420 ], [ false, %419 ]
  %423 = icmp eq i1 %417, %422
  %424 = xor i1 %423, true
  br i1 %424, label %425, label %426

425:                                              ; preds = %421
  br label %440

426:                                              ; preds = %421
  %427 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %427)
  %._value27 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %28, i32 0, i32 0
  store i8 %411, i8* %._value27, align 1
  %428 = call i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #6
  %429 = bitcast %Ts4Int8V* %28 to %swift.opaque*
  %430 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %428, %swift.opaque* noalias nocapture swiftself %429)
  %431 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %28)
  %432 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %432)
  %._value28 = getelementptr inbounds %TSi, %TSi* %29, i32 0, i32 0
  store i64 0, i64* %._value28, align 8
  %433 = call i8** @"$sS2is17FixedWidthIntegersWl"() #6
  %434 = bitcast %TSi* %29 to %swift.opaque*
  %435 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %433, %swift.opaque* noalias nocapture swiftself %434)
  %436 = call %TSi* @"$sSiWOh"(%TSi* %29)
  %437 = icmp slt i64 %430, %435
  %438 = bitcast %TSi* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %438)
  %439 = bitcast %Ts4Int8V* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %439)
  br i1 %437, label %455, label %466

440:                                              ; preds = %425, %455, %478, %491, %502
  %441 = phi i1 [ %510, %502 ], [ %499, %491 ], [ %486, %478 ], [ %463, %455 ], [ false, %425 ]
  %442 = xor i1 %441, true
  %443 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %444 = extractvalue { i64, %swift.bridge* } %443, 0
  %445 = extractvalue { i64, %swift.bridge* } %443, 1
  %446 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %447 = extractvalue { i8*, %swift.refcounted* } %446, 0
  %448 = extractvalue { i8*, %swift.refcounted* } %446, 1
  %449 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %448) #3
  %450 = bitcast %swift.refcounted* %448 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %53)
  %451 = call swiftcc i1 @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %442, i8* %447, %swift.opaque* %450, %swift.opaque* noalias nocapture %53, i1 %451, i64 %444, %swift.bridge* %445, i64 463)
  call void @swift_release(%swift.refcounted* %448) #3
  call void %destroy(%swift.opaque* noalias %53, %swift.type* %47) #3
  call void @swift_release(%swift.refcounted* %448) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %445) #3
  %452 = bitcast %TSo9XCTestRunC* %318 to i8*
  call void @llvm.objc.release(i8* %452)
  %453 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %229 to i8*
  call void @llvm.objc.release(i8* %453)
  %454 = bitcast %swift.opaque* %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %454)
  ret void

455:                                              ; preds = %426
  %456 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %456)
  %457 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %457)
  %._value37 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %39, i32 0, i32 0
  store i8 %411, i8* %._value37, align 1
  %458 = bitcast %TSi* %38 to %swift.opaque*
  %459 = bitcast %Ts4Int8V* %39 to %swift.opaque*
  %460 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %458, %swift.opaque* noalias nocapture %459, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %433, i8** %460, %swift.type* swiftself @"$sSiN")
  %461 = bitcast %Ts4Int8V* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %461)
  %._value38 = getelementptr inbounds %TSi, %TSi* %38, i32 0, i32 0
  %462 = load i64, i64* %._value38, align 8
  %463 = icmp eq i64 %462, 0
  %464 = call %TSi* @"$sSiWOh"(%TSi* %38)
  %465 = bitcast %TSi* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465)
  br label %440

466:                                              ; preds = %426
  %467 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %467)
  %._value29 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %30, i32 0, i32 0
  store i8 %411, i8* %._value29, align 1
  %468 = bitcast %Ts4Int8V* %30 to %swift.opaque*
  %469 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$ss4Int8VN", i8** %428, %swift.opaque* noalias nocapture swiftself %468)
  %470 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %30)
  %471 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %471)
  %._value30 = getelementptr inbounds %TSi, %TSi* %31, i32 0, i32 0
  store i64 0, i64* %._value30, align 8
  %472 = bitcast %TSi* %31 to %swift.opaque*
  %473 = call swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type* @"$sSiN", i8** %433, %swift.opaque* noalias nocapture swiftself %472)
  %474 = call %TSi* @"$sSiWOh"(%TSi* %31)
  %475 = icmp slt i64 %473, %469
  %476 = bitcast %TSi* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476)
  %477 = bitcast %Ts4Int8V* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %477)
  br i1 %475, label %478, label %489

478:                                              ; preds = %466
  %479 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %479)
  %480 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %480)
  %._value35 = getelementptr inbounds %TSi, %TSi* %37, i32 0, i32 0
  store i64 0, i64* %._value35, align 8
  %481 = bitcast %Ts4Int8V* %36 to %swift.opaque*
  %482 = bitcast %TSi* %37 to %swift.opaque*
  %483 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %481, %swift.opaque* noalias nocapture %482, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %428, i8** %483, %swift.type* swiftself @"$ss4Int8VN")
  %484 = bitcast %TSi* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484)
  %._value36 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %36, i32 0, i32 0
  %485 = load i8, i8* %._value36, align 1
  %486 = icmp eq i8 %411, %485
  %487 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %36)
  %488 = bitcast %Ts4Int8V* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %488)
  br label %440

489:                                              ; preds = %466
  %490 = call swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type* @"$ss4Int8VN", i8** %184, %swift.type* swiftself @"$ss4Int8VN")
  br i1 %490, label %491, label %502

491:                                              ; preds = %489
  %492 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %492)
  %493 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %493)
  %._value33 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %35, i32 0, i32 0
  store i8 %411, i8* %._value33, align 1
  %494 = bitcast %TSi* %34 to %swift.opaque*
  %495 = bitcast %Ts4Int8V* %35 to %swift.opaque*
  %496 = call i8** @"$ss4Int8VABSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %494, %swift.opaque* noalias nocapture %495, %swift.type* @"$sSiN", %swift.type* @"$ss4Int8VN", i8** %433, i8** %496, %swift.type* swiftself @"$sSiN")
  %497 = bitcast %Ts4Int8V* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %497)
  %._value34 = getelementptr inbounds %TSi, %TSi* %34, i32 0, i32 0
  %498 = load i64, i64* %._value34, align 8
  %499 = icmp eq i64 %498, 0
  %500 = call %TSi* @"$sSiWOh"(%TSi* %34)
  %501 = bitcast %TSi* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %501)
  br label %440

502:                                              ; preds = %489
  %503 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %503)
  %504 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %504)
  %._value31 = getelementptr inbounds %TSi, %TSi* %33, i32 0, i32 0
  store i64 0, i64* %._value31, align 8
  %505 = bitcast %Ts4Int8V* %32 to %swift.opaque*
  %506 = bitcast %TSi* %33 to %swift.opaque*
  %507 = call i8** @"$sS2iSzsWl"() #6
  call swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret %505, %swift.opaque* noalias nocapture %506, %swift.type* @"$ss4Int8VN", %swift.type* @"$sSiN", i8** %428, i8** %507, %swift.type* swiftself @"$ss4Int8VN")
  %508 = bitcast %TSi* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %508)
  %._value32 = getelementptr inbounds %Ts4Int8V, %Ts4Int8V* %32, i32 0, i32 0
  %509 = load i8, i8* %._value32, align 1
  %510 = icmp eq i8 %411, %509
  %511 = call %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V* %32)
  %512 = bitcast %Ts4Int8V* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %512)
  br label %440
}

define internal swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfC"(i8*, %swift.type* swiftself) #0 {
entry:
  %2 = bitcast %swift.type* %1 to %objc_class*
  %3 = call %objc_object* @objc_allocWithZone(%objc_class* %2)
  %4 = bitcast %objc_object* %3 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %5 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %6 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to %16*
  %7 = call %16* bitcast (void ()* @objc_msgSend to %16* (%16*, i8*, i8*)*)(%16* %6, i8* %5, i8* %0)
  %8 = bitcast %16* %7 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  ret %T7_XCTestyycfU8_13ErrorTestCaseL_C* %8
}

define internal swiftcc void @"$s7_XCTestyycfU9_"() #0 {
entry:
  ret void
}

declare swiftcc i1 @"$ss26_stdlib_isOSVersionAtLeastyBi1_Bw_BwBwtF"(i64, i64, i64) #0

declare swiftcc void @"$s14StdlibUnittest11runAllTestsyyF"() #0

define internal swiftcc void @"$s7_XCTestyycfU10_"() #0 {
entry:
  ret void
}

declare swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64, %swift.type*) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }*) #5 {
entry:
  %1 = bitcast { i64, i32 }* %0 to i64*
  %2 = load i64, i64* %1, align 8
  %3 = inttoptr i64 %2 to i8*
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1
  %5 = load atomic i32, i32* %4 monotonic, align 8
  %6 = sext i32 %5 to i64
  %7 = icmp slt i64 %6, 0
  %8 = call i1 @llvm.expect.i1(i1 %7, i1 false)
  br i1 %8, label %12, label %9

9:                                                ; preds = %12, %entry
  %10 = phi i64 [ %2, %entry ], [ %15, %12 ]
  %11 = inttoptr i64 %10 to %swift.type*
  ret %swift.type* %11

12:                                               ; preds = %entry
  %13 = sub i64 0, %6
  %14 = call swiftcc %swift.type* @swift_getTypeByMangledNameInContext(i8* %3, i64 %13, %swift.type_descriptor* null, i8** null) #6
  %15 = ptrtoint %swift.type* %14 to i64
  store atomic i64 %15, i64* %1 monotonic, align 8
  %16 = trunc i64 %13 to i32
  store i32 %16, i32* %4, align 8
  br label %9
}

; Function Attrs: nounwind readnone
declare i1 @llvm.expect.i1(i1, i1) #6

; Function Attrs: argmemonly nounwind
declare swiftcc %swift.type* @swift_getTypeByMangledNameInContext(i8*, i64, %swift.type_descriptor*, i8**) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned) #3

declare swiftcc void @"$sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF"(%Ts16IndexingIteratorV* noalias nocapture sret, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSaySo17XCTestObservation_pGSayxGSlsWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSaySo17XCTestObservation_pGSayxGSlsWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSaySo17XCTestObservation_pGMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSayxGSlsMc", %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSaySo17XCTestObservation_pGSayxGSlsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSaySo17XCTestObservation_pGMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSaySo17XCTestObservation_pGML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call swiftcc %swift.metadata_response @"$sSo17XCTestObservation_pMa"(i64 255) #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = extractvalue %swift.metadata_response %3, 1
  %6 = call swiftcc %swift.metadata_response @"$sSaMa"(i64 %0, %swift.type* %4) #6
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = extractvalue %swift.metadata_response %6, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %is_complete, label %cont

is_complete:                                      ; preds = %cacheIsNull
  store atomic %swift.type* %7, %swift.type** @"$sSaySo17XCTestObservation_pGML" release, align 8
  br label %cont

cont:                                             ; preds = %is_complete, %cacheIsNull, %entry
  %10 = phi %swift.type* [ %1, %entry ], [ %7, %is_complete ], [ %7, %cacheIsNull ]
  %11 = phi i64 [ 0, %entry ], [ %8, %cacheIsNull ], [ 0, %is_complete ]
  %12 = insertvalue %swift.metadata_response undef, %swift.type* %10, 0
  %13 = insertvalue %swift.metadata_response %12, i64 %11, 1
  ret %swift.metadata_response %13
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSo17XCTestObservation_pMa"(i64) #7 {
entry:
  %protocols = alloca [1 x i64], align 8
  %1 = load %swift.type*, %swift.type** @"$sSo17XCTestObservation_pML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = bitcast [1 x i64]* %protocols to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3)
  %4 = bitcast [1 x i64]* %protocols to i64*
  %5 = load i8*, i8** @"\01l_OBJC_PROTOCOL_REFERENCE_$_XCTestObservation", align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = or i64 %6, 1
  %8 = getelementptr inbounds i64, i64* %4, i32 0
  store i64 %7, i64* %8, align 8
  %9 = call %swift.type* @swift_getExistentialTypeMetadata(i1 false, %swift.type* null, i64 1, i64* %4) #3
  %10 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10)
  store atomic %swift.type* %9, %swift.type** @"$sSo17XCTestObservation_pML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %11 = phi %swift.type* [ %1, %entry ], [ %9, %cacheIsNull ]
  %12 = insertvalue %swift.metadata_response undef, %swift.type* %11, 0
  %13 = insertvalue %swift.metadata_response %12, i64 0, 1
  ret %swift.metadata_response %13
}

; Function Attrs: nounwind readonly
declare %swift.type* @swift_getExistentialTypeMetadata(i1, %swift.type*, i64, i64*) #8

declare swiftcc %swift.metadata_response @"$sSaMa"(i64, %swift.type*) #0

; Function Attrs: nounwind readonly
declare i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor*, %swift.type*, i8***) #8

declare swiftcc void @"$ss16IndexingIteratorV4next7ElementQzSgyF"(%TSq.1* noalias nocapture sret, %swift.type*, %Ts16IndexingIteratorV.2* nocapture swiftself) #0

; Function Attrs: noinline nounwind
define linkonce_odr hidden %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* @"$ss16IndexingIteratorVySaySo17XCTestObservation_pGGWOh"(%Ts16IndexingIteratorVySaySo17XCTestObservation_pGG*) #9 {
entry:
  %._elements = getelementptr inbounds %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG, %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %0, i32 0, i32 0
  %._elements._buffer = getelementptr inbounds %TSa, %TSa* %._elements, i32 0, i32 0
  %._elements._buffer._storage = getelementptr inbounds %Ts12_ArrayBufferV, %Ts12_ArrayBufferV* %._elements._buffer, i32 0, i32 0
  %._elements._buffer._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, %Ts14_BridgeStorageV* %._elements._buffer._storage, i32 0, i32 0
  %toDestroy = load %swift.bridge*, %swift.bridge** %._elements._buffer._storage.rawValue, align 8
  call void @swift_bridgeObjectRelease(%swift.bridge* %toDestroy) #3
  ret %Ts16IndexingIteratorVySaySo17XCTestObservation_pGG* %0
}

; Function Attrs: nounwind
declare %objc_class* @swift_getInitializedObjCClass(%objc_class*) #3

declare void @objc_msgSend()

; Function Attrs: nounwind
declare i8* @llvm.objc.retainAutoreleasedReturnValue(i8*) #3

; Function Attrs: nounwind
declare void @llvm.objc.release(i8*) #3

; Function Attrs: nounwind
declare void @swift_unknownObjectRelease(%objc_object*) #3

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @"$sSSSgWOy"(i64, i64) #10 {
entry:
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %6, label %3

3:                                                ; preds = %entry
  %4 = inttoptr i64 %1 to %swift.bridge*
  %5 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %4) #3
  br label %6

6:                                                ; preds = %3, %entry
  ret void
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden void @"$sSSSgWOe"(i64, i64) #10 {
entry:
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %5, label %3

3:                                                ; preds = %entry
  %4 = inttoptr i64 %1 to %swift.bridge*
  call void @swift_bridgeObjectRelease(%swift.bridge* %4) #3
  br label %5

5:                                                ; preds = %3, %entry
  ret void
}

declare swiftcc void @"$s7_XCTest26FailureDescriptionObserverCIetMg_TC"(i8* noalias dereferenceable(32), i1) #0

declare i8* @malloc(i64)

declare void @free(i8*)

; Function Attrs: nounwind
declare token @llvm.coro.id.retcon.once(i32, i32, i8*, i8*, i8*, i8*) #3

; Function Attrs: nounwind
declare i8* @llvm.coro.begin(token, i8* writeonly) #3

; Function Attrs: nounwind
declare i1 @llvm.coro.suspend.retcon.i1(...) #3

; Function Attrs: nounwind
declare i1 @llvm.coro.end(i8*, i1) #3

; Function Attrs: nounwind
declare i8* @llvm.objc.retain(i8*) #3

declare swiftcc { i64, %swift.bridge* } @"$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ"(i64) #0

declare void @objc_msgSendSuper2()

; Function Attrs: noinline nounwind readnone
define hidden swiftcc %swift.metadata_response @"$s7_XCTest26FailureDescriptionObserverCMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTest26FailureDescriptionObserverCML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTest26FailureDescriptionObserverC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, { i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)*, void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* }>, <{ void (%T7_XCTest26FailureDescriptionObserverC*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, { i64, i64 } (%T7_XCTest26FailureDescriptionObserverC*)*, void (i64, i64, %T7_XCTest26FailureDescriptionObserverC*)*, { i8*, %TSSSg* } (i8*, %T7_XCTest26FailureDescriptionObserverC*)*, void (%TSo10XCTestCaseC*, i64, %swift.bridge*, i64, i64, i64, %T7_XCTest26FailureDescriptionObserverC*)* }>* @"$s7_XCTest26FailureDescriptionObserverCMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTest26FailureDescriptionObserverCML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %TSSSg* @"$sSSSgWOh"(%TSSSg*) #9 {
entry:
  %1 = bitcast %TSSSg* %0 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %entry
  %8 = bitcast %TSSSg* %0 to %TSS*
  %._guts = getelementptr inbounds %TSS, %TSS* %8, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  %toDestroy = load %swift.bridge*, %swift.bridge** %._guts._object._object, align 8
  call void @swift_bridgeObjectRelease(%swift.bridge* %toDestroy) #3
  br label %9

9:                                                ; preds = %7, %entry
  ret %TSSSg* %0
}

; Function Attrs: nounwind
declare %objc_object* @objc_allocWithZone(%objc_class*) #3

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C11test_raisesyyF"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug, align 8
  %2 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo11NSExceptionCMD") #6
  %3 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @67, i64 0, i64 0), i64 24, i1 true)
  %4 = extractvalue { i64, %swift.bridge* } %3, 0
  %5 = extractvalue { i64, %swift.bridge* } %3, 1
  %6 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %5) #3
  %7 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %4, %swift.bridge* %5)
  %8 = bitcast %TSo8NSStringC* %7 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %TSo8NSStringC*
  call void @swift_bridgeObjectRelease(%swift.bridge* %5) #3
  %11 = bitcast %TSo8NSStringC* %7 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %TSo8NSStringC*
  %14 = bitcast %TSo8NSStringC* %7 to i8*
  call void @llvm.objc.release(i8* %14)
  call void @swift_bridgeObjectRelease(%swift.bridge* %5) #3
  %15 = bitcast %TSo8NSStringC* %7 to i8*
  call void @llvm.objc.release(i8* %15)
  %16 = call swiftcc %TSo11NSExceptionC* @"$sSo11NSExceptionC4name6reason8userInfoABSo0A4Namea_SSSgSDys11AnyHashableVypGSgtcfC"(%TSo8NSStringC* %7, i64 0, i64 0, i64 0, %swift.type* swiftself %2)
  %17 = load i8*, i8** @"\01L_selector(raise)", align 8
  %18 = bitcast %TSo11NSExceptionC* %16 to %17*
  call void bitcast (void ()* @objc_msgSend to void (%17*, i8*)*)(%17* %18, i8* %17)
  %19 = bitcast %TSo11NSExceptionC* %16 to i8*
  call void @llvm.objc.release(i8* %19)
  ret void
}

define linkonce_odr hidden swiftcc %TSo11NSExceptionC* @"$sSo11NSExceptionC4name6reason8userInfoABSo0A4Namea_SSSgSDys11AnyHashableVypGSgtcfC"(%TSo8NSStringC*, i64, i64, i64, %swift.type* swiftself) #0 {
entry:
  %5 = call %objc_class* @swift_getObjCClassFromMetadata(%swift.type* %4) #6
  %6 = call %objc_object* @objc_allocWithZone(%objc_class* %5)
  %7 = bitcast %objc_object* %6 to %TSo11NSExceptionC*
  %8 = call swiftcc %TSo11NSExceptionC* @"$sSo11NSExceptionC4name6reason8userInfoABSo0A4Namea_SSSgSDys11AnyHashableVypGSgtcfcTO"(%TSo8NSStringC* %0, i64 %1, i64 %2, i64 %3, %TSo11NSExceptionC* swiftself %7)
  ret %TSo11NSExceptionC* %8
}

define linkonce_odr hidden swiftcc %TSo11NSExceptionC* @"$sSo11NSExceptionC4name6reason8userInfoABSo0A4Namea_SSSgSDys11AnyHashableVypGSgtcfcTO"(%TSo8NSStringC*, i64, i64, i64, %TSo11NSExceptionC* swiftself) #0 {
entry:
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %entry
  %7 = inttoptr i64 %2 to %swift.bridge*
  br label %8

8:                                                ; preds = %6
  %9 = phi i64 [ %1, %6 ]
  %10 = phi %swift.bridge* [ %7, %6 ]
  %11 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %9, %swift.bridge* %10) #13
  %12 = ptrtoint %TSo8NSStringC* %11 to i64
  call void @swift_bridgeObjectRelease(%swift.bridge* %10) #3
  br label %14

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %8, %13
  %15 = phi i64 [ 0, %13 ], [ %12, %8 ]
  %16 = icmp eq i64 %3, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = inttoptr i64 %3 to %swift.bridge*
  br label %19

19:                                               ; preds = %17
  %20 = phi %swift.bridge* [ %18, %17 ]
  %21 = call swiftcc %TSo12NSDictionaryC* @"$sSD10FoundationE19_bridgeToObjectiveCSo12NSDictionaryCyF"(%swift.bridge* %20, %swift.type* @"$ss11AnyHashableVN", %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sypN", i32 0, i32 1), i8** @"$ss11AnyHashableVSHsWP") #13
  %22 = ptrtoint %TSo12NSDictionaryC* %21 to i64
  call void @swift_bridgeObjectRelease(%swift.bridge* %20) #3
  br label %24

23:                                               ; preds = %14
  br label %24

24:                                               ; preds = %19, %23
  %25 = phi i64 [ 0, %23 ], [ %22, %19 ]
  %26 = load i8*, i8** @"\01L_selector(initWithName:reason:userInfo:)", align 8
  %27 = bitcast %TSo8NSStringC* %0 to %0*
  %28 = inttoptr i64 %15 to %0*
  %29 = inttoptr i64 %25 to %18*
  %30 = bitcast %TSo11NSExceptionC* %4 to %17*
  %31 = call %17* bitcast (void ()* @objc_msgSend to %17* (%17*, i8*, %0*, %0*, %18*)*)(%17* %30, i8* %26, %0* %27, %0* %28, %18* %29) #13
  %32 = bitcast %17* %31 to %TSo11NSExceptionC*
  %33 = inttoptr i64 %25 to %objc_object*
  %34 = bitcast %objc_object* %33 to i8*
  call void @llvm.objc.release(i8* %34)
  %35 = inttoptr i64 %15 to %objc_object*
  %36 = bitcast %objc_object* %35 to i8*
  call void @llvm.objc.release(i8* %36)
  %37 = bitcast %TSo8NSStringC* %0 to i8*
  call void @llvm.objc.release(i8* %37)
  ret %TSo11NSExceptionC* %32
}

define internal void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C11test_raisesyyFTo"(%7*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %7* %0 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C11test_raisesyyF"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyF"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug, align 8
  %2 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo11NSExceptionCMD") #6
  %3 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @67, i64 0, i64 0), i64 24, i1 true)
  %4 = extractvalue { i64, %swift.bridge* } %3, 0
  %5 = extractvalue { i64, %swift.bridge* } %3, 1
  %6 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %5) #3
  %7 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %4, %swift.bridge* %5)
  %8 = bitcast %TSo8NSStringC* %7 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %TSo8NSStringC*
  call void @swift_bridgeObjectRelease(%swift.bridge* %5) #3
  %11 = bitcast %TSo8NSStringC* %7 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %TSo8NSStringC*
  %14 = bitcast %TSo8NSStringC* %7 to i8*
  call void @llvm.objc.release(i8* %14)
  call void @swift_bridgeObjectRelease(%swift.bridge* %5) #3
  %15 = bitcast %TSo8NSStringC* %7 to i8*
  call void @llvm.objc.release(i8* %15)
  %16 = call swiftcc %TSo11NSExceptionC* @"$sSo11NSExceptionC4name6reason8userInfoABSo0A4Namea_SSSgSDys11AnyHashableVypGSgtcfC"(%TSo8NSStringC* %7, i64 0, i64 0, i64 0, %swift.type* swiftself %2)
  call void asm sideeffect "", "r"(%TSo11NSExceptionC* %16)
  %17 = bitcast %TSo11NSExceptionC* %16 to i8*
  %18 = call i8* @llvm.objc.retain(i8* %17)
  %19 = bitcast i8* %18 to %TSo11NSExceptionC*
  %20 = alloca i8, i64 24, align 16
  %21 = bitcast i8* %20 to %swift.opaque*
  %22 = bitcast %swift.opaque* %21 to <{ %swift.refcounted, %TSo11NSExceptionC* }>*
  %23 = getelementptr inbounds <{ %swift.refcounted, %TSo11NSExceptionC* }>, <{ %swift.refcounted, %TSo11NSExceptionC* }>* %22, i32 0, i32 1
  store %TSo11NSExceptionC* %16, %TSo11NSExceptionC** %23, align 8
  %24 = alloca i8, i64 32, align 16
  %25 = bitcast i8* %24 to %swift.opaque*
  %26 = bitcast %swift.opaque* %25 to <{ %swift.refcounted, %swift.noescape.function }>*
  %27 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %26, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %27, i32 0, i32 0
  store i8* bitcast (void (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFyyKXEfu_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %27, i32 0, i32 1
  store %swift.opaque* %21, %swift.opaque** %.data, align 8
  br label %28

28:                                               ; preds = %entry
  br label %29

29:                                               ; preds = %28
  %30 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlFfA0_"(%swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  %31 = extractvalue { i8*, %swift.refcounted* } %30, 0
  %32 = extractvalue { i8*, %swift.refcounted* } %30, 1
  %33 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %32) #3
  %34 = bitcast %swift.refcounted* %32 to %swift.opaque*
  call swiftcc void @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlF"(i8* bitcast (void (%swift.opaque*, %swift.refcounted*, %swift.error**)* @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA.28" to i8*), %swift.opaque* %25, i8* %31, %swift.opaque* %34, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 54, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  call void @swift_release(%swift.refcounted* %32) #3
  %35 = bitcast %TSo11NSExceptionC* %16 to i8*
  call void @llvm.objc.release(i8* %35)
  call void @swift_release(%swift.refcounted* %32) #3
  %36 = bitcast %TSo11NSExceptionC* %16 to i8*
  call void @llvm.objc.release(i8* %36)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFyyKXEfu_"(%TSo11NSExceptionC*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = load i8*, i8** @"\01L_selector(raise)", align 8
  %4 = bitcast %TSo11NSExceptionC* %0 to %17*
  call void bitcast (void ()* @objc_msgSend to void (%17*, i8*)*)(%17* %4, i8* %3)
  ret void
}

define linkonce_odr hidden swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TR"(%swift.opaque* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to void (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  call swiftcc void %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %7 = load %swift.error*, %swift.error** %4, align 8
  %8 = icmp ne %swift.error* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %entry
  ret void

10:                                               ; preds = %entry
  %11 = phi %swift.error* [ %7, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %11, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %11, %swift.error** %4, align 8
  ret void
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlFfA0_"(%swift.type* %T) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlFfA0_SSycfu_" to i8*), %swift.refcounted* null }
}

define internal void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFTo"(%7*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %7* %0 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyF"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyF"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0 to i8*
  %3 = call i8* @llvm.objc.retain(i8* %2)
  %4 = bitcast i8* %3 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %5 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0 to %TSo10XCTestCaseC*
  br label %6

6:                                                ; preds = %entry
  br label %7

7:                                                ; preds = %6
  %8 = load i8*, i8** @"\01L_selector(setContinueAfterFailure:)", align 8
  %9 = bitcast %TSo10XCTestCaseC* %5 to %3*
  call void bitcast (void ()* @objc_msgSend to void (%3*, i8*, i8)*)(%3* %9, i8* %8, i8 signext 0)
  %10 = bitcast %TSo10XCTestCaseC* %5 to i8*
  call void @llvm.objc.release(i8* %10)
  %spsave = call i8* @llvm.stacksave()
  %11 = alloca i8, i64 32, align 16
  %12 = bitcast i8* %11 to %swift.opaque*
  %13 = bitcast %swift.opaque* %12 to <{ %swift.refcounted, %swift.noescape.function }>*
  %14 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %13, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %14, i32 0, i32 0
  store i8* bitcast (void (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyFyyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %14, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  br label %15

15:                                               ; preds = %7
  br label %16

16:                                               ; preds = %15
  %17 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlFfA0_"(%swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  %18 = extractvalue { i8*, %swift.refcounted* } %17, 0
  %19 = extractvalue { i8*, %swift.refcounted* } %17, 1
  %20 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %19) #3
  %21 = bitcast %swift.refcounted* %19 to %swift.opaque*
  call swiftcc void @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlF"(i8* bitcast (void (%swift.opaque*, %swift.refcounted*, %swift.error**)* @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA.27" to i8*), %swift.opaque* %12, i8* %18, %swift.opaque* %21, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 61, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  call void @swift_release(%swift.refcounted* %19) #3
  call void @llvm.stackrestore(i8* %spsave)
  call void @swift_release(%swift.refcounted* %19) #3
  %22 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo11NSExceptionCMD") #6
  %23 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @67, i64 0, i64 0), i64 24, i1 true)
  %24 = extractvalue { i64, %swift.bridge* } %23, 0
  %25 = extractvalue { i64, %swift.bridge* } %23, 1
  %26 = call %swift.bridge* @swift_bridgeObjectRetain(%swift.bridge* returned %25) #3
  %27 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %24, %swift.bridge* %25)
  %28 = bitcast %TSo8NSStringC* %27 to i8*
  %29 = call i8* @llvm.objc.retain(i8* %28)
  %30 = bitcast i8* %29 to %TSo8NSStringC*
  call void @swift_bridgeObjectRelease(%swift.bridge* %25) #3
  %31 = bitcast %TSo8NSStringC* %27 to i8*
  %32 = call i8* @llvm.objc.retain(i8* %31)
  %33 = bitcast i8* %32 to %TSo8NSStringC*
  %34 = bitcast %TSo8NSStringC* %27 to i8*
  call void @llvm.objc.release(i8* %34)
  call void @swift_bridgeObjectRelease(%swift.bridge* %25) #3
  %35 = bitcast %TSo8NSStringC* %27 to i8*
  call void @llvm.objc.release(i8* %35)
  %36 = call swiftcc %TSo11NSExceptionC* @"$sSo11NSExceptionC4name6reason8userInfoABSo0A4Namea_SSSgSDys11AnyHashableVypGSgtcfC"(%TSo8NSStringC* %27, i64 0, i64 0, i64 0, %swift.type* swiftself %22)
  %37 = load i8*, i8** @"\01L_selector(raise)", align 8
  %38 = bitcast %TSo11NSExceptionC* %36 to %17*
  call void bitcast (void ()* @objc_msgSend to void (%17*, i8*)*)(%17* %38, i8* %37)
  %39 = bitcast %TSo11NSExceptionC* %36 to i8*
  call void @llvm.objc.release(i8* %39)
  ret void
}

declare swiftcc i8 @"$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF"(i1) #0

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyF07triggerH0L_yyF"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @68, i64 0, i64 0), i64 15, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  br label %3

3:                                                ; preds = %entry
  br label %4

4:                                                ; preds = %3
  call swiftcc void @"$s6XCTest7XCTFail_4file4lineySS_s12StaticStringVSutF"(i64 %1, %swift.bridge* %2, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 59)
  call void @swift_bridgeObjectRelease(%swift.bridge* %2) #3
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyFyyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  call swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyF07triggerH0L_yyF"()
  ret void
}

define internal void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyFTo"(%7*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %7* %0 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C39test_continueAfterFailureWithAssertionsyyF"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_CfD"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %1, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU_17ExceptionTestCaseL_C*, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %18, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU_17ExceptionTestCaseL_C*, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU_17ExceptionTestCaseL_C* %18
}

define internal %7* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%7*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %7* %0 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %14 to %7*
  ret %7* %15
}

define internal swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %1, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU_17ExceptionTestCaseL_C*, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %17, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU_17ExceptionTestCaseL_C*, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU_17ExceptionTestCaseL_C* %17
}

define internal %7* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%7*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %7* %0 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %9 to %7*
  ret %7* %10
}

define internal swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CACycfc"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU_17ExceptionTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %0, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU_17ExceptionTestCaseL_C*, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  store %T7_XCTestyycfU_17ExceptionTestCaseL_C* %15, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU_17ExceptionTestCaseL_C*, %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU_17ExceptionTestCaseL_C* %15
}

define internal %7* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CACycfcTo"(%7*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %7* %0 to %T7_XCTestyycfU_17ExceptionTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU_17ExceptionTestCaseL_C* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CACycfc"(%T7_XCTestyycfU_17ExceptionTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU_17ExceptionTestCaseL_C* %8 to %7*
  ret %7* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU_17ExceptionTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)*, void (%T7_XCTestyycfU_17ExceptionTestCaseL_C*)* }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU_17ExceptionTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyF"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast (i64 (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSiyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast (i64 (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSiyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %13 = extractvalue { i8*, %swift.refcounted* } %12, 0
  %14 = extractvalue { i8*, %swift.refcounted* } %12, 1
  %15 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %14) #3
  %16 = bitcast %swift.refcounted* %14 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSi*, %swift.refcounted*, %swift.error**)* @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.25" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSi*, %swift.refcounted*, %swift.error**)* @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.26" to i8*), %swift.opaque* %7, i8* %13, %swift.opaque* %16, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 97, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %14) #3
  call void @swift_release(%swift.refcounted* %14) #3
  ret void
}

define internal swiftcc i64 @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSiyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret i64 1
}

define linkonce_odr hidden swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to i64 (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc i64 %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = load %swift.error*, %swift.error** %4, align 8
  %9 = icmp ne %swift.error* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = phi i64 [ %7, %entry ]
  %._value = getelementptr inbounds %TSi, %TSi* %0, i32 0, i32 0
  store i64 %11, i64* %._value, align 8
  ret void

12:                                               ; preds = %entry
  %13 = phi %swift.error* [ %8, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  ret void
}

define internal swiftcc i64 @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSiyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret i64 1
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %T, i8** %T.Equatable) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_SSycfu_" to i8*), %swift.refcounted* null }
}

define internal void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyFTo"(%8*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %8* %0 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C09test_whenC7_passesyyF"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyF"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast (i64 (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSiyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast (i64 (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSiyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %13 = extractvalue { i8*, %swift.refcounted* } %12, 0
  %14 = extractvalue { i8*, %swift.refcounted* } %12, 1
  %15 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %14) #3
  %16 = bitcast %swift.refcounted* %14 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSi*, %swift.refcounted*, %swift.error**)* @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.23" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSi*, %swift.refcounted*, %swift.error**)* @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.24" to i8*), %swift.opaque* %7, i8* %13, %swift.opaque* %16, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 101, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %14) #3
  call void @swift_release(%swift.refcounted* %14) #3
  ret void
}

define internal swiftcc i64 @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSiyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret i64 1
}

define internal swiftcc i64 @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSiyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret i64 2
}

define internal void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFTo"(%8*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %8* %0 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyF"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CfD"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %1, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %18, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %18
}

define internal %8* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%8*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %8* %0 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %14 to %8*
  ret %8* %15
}

define internal swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %1, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %17, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %17
}

define internal %8* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%8*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %8* %0 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %9 to %8*
  ret %8* %10
}

define internal swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CACycfc"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  store %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %15, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %15
}

define internal %8* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CACycfcTo"(%8*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %8* %0 to %T7_XCTestyycfU0_19AssertEqualTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CACycfc"(%T7_XCTestyycfU0_19AssertEqualTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU0_19AssertEqualTestCaseL_C* %8 to %8*
  ret %8* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU0_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU0_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyF"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %0, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast ({ i64, i8 } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyFSiSgyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast ({ i64, i8 } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyFSiSgyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSiSgMD") #6
  %13 = call i8** @"$sSiSgxSgSQsSQRzlWl"() #6
  %14 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %12, i8** %13)
  %15 = extractvalue { i8*, %swift.refcounted* } %14, 0
  %16 = extractvalue { i8*, %swift.refcounted* } %14, 1
  %17 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %16) #3
  %18 = bitcast %swift.refcounted* %16 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSiSg*, %swift.refcounted*, %swift.error**)* @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA.21" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSiSg*, %swift.refcounted*, %swift.error**)* @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA.22" to i8*), %swift.opaque* %7, i8* %15, %swift.opaque* %18, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 122, %swift.type* %12, i8** %13)
  call void @swift_release(%swift.refcounted* %16) #3
  call void @swift_release(%swift.refcounted* %16) #3
  ret void
}

define internal swiftcc { i64, i8 } @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyFSiSgyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = alloca %TSiSg, align 8
  %3 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 9, i8* %3)
  %4 = bitcast %TSiSg* %2 to %TSi*
  %._value = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %5 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i1*
  store i1 false, i1* %6, align 8
  %7 = bitcast %TSiSg* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %10 = bitcast [1 x i8]* %9 to i1*
  %11 = load i1, i1* %10, align 8
  %12 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 9, i8* %12)
  %13 = zext i1 %11 to i8
  %14 = insertvalue { i64, i8 } undef, i64 %8, 0
  %15 = insertvalue { i64, i8 } %14, i8 %13, 1
  ret { i64, i8 } %15
}

define linkonce_odr hidden swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TR"(%TSiSg* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to { i64, i8 } (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc { i64, i8 } %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = extractvalue { i64, i8 } %7, 0
  %9 = extractvalue { i64, i8 } %7, 1
  %10 = trunc i8 %9 to i1
  %11 = load %swift.error*, %swift.error** %4, align 8
  %12 = icmp ne %swift.error* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %entry
  %14 = phi i64 [ %8, %entry ]
  %15 = phi i1 [ %10, %entry ]
  %16 = bitcast %TSiSg* %0 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %TSiSg, %TSiSg* %0, i32 0, i32 1
  %18 = bitcast [1 x i8]* %17 to i1*
  store i1 %15, i1* %18, align 8
  ret void

19:                                               ; preds = %entry
  %20 = phi %swift.error* [ %11, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %20, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %20, %swift.error** %4, align 8
  ret void
}

define internal swiftcc { i64, i8 } @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyFSiSgyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = alloca %TSiSg, align 8
  %3 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 9, i8* %3)
  %4 = bitcast %TSiSg* %2 to %TSi*
  %._value = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %5 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i1*
  store i1 false, i1* %6, align 8
  %7 = bitcast %TSiSg* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %10 = bitcast [1 x i8]* %9 to i1*
  %11 = load i1, i1* %10, align 8
  %12 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 9, i8* %12)
  %13 = zext i1 %11 to i8
  %14 = insertvalue { i64, i8 } undef, i64 %8, 0
  %15 = insertvalue { i64, i8 } %14, i8 %13, 1
  ret { i64, i8 } %15
}

define internal void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyFTo"(%9*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %9* %0 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C021test_whenOptionalsAreC7_passesyyF"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyF"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %0, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast ({ i64, i8 } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyFSiSgyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast ({ i64, i8 } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyFSiSgyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSiSgMD") #6
  %13 = call i8** @"$sSiSgxSgSQsSQRzlWl"() #6
  %14 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %12, i8** %13)
  %15 = extractvalue { i8*, %swift.refcounted* } %14, 0
  %16 = extractvalue { i8*, %swift.refcounted* } %14, 1
  %17 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %16) #3
  %18 = bitcast %swift.refcounted* %16 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSiSg*, %swift.refcounted*, %swift.error**)* @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSiSg*, %swift.refcounted*, %swift.error**)* @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA.20" to i8*), %swift.opaque* %7, i8* %15, %swift.opaque* %18, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 126, %swift.type* %12, i8** %13)
  call void @swift_release(%swift.refcounted* %16) #3
  call void @swift_release(%swift.refcounted* %16) #3
  ret void
}

define internal swiftcc { i64, i8 } @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyFSiSgyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = alloca %TSiSg, align 8
  %3 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 9, i8* %3)
  %4 = bitcast %TSiSg* %2 to %TSi*
  %._value = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 1, i64* %._value, align 8
  %5 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i1*
  store i1 false, i1* %6, align 8
  %7 = bitcast %TSiSg* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %10 = bitcast [1 x i8]* %9 to i1*
  %11 = load i1, i1* %10, align 8
  %12 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 9, i8* %12)
  %13 = zext i1 %11 to i8
  %14 = insertvalue { i64, i8 } undef, i64 %8, 0
  %15 = insertvalue { i64, i8 } %14, i8 %13, 1
  ret { i64, i8 } %15
}

define internal swiftcc { i64, i8 } @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyFSiSgyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = alloca %TSiSg, align 8
  %3 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 9, i8* %3)
  %4 = bitcast %TSiSg* %2 to %TSi*
  %._value = getelementptr inbounds %TSi, %TSi* %4, i32 0, i32 0
  store i64 2, i64* %._value, align 8
  %5 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %6 = bitcast [1 x i8]* %5 to i1*
  store i1 false, i1* %6, align 8
  %7 = bitcast %TSiSg* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %TSiSg, %TSiSg* %2, i32 0, i32 1
  %10 = bitcast [1 x i8]* %9 to i1*
  %11 = load i1, i1* %10, align 8
  %12 = bitcast %TSiSg* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 9, i8* %12)
  %13 = zext i1 %11 to i8
  %14 = insertvalue { i64, i8 } undef, i64 %8, 0
  %15 = insertvalue { i64, i8 } %14, i8 %13, 1
  ret { i64, i8 } %15
}

define internal void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyFTo"(%9*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %9* %0 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C024test_whenOptionalsAreNotC6_failsyyF"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CfD"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %0, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %1, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %18, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %18
}

define internal %9* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%9*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %9* %0 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %14 to %9*
  ret %9* %15
}

define internal swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %1, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %17, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %17
}

define internal %9* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%9*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %9* %0 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %9 to %9*
  ret %9* %10
}

define internal swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CACycfc"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %0, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  store %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %15, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*, %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %15
}

define internal %9* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CACycfcTo"(%9*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %9* %0 to %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CACycfc"(%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C* %8 to %9*
  ret %9* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyF"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %0, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyFSaySSGyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyFSaySSGyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSaySSGMD") #6
  %13 = call i8** @"$sSaySSGSayxGSQsSQRzlWl"() #6
  %14 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %12, i8** %13)
  %15 = extractvalue { i8*, %swift.refcounted* } %14, 0
  %16 = extractvalue { i8*, %swift.refcounted* } %14, 1
  %17 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %16) #3
  %18 = bitcast %swift.refcounted* %16 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSa*, %swift.refcounted*, %swift.error**)* @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.18" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSa*, %swift.refcounted*, %swift.error**)* @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.19" to i8*), %swift.opaque* %7, i8* %15, %swift.opaque* %18, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 156, %swift.type* %12, i8** %13)
  call void @swift_release(%swift.refcounted* %16) #3
  call void @swift_release(%swift.refcounted* %16) #3
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyFSaySSGyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 3, %swift.type* @"$sSSN")
  %3 = extractvalue { %swift.bridge*, i8* } %2, 0
  %4 = extractvalue { %swift.bridge*, i8* } %2, 1
  %5 = bitcast i8* %4 to %TSS*
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %._guts = getelementptr inbounds %TSS, %TSS* %5, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %7, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %8, %swift.bridge** %._guts._object._object, align 8
  %9 = getelementptr inbounds %TSS, %TSS* %5, i64 1
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %._guts1 = getelementptr inbounds %TSS, %TSS* %9, i32 0, i32 0
  %._guts1._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts1, i32 0, i32 0
  %._guts1._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 0
  %._guts1._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts1._object._countAndFlagsBits, i32 0, i32 0
  store i64 %11, i64* %._guts1._object._countAndFlagsBits._value, align 8
  %._guts1._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 1
  store %swift.bridge* %12, %swift.bridge** %._guts1._object._object, align 8
  %13 = getelementptr inbounds %TSS, %TSS* %5, i64 2
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %._guts2 = getelementptr inbounds %TSS, %TSS* %13, i32 0, i32 0
  %._guts2._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts2, i32 0, i32 0
  %._guts2._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 0
  %._guts2._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts2._object._countAndFlagsBits, i32 0, i32 0
  store i64 %15, i64* %._guts2._object._countAndFlagsBits._value, align 8
  %._guts2._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 1
  store %swift.bridge* %16, %swift.bridge** %._guts2._object._object, align 8
  ret %swift.bridge* %3
}

define linkonce_odr hidden swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSa* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to %swift.bridge* (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc %swift.bridge* %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = load %swift.error*, %swift.error** %4, align 8
  %9 = icmp ne %swift.error* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = phi %swift.bridge* [ %7, %entry ]
  %._buffer = getelementptr inbounds %TSa, %TSa* %0, i32 0, i32 0
  %._buffer._storage = getelementptr inbounds %Ts12_ArrayBufferV, %Ts12_ArrayBufferV* %._buffer, i32 0, i32 0
  %._buffer._storage.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, %Ts14_BridgeStorageV* %._buffer._storage, i32 0, i32 0
  store %swift.bridge* %11, %swift.bridge** %._buffer._storage.rawValue, align 8
  ret void

12:                                               ; preds = %entry
  %13 = phi %swift.error* [ %8, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyFSaySSGyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 3, %swift.type* @"$sSSN")
  %3 = extractvalue { %swift.bridge*, i8* } %2, 0
  %4 = extractvalue { %swift.bridge*, i8* } %2, 1
  %5 = bitcast i8* %4 to %TSS*
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %._guts = getelementptr inbounds %TSS, %TSS* %5, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %7, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %8, %swift.bridge** %._guts._object._object, align 8
  %9 = getelementptr inbounds %TSS, %TSS* %5, i64 1
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %._guts1 = getelementptr inbounds %TSS, %TSS* %9, i32 0, i32 0
  %._guts1._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts1, i32 0, i32 0
  %._guts1._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 0
  %._guts1._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts1._object._countAndFlagsBits, i32 0, i32 0
  store i64 %11, i64* %._guts1._object._countAndFlagsBits._value, align 8
  %._guts1._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 1
  store %swift.bridge* %12, %swift.bridge** %._guts1._object._object, align 8
  %13 = getelementptr inbounds %TSS, %TSS* %5, i64 2
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %._guts2 = getelementptr inbounds %TSS, %TSS* %13, i32 0, i32 0
  %._guts2._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts2, i32 0, i32 0
  %._guts2._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 0
  %._guts2._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts2._object._countAndFlagsBits, i32 0, i32 0
  store i64 %15, i64* %._guts2._object._countAndFlagsBits._value, align 8
  %._guts2._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 1
  store %swift.bridge* %16, %swift.bridge** %._guts2._object._object, align 8
  ret %swift.bridge* %3
}

define internal void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyFTo"(%10*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %10* %0 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C018test_whenArraysAreC7_passesyyF"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyF"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %0, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyFSaySSGyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyFSaySSGyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSaySSGMD") #6
  %13 = call i8** @"$sSaySSGSayxGSQsSQRzlWl"() #6
  %14 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %12, i8** %13)
  %15 = extractvalue { i8*, %swift.refcounted* } %14, 0
  %16 = extractvalue { i8*, %swift.refcounted* } %14, 1
  %17 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %16) #3
  %18 = bitcast %swift.refcounted* %16 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSa*, %swift.refcounted*, %swift.error**)* @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSa*, %swift.refcounted*, %swift.error**)* @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.17" to i8*), %swift.opaque* %7, i8* %15, %swift.opaque* %18, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 161, %swift.type* %12, i8** %13)
  call void @swift_release(%swift.refcounted* %16) #3
  call void @swift_release(%swift.refcounted* %16) #3
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyFSaySSGyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 3, %swift.type* @"$sSSN")
  %3 = extractvalue { %swift.bridge*, i8* } %2, 0
  %4 = extractvalue { %swift.bridge*, i8* } %2, 1
  %5 = bitcast i8* %4 to %TSS*
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %._guts = getelementptr inbounds %TSS, %TSS* %5, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %7, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %8, %swift.bridge** %._guts._object._object, align 8
  %9 = getelementptr inbounds %TSS, %TSS* %5, i64 1
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %._guts1 = getelementptr inbounds %TSS, %TSS* %9, i32 0, i32 0
  %._guts1._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts1, i32 0, i32 0
  %._guts1._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 0
  %._guts1._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts1._object._countAndFlagsBits, i32 0, i32 0
  store i64 %11, i64* %._guts1._object._countAndFlagsBits._value, align 8
  %._guts1._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 1
  store %swift.bridge* %12, %swift.bridge** %._guts1._object._object, align 8
  %13 = getelementptr inbounds %TSS, %TSS* %5, i64 2
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %._guts2 = getelementptr inbounds %TSS, %TSS* %13, i32 0, i32 0
  %._guts2._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts2, i32 0, i32 0
  %._guts2._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 0
  %._guts2._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts2._object._countAndFlagsBits, i32 0, i32 0
  store i64 %15, i64* %._guts2._object._countAndFlagsBits._value, align 8
  %._guts2._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 1
  store %swift.bridge* %16, %swift.bridge** %._guts2._object._object, align 8
  ret %swift.bridge* %3
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyFSaySSGyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 3, %swift.type* @"$sSSN")
  %3 = extractvalue { %swift.bridge*, i8* } %2, 0
  %4 = extractvalue { %swift.bridge*, i8* } %2, 1
  %5 = bitcast i8* %4 to %TSS*
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %._guts = getelementptr inbounds %TSS, %TSS* %5, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %7, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %8, %swift.bridge** %._guts._object._object, align 8
  %9 = getelementptr inbounds %TSS, %TSS* %5, i64 1
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %._guts1 = getelementptr inbounds %TSS, %TSS* %9, i32 0, i32 0
  %._guts1._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts1, i32 0, i32 0
  %._guts1._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 0
  %._guts1._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts1._object._countAndFlagsBits, i32 0, i32 0
  store i64 %11, i64* %._guts1._object._countAndFlagsBits._value, align 8
  %._guts1._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts1._object, i32 0, i32 1
  store %swift.bridge* %12, %swift.bridge** %._guts1._object._object, align 8
  %13 = getelementptr inbounds %TSS, %TSS* %5, i64 2
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %._guts2 = getelementptr inbounds %TSS, %TSS* %13, i32 0, i32 0
  %._guts2._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts2, i32 0, i32 0
  %._guts2._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 0
  %._guts2._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts2._object._countAndFlagsBits, i32 0, i32 0
  store i64 %15, i64* %._guts2._object._countAndFlagsBits._value, align 8
  %._guts2._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts2._object, i32 0, i32 1
  store %swift.bridge* %16, %swift.bridge** %._guts2._object._object, align 8
  ret %swift.bridge* %3
}

define internal void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyFTo"(%10*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %10* %0 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C021test_whenArraysAreNotC6_failsyyF"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CfD"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %0, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %1, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %18, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %18
}

define internal %10* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%10*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %10* %0 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %14 to %10*
  ret %10* %15
}

define internal swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %1, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %17, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %17
}

define internal %10* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%10*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %10* %0 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %9 to %10*
  ret %10* %10
}

define internal swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CACycfc"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %0, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  store %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %15, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*, %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %15
}

define internal %10* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CACycfcTo"(%10*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %10* %0 to %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CACycfc"(%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C* %8 to %10*
  ret %10* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyF"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %0, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyFSDyS2SGyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyFSDyS2SGyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSDyS2SGMD") #6
  %13 = call i8** @"$sSDyS2SGSDyxq_GSQsSQR_rlWl"() #6
  %14 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %12, i8** %13)
  %15 = extractvalue { i8*, %swift.refcounted* } %14, 0
  %16 = extractvalue { i8*, %swift.refcounted* } %14, 1
  %17 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %16) #3
  %18 = bitcast %swift.refcounted* %16 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSD*, %swift.refcounted*, %swift.error**)* @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TRTA" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSD*, %swift.refcounted*, %swift.error**)* @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.16" to i8*), %swift.opaque* %7, i8* %15, %swift.opaque* %18, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 190, %swift.type* %12, i8** %13)
  call void @swift_release(%swift.refcounted* %16) #3
  call void @swift_release(%swift.refcounted* %16) #3
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyFSDyS2SGyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSS_SStMD") #6
  %3 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 2, %swift.type* %2)
  %4 = extractvalue { %swift.bridge*, i8* } %3, 0
  %5 = extractvalue { %swift.bridge*, i8* } %3, 1
  %6 = bitcast i8* %5 to <{ %TSS, %TSS }>*
  %.elt = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %6, i32 0, i32 0
  %.elt1 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %6, i32 0, i32 1
  %7 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %8 = extractvalue { i64, %swift.bridge* } %7, 0
  %9 = extractvalue { i64, %swift.bridge* } %7, 1
  %.elt._guts = getelementptr inbounds %TSS, %TSS* %.elt, i32 0, i32 0
  %.elt._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt._guts, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %8, i64* %.elt._guts._object._countAndFlagsBits._value, align 8
  %.elt._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 1
  store %swift.bridge* %9, %swift.bridge** %.elt._guts._object._object, align 8
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %.elt1._guts = getelementptr inbounds %TSS, %TSS* %.elt1, i32 0, i32 0
  %.elt1._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt1._guts, i32 0, i32 0
  %.elt1._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt1._guts._object, i32 0, i32 0
  %.elt1._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt1._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %11, i64* %.elt1._guts._object._countAndFlagsBits._value, align 8
  %.elt1._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt1._guts._object, i32 0, i32 1
  store %swift.bridge* %12, %swift.bridge** %.elt1._guts._object._object, align 8
  %13 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %6, i64 1
  %.elt2 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %13, i32 0, i32 0
  %.elt3 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %13, i32 0, i32 1
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %.elt2._guts = getelementptr inbounds %TSS, %TSS* %.elt2, i32 0, i32 0
  %.elt2._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt2._guts, i32 0, i32 0
  %.elt2._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt2._guts._object, i32 0, i32 0
  %.elt2._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt2._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %15, i64* %.elt2._guts._object._countAndFlagsBits._value, align 8
  %.elt2._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt2._guts._object, i32 0, i32 1
  store %swift.bridge* %16, %swift.bridge** %.elt2._guts._object._object, align 8
  %17 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @65, i64 0, i64 0), i64 4, i1 true)
  %18 = extractvalue { i64, %swift.bridge* } %17, 0
  %19 = extractvalue { i64, %swift.bridge* } %17, 1
  %.elt3._guts = getelementptr inbounds %TSS, %TSS* %.elt3, i32 0, i32 0
  %.elt3._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt3._guts, i32 0, i32 0
  %.elt3._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt3._guts._object, i32 0, i32 0
  %.elt3._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt3._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %18, i64* %.elt3._guts._object._countAndFlagsBits._value, align 8
  %.elt3._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt3._guts._object, i32 0, i32 1
  store %swift.bridge* %19, %swift.bridge** %.elt3._guts._object._object, align 8
  %20 = call swiftcc %swift.bridge* @"$sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfC"(%swift.bridge* %4, %swift.type* @"$sSSN", %swift.type* @"$sSSN", i8** @"$sSSSHsWP")
  ret %swift.bridge* %20
}

define linkonce_odr hidden swiftcc void @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSD* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to %swift.bridge* (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc %swift.bridge* %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = load %swift.error*, %swift.error** %4, align 8
  %9 = icmp ne %swift.error* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = phi %swift.bridge* [ %7, %entry ]
  %._variant = getelementptr inbounds %TSD, %TSD* %0, i32 0, i32 0
  %._variant.object = getelementptr inbounds %TSD8_VariantV, %TSD8_VariantV* %._variant, i32 0, i32 0
  %._variant.object.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, %Ts14_BridgeStorageV* %._variant.object, i32 0, i32 0
  store %swift.bridge* %11, %swift.bridge** %._variant.object.rawValue, align 8
  ret void

12:                                               ; preds = %entry
  %13 = phi %swift.error* [ %8, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyFSDyS2SGyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSS_SStMD") #6
  %3 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 2, %swift.type* %2)
  %4 = extractvalue { %swift.bridge*, i8* } %3, 0
  %5 = extractvalue { %swift.bridge*, i8* } %3, 1
  %6 = bitcast i8* %5 to <{ %TSS, %TSS }>*
  %.elt = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %6, i32 0, i32 0
  %.elt1 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %6, i32 0, i32 1
  %7 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %8 = extractvalue { i64, %swift.bridge* } %7, 0
  %9 = extractvalue { i64, %swift.bridge* } %7, 1
  %.elt._guts = getelementptr inbounds %TSS, %TSS* %.elt, i32 0, i32 0
  %.elt._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt._guts, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %8, i64* %.elt._guts._object._countAndFlagsBits._value, align 8
  %.elt._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 1
  store %swift.bridge* %9, %swift.bridge** %.elt._guts._object._object, align 8
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @65, i64 0, i64 0), i64 4, i1 true)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %.elt1._guts = getelementptr inbounds %TSS, %TSS* %.elt1, i32 0, i32 0
  %.elt1._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt1._guts, i32 0, i32 0
  %.elt1._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt1._guts._object, i32 0, i32 0
  %.elt1._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt1._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %11, i64* %.elt1._guts._object._countAndFlagsBits._value, align 8
  %.elt1._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt1._guts._object, i32 0, i32 1
  store %swift.bridge* %12, %swift.bridge** %.elt1._guts._object._object, align 8
  %13 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %6, i64 1
  %.elt2 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %13, i32 0, i32 0
  %.elt3 = getelementptr inbounds <{ %TSS, %TSS }>, <{ %TSS, %TSS }>* %13, i32 0, i32 1
  %14 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %.elt2._guts = getelementptr inbounds %TSS, %TSS* %.elt2, i32 0, i32 0
  %.elt2._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt2._guts, i32 0, i32 0
  %.elt2._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt2._guts._object, i32 0, i32 0
  %.elt2._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt2._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %15, i64* %.elt2._guts._object._countAndFlagsBits._value, align 8
  %.elt2._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt2._guts._object, i32 0, i32 1
  store %swift.bridge* %16, %swift.bridge** %.elt2._guts._object._object, align 8
  %17 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %18 = extractvalue { i64, %swift.bridge* } %17, 0
  %19 = extractvalue { i64, %swift.bridge* } %17, 1
  %.elt3._guts = getelementptr inbounds %TSS, %TSS* %.elt3, i32 0, i32 0
  %.elt3._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt3._guts, i32 0, i32 0
  %.elt3._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt3._guts._object, i32 0, i32 0
  %.elt3._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt3._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %18, i64* %.elt3._guts._object._countAndFlagsBits._value, align 8
  %.elt3._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt3._guts._object, i32 0, i32 1
  store %swift.bridge* %19, %swift.bridge** %.elt3._guts._object._object, align 8
  %20 = call swiftcc %swift.bridge* @"$sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfC"(%swift.bridge* %4, %swift.type* @"$sSSN", %swift.type* @"$sSSN", i8** @"$sSSSHsWP")
  ret %swift.bridge* %20
}

define internal void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyFTo"(%11*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %11* %0 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C024test_whenDictionariesAreC7_passesyyF"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyF"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %0, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self.debug, align 8
  %2 = alloca i8, i64 32, align 16
  %3 = bitcast i8* %2 to %swift.opaque*
  %4 = bitcast %swift.opaque* %3 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyFSDySSSo12NSDictionaryCGyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %6 = alloca i8, i64 32, align 16
  %7 = bitcast i8* %6 to %swift.opaque*
  %8 = bitcast %swift.opaque* %7 to <{ %swift.refcounted, %swift.noescape.function }>*
  %9 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %8, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 0
  store i8* bitcast (%swift.bridge* (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyFSDySSSo12NSDictionaryCGyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %9, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %10

10:                                               ; preds = %entry
  br label %11

11:                                               ; preds = %10
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSDySSSo12NSDictionaryCGMD") #6
  %13 = call i8** @"$sSDySSSo12NSDictionaryCGSDyxq_GSQsSQR_rlWl"() #6
  %14 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* %12, i8** %13)
  %15 = extractvalue { i8*, %swift.refcounted* } %14, 0
  %16 = extractvalue { i8*, %swift.refcounted* } %14, 1
  %17 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %16) #3
  %18 = bitcast %swift.refcounted* %16 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSD*, %swift.refcounted*, %swift.error**)* @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TRTA" to i8*), %swift.opaque* %3, i8* bitcast (void (%TSD*, %swift.refcounted*, %swift.error**)* @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TRTA.15" to i8*), %swift.opaque* %7, i8* %15, %swift.opaque* %18, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 195, %swift.type* %12, i8** %13)
  call void @swift_release(%swift.refcounted* %16) #3
  call void @swift_release(%swift.refcounted* %16) #3
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyFSDySSSo12NSDictionaryCGyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSS_So12NSDictionaryCtMD") #6
  %3 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 1, %swift.type* %2)
  %4 = extractvalue { %swift.bridge*, i8* } %3, 0
  %5 = extractvalue { %swift.bridge*, i8* } %3, 1
  %6 = bitcast i8* %5 to <{ %TSS, %TSo12NSDictionaryC* }>*
  %.elt = getelementptr inbounds <{ %TSS, %TSo12NSDictionaryC* }>, <{ %TSS, %TSo12NSDictionaryC* }>* %6, i32 0, i32 0
  %.elt1 = getelementptr inbounds <{ %TSS, %TSo12NSDictionaryC* }>, <{ %TSS, %TSo12NSDictionaryC* }>* %6, i32 0, i32 1
  %7 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %8 = extractvalue { i64, %swift.bridge* } %7, 0
  %9 = extractvalue { i64, %swift.bridge* } %7, 1
  %.elt._guts = getelementptr inbounds %TSS, %TSS* %.elt, i32 0, i32 0
  %.elt._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt._guts, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %8, i64* %.elt._guts._object._countAndFlagsBits._value, align 8
  %.elt._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 1
  store %swift.bridge* %9, %swift.bridge** %.elt._guts._object._object, align 8
  %10 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$syp_yptMD") #6
  %11 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 1, %swift.type* %10)
  %12 = extractvalue { %swift.bridge*, i8* } %11, 0
  %13 = extractvalue { %swift.bridge*, i8* } %11, 1
  %14 = bitcast i8* %13 to <{ %Any, %Any }>*
  %.elt2 = getelementptr inbounds <{ %Any, %Any }>, <{ %Any, %Any }>* %14, i32 0, i32 0
  %.elt3 = getelementptr inbounds <{ %Any, %Any }>, <{ %Any, %Any }>* %14, i32 0, i32 1
  %15 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %16 = extractvalue { i64, %swift.bridge* } %15, 0
  %17 = extractvalue { i64, %swift.bridge* } %15, 1
  %18 = getelementptr inbounds %Any, %Any* %.elt2, i32 0, i32 1
  store %swift.type* @"$sSSN", %swift.type** %18, align 8
  %19 = getelementptr inbounds %Any, %Any* %.elt2, i32 0, i32 0
  %20 = getelementptr inbounds %Any, %Any* %.elt2, i32 0, i32 0
  %21 = bitcast [24 x i8]* %20 to %TSS*
  %._guts = getelementptr inbounds %TSS, %TSS* %21, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %16, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %17, %swift.bridge** %._guts._object._object, align 8
  %22 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @66, i64 0, i64 0), i64 3, i1 true)
  %23 = extractvalue { i64, %swift.bridge* } %22, 0
  %24 = extractvalue { i64, %swift.bridge* } %22, 1
  %25 = getelementptr inbounds %Any, %Any* %.elt3, i32 0, i32 1
  store %swift.type* @"$sSSN", %swift.type** %25, align 8
  %26 = getelementptr inbounds %Any, %Any* %.elt3, i32 0, i32 0
  %27 = getelementptr inbounds %Any, %Any* %.elt3, i32 0, i32 0
  %28 = bitcast [24 x i8]* %27 to %TSS*
  %._guts4 = getelementptr inbounds %TSS, %TSS* %28, i32 0, i32 0
  %._guts4._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts4, i32 0, i32 0
  %._guts4._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts4._object, i32 0, i32 0
  %._guts4._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts4._object._countAndFlagsBits, i32 0, i32 0
  store i64 %23, i64* %._guts4._object._countAndFlagsBits._value, align 8
  %._guts4._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts4._object, i32 0, i32 1
  store %swift.bridge* %24, %swift.bridge** %._guts4._object._object, align 8
  %29 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo12NSDictionaryCMD") #6
  %30 = call swiftcc %TSo12NSDictionaryC* @"$sSo12NSDictionaryC10FoundationE17dictionaryLiteralAByp_yptd_tcfC"(%swift.bridge* %12, %swift.type* swiftself %29)
  store %TSo12NSDictionaryC* %30, %TSo12NSDictionaryC** %.elt1, align 8
  %31 = call swiftcc %swift.bridge* @"$sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfC"(%swift.bridge* %4, %swift.type* @"$sSSN", %swift.type* %29, i8** @"$sSSSHsWP")
  ret %swift.bridge* %31
}

define linkonce_odr hidden swiftcc void @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TR"(%TSD* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to %swift.bridge* (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc %swift.bridge* %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = load %swift.error*, %swift.error** %4, align 8
  %9 = icmp ne %swift.error* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = phi %swift.bridge* [ %7, %entry ]
  %._variant = getelementptr inbounds %TSD, %TSD* %0, i32 0, i32 0
  %._variant.object = getelementptr inbounds %TSD8_VariantV, %TSD8_VariantV* %._variant, i32 0, i32 0
  %._variant.object.rawValue = getelementptr inbounds %Ts14_BridgeStorageV, %Ts14_BridgeStorageV* %._variant.object, i32 0, i32 0
  store %swift.bridge* %11, %swift.bridge** %._variant.object.rawValue, align 8
  ret void

12:                                               ; preds = %entry
  %13 = phi %swift.error* [ %8, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  ret void
}

define internal swiftcc %swift.bridge* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyFSDySSSo12NSDictionaryCGyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSS_So12NSDictionaryCtMD") #6
  %3 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 1, %swift.type* %2)
  %4 = extractvalue { %swift.bridge*, i8* } %3, 0
  %5 = extractvalue { %swift.bridge*, i8* } %3, 1
  %6 = bitcast i8* %5 to <{ %TSS, %TSo12NSDictionaryC* }>*
  %.elt = getelementptr inbounds <{ %TSS, %TSo12NSDictionaryC* }>, <{ %TSS, %TSo12NSDictionaryC* }>* %6, i32 0, i32 0
  %.elt1 = getelementptr inbounds <{ %TSS, %TSo12NSDictionaryC* }>, <{ %TSS, %TSo12NSDictionaryC* }>* %6, i32 0, i32 1
  %7 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i64 0, i64 0), i64 3, i1 true)
  %8 = extractvalue { i64, %swift.bridge* } %7, 0
  %9 = extractvalue { i64, %swift.bridge* } %7, 1
  %.elt._guts = getelementptr inbounds %TSS, %TSS* %.elt, i32 0, i32 0
  %.elt._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %.elt._guts, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 0
  %.elt._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %.elt._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %8, i64* %.elt._guts._object._countAndFlagsBits._value, align 8
  %.elt._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %.elt._guts._object, i32 0, i32 1
  store %swift.bridge* %9, %swift.bridge** %.elt._guts._object._object, align 8
  %10 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$syp_yptMD") #6
  %11 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 1, %swift.type* %10)
  %12 = extractvalue { %swift.bridge*, i8* } %11, 0
  %13 = extractvalue { %swift.bridge*, i8* } %11, 1
  %14 = bitcast i8* %13 to <{ %Any, %Any }>*
  %.elt2 = getelementptr inbounds <{ %Any, %Any }>, <{ %Any, %Any }>* %14, i32 0, i32 0
  %.elt3 = getelementptr inbounds <{ %Any, %Any }>, <{ %Any, %Any }>* %14, i32 0, i32 1
  %15 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i64 0, i64 0), i64 3, i1 true)
  %16 = extractvalue { i64, %swift.bridge* } %15, 0
  %17 = extractvalue { i64, %swift.bridge* } %15, 1
  %18 = getelementptr inbounds %Any, %Any* %.elt2, i32 0, i32 1
  store %swift.type* @"$sSSN", %swift.type** %18, align 8
  %19 = getelementptr inbounds %Any, %Any* %.elt2, i32 0, i32 0
  %20 = getelementptr inbounds %Any, %Any* %.elt2, i32 0, i32 0
  %21 = bitcast [24 x i8]* %20 to %TSS*
  %._guts = getelementptr inbounds %TSS, %TSS* %21, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %16, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %17, %swift.bridge** %._guts._object._object, align 8
  %22 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @65, i64 0, i64 0), i64 4, i1 true)
  %23 = extractvalue { i64, %swift.bridge* } %22, 0
  %24 = extractvalue { i64, %swift.bridge* } %22, 1
  %25 = getelementptr inbounds %Any, %Any* %.elt3, i32 0, i32 1
  store %swift.type* @"$sSSN", %swift.type** %25, align 8
  %26 = getelementptr inbounds %Any, %Any* %.elt3, i32 0, i32 0
  %27 = getelementptr inbounds %Any, %Any* %.elt3, i32 0, i32 0
  %28 = bitcast [24 x i8]* %27 to %TSS*
  %._guts4 = getelementptr inbounds %TSS, %TSS* %28, i32 0, i32 0
  %._guts4._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts4, i32 0, i32 0
  %._guts4._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts4._object, i32 0, i32 0
  %._guts4._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts4._object._countAndFlagsBits, i32 0, i32 0
  store i64 %23, i64* %._guts4._object._countAndFlagsBits._value, align 8
  %._guts4._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts4._object, i32 0, i32 1
  store %swift.bridge* %24, %swift.bridge** %._guts4._object._object, align 8
  %29 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo12NSDictionaryCMD") #6
  %30 = call swiftcc %TSo12NSDictionaryC* @"$sSo12NSDictionaryC10FoundationE17dictionaryLiteralAByp_yptd_tcfC"(%swift.bridge* %12, %swift.type* swiftself %29)
  store %TSo12NSDictionaryC* %30, %TSo12NSDictionaryC** %.elt1, align 8
  %31 = call swiftcc %swift.bridge* @"$sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfC"(%swift.bridge* %4, %swift.type* @"$sSSN", %swift.type* %29, i8** @"$sSSSHsWP")
  ret %swift.bridge* %31
}

define internal void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyFTo"(%11*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %11* %0 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C027test_whenDictionariesAreNotC6_failsyyF"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CfD"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %0, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %1, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %18, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %18
}

define internal %11* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%11*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %11* %0 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %14 to %11*
  ret %11* %15
}

define internal swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %1, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %17, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %17
}

define internal %11* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%11*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %11* %0 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %9 to %11*
  ret %11* %10
}

define internal swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CACycfc"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %0, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  store %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %15, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*, %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %15
}

define internal %11* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CACycfcTo"(%11*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %11* %0 to %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CACycfc"(%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C* %8 to %11*
  ret %11* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyF"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %2 = alloca %TSd, align 8
  %3 = alloca %TSd, align 8
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self.debug, align 8
  %4 = alloca i8, i64 32, align 16
  %5 = bitcast i8* %4 to %swift.opaque*
  %6 = bitcast %swift.opaque* %5 to <{ %swift.refcounted, %swift.noescape.function }>*
  %7 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %6, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %7, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %7, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %8 = alloca i8, i64 32, align 16
  %9 = bitcast i8* %8 to %swift.opaque*
  %10 = bitcast %swift.opaque* %9 to <{ %swift.refcounted, %swift.noescape.function }>*
  %11 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %10, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %11, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %11, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  %12 = bitcast %TSd* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12)
  %._value = getelementptr inbounds %TSd, %TSd* %2, i32 0, i32 0
  store double 1.000000e-01, double* %._value, align 8
  br label %13

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %13
  %15 = call i8** @"$sS2dSFsWl"() #6
  %16 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_"(%swift.type* @"$sSdN", i8** %15)
  %17 = extractvalue { i8*, %swift.refcounted* } %16, 0
  %18 = extractvalue { i8*, %swift.refcounted* } %16, 1
  %19 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %18) #3
  %20 = bitcast %swift.refcounted* %18 to %swift.opaque*
  %21 = bitcast %TSd* %2 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlF"(i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.11" to i8*), %swift.opaque* %5, i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.12" to i8*), %swift.opaque* %9, %swift.opaque* noalias nocapture %21, i8* %17, %swift.opaque* %20, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 224, %swift.type* @"$sSdN", i8** %15)
  call void @swift_release(%swift.refcounted* %18) #3
  call void @swift_release(%swift.refcounted* %18) #3
  %22 = bitcast %TSd* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  %spsave = call i8* @llvm.stacksave()
  %23 = alloca i8, i64 32, align 16
  %24 = bitcast i8* %23 to %swift.opaque*
  %25 = bitcast %swift.opaque* %24 to <{ %swift.refcounted, %swift.noescape.function }>*
  %26 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %25, i32 0, i32 1
  %.fn3 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu1_" to i8*), i8** %.fn3, align 8
  %.data4 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data4, align 8
  %spsave5 = call i8* @llvm.stacksave()
  %27 = alloca i8, i64 32, align 16
  %28 = bitcast i8* %27 to %swift.opaque*
  %29 = bitcast %swift.opaque* %28 to <{ %swift.refcounted, %swift.noescape.function }>*
  %30 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %29, i32 0, i32 1
  %.fn6 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %30, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu2_" to i8*), i8** %.fn6, align 8
  %.data7 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %30, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data7, align 8
  %31 = bitcast %TSd* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31)
  %._value8 = getelementptr inbounds %TSd, %TSd* %3, i32 0, i32 0
  store double 1.000000e-01, double* %._value8, align 8
  br label %32

32:                                               ; preds = %14
  br label %33

33:                                               ; preds = %32
  %34 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_"(%swift.type* @"$sSdN", i8** %15)
  %35 = extractvalue { i8*, %swift.refcounted* } %34, 0
  %36 = extractvalue { i8*, %swift.refcounted* } %34, 1
  %37 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %36) #3
  %38 = bitcast %swift.refcounted* %36 to %swift.opaque*
  %39 = bitcast %TSd* %3 to %swift.opaque*
  call swiftcc void @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlF"(i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.13" to i8*), %swift.opaque* %24, i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.14" to i8*), %swift.opaque* %28, %swift.opaque* noalias nocapture %39, i8* %35, %swift.opaque* %38, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 225, %swift.type* @"$sSdN", i8** %15)
  call void @swift_release(%swift.refcounted* %36) #3
  call void @swift_release(%swift.refcounted* %36) #3
  %40 = bitcast %TSd* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  call void @llvm.stackrestore(i8* %spsave5)
  call void @llvm.stackrestore(i8* %spsave)
  ret void
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.000000e+00
}

define linkonce_odr hidden swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to double (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc double %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = load %swift.error*, %swift.error** %4, align 8
  %9 = icmp ne %swift.error* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %entry
  %11 = phi double [ %7, %entry ]
  %._value = getelementptr inbounds %TSd, %TSd* %0, i32 0, i32 0
  store double %11, double* %._value, align 8
  ret void

12:                                               ; preds = %entry
  %13 = phi %swift.error* [ %8, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %13, %swift.error** %4, align 8
  ret void
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.090000e+00
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_"(%swift.type* %T, i8** %T.FloatingPoint) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_SSycfu_" to i8*), %swift.refcounted* null }
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu1_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.000000e+00
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFSdyKXEfu2_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.110000e+00
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_"(%swift.type* %T, i8** %T.FloatingPoint) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_SSycfu_" to i8*), %swift.refcounted* null }
}

define internal void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyFTo"(%12*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %12* %0 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C09test_whenC7_passesyyF"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyF"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %2 = alloca %TSd, align 8
  %3 = alloca %TSd, align 8
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self.debug, align 8
  %4 = alloca i8, i64 32, align 16
  %5 = bitcast i8* %4 to %swift.opaque*
  %6 = bitcast %swift.opaque* %5 to <{ %swift.refcounted, %swift.noescape.function }>*
  %7 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %6, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %7, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu_" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %7, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data, align 8
  %8 = alloca i8, i64 32, align 16
  %9 = bitcast i8* %8 to %swift.opaque*
  %10 = bitcast %swift.opaque* %9 to <{ %swift.refcounted, %swift.noescape.function }>*
  %11 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %10, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %11, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %11, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  %12 = bitcast %TSd* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12)
  %._value = getelementptr inbounds %TSd, %TSd* %2, i32 0, i32 0
  store double 1.000000e-01, double* %._value, align 8
  br label %13

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %13
  %15 = call i8** @"$sS2dSFsWl"() #6
  %16 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_"(%swift.type* @"$sSdN", i8** %15)
  %17 = extractvalue { i8*, %swift.refcounted* } %16, 0
  %18 = extractvalue { i8*, %swift.refcounted* } %16, 1
  %19 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %18) #3
  %20 = bitcast %swift.refcounted* %18 to %swift.opaque*
  %21 = bitcast %TSd* %2 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlF"(i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA" to i8*), %swift.opaque* %5, i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.8" to i8*), %swift.opaque* %9, %swift.opaque* noalias nocapture %21, i8* %17, %swift.opaque* %20, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 229, %swift.type* @"$sSdN", i8** %15)
  call void @swift_release(%swift.refcounted* %18) #3
  call void @swift_release(%swift.refcounted* %18) #3
  %22 = bitcast %TSd* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  %spsave = call i8* @llvm.stacksave()
  %23 = alloca i8, i64 32, align 16
  %24 = bitcast i8* %23 to %swift.opaque*
  %25 = bitcast %swift.opaque* %24 to <{ %swift.refcounted, %swift.noescape.function }>*
  %26 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %25, i32 0, i32 1
  %.fn3 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu1_" to i8*), i8** %.fn3, align 8
  %.data4 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data4, align 8
  %spsave5 = call i8* @llvm.stacksave()
  %27 = alloca i8, i64 32, align 16
  %28 = bitcast i8* %27 to %swift.opaque*
  %29 = bitcast %swift.opaque* %28 to <{ %swift.refcounted, %swift.noescape.function }>*
  %30 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %29, i32 0, i32 1
  %.fn6 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %30, i32 0, i32 0
  store i8* bitcast (double (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu2_" to i8*), i8** %.fn6, align 8
  %.data7 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %30, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data7, align 8
  %31 = bitcast %TSd* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31)
  %._value8 = getelementptr inbounds %TSd, %TSd* %3, i32 0, i32 0
  store double 1.000000e-01, double* %._value8, align 8
  br label %32

32:                                               ; preds = %14
  br label %33

33:                                               ; preds = %32
  %34 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_"(%swift.type* @"$sSdN", i8** %15)
  %35 = extractvalue { i8*, %swift.refcounted* } %34, 0
  %36 = extractvalue { i8*, %swift.refcounted* } %34, 1
  %37 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %36) #3
  %38 = bitcast %swift.refcounted* %36 to %swift.opaque*
  %39 = bitcast %TSd* %3 to %swift.opaque*
  call swiftcc void @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlF"(i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.9" to i8*), %swift.opaque* %24, i8* bitcast (void (%TSd*, %swift.refcounted*, %swift.error**)* @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.10" to i8*), %swift.opaque* %28, %swift.opaque* noalias nocapture %39, i8* %35, %swift.opaque* %38, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 230, %swift.type* @"$sSdN", i8** %15)
  call void @swift_release(%swift.refcounted* %36) #3
  call void @swift_release(%swift.refcounted* %36) #3
  %40 = bitcast %TSd* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  call void @llvm.stackrestore(i8* %spsave5)
  call void @llvm.stackrestore(i8* %spsave)
  ret void
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.000000e+00
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.110000e+00
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu1_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.000000e+00
}

define internal swiftcc double @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFSdyKXEfu2_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret double 1.090000e+00
}

define internal void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyFTo"(%12*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %12* %0 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C012test_whenNotC6_failsyyF"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CfD"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %1, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %18, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %18
}

define internal %12* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%12*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %12* %0 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %14 to %12*
  ret %12* %15
}

define internal swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %1, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %17, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %17
}

define internal %12* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%12*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %12* %0 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %9 to %12*
  ret %12* %10
}

define internal swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CACycfc"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %0, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  store %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %15, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*, %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %15
}

define internal %12* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CACycfcTo"(%12*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %12* %0 to %T7_XCTestyycfU4_19AssertEqualTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CACycfc"(%T7_XCTestyycfU4_19AssertEqualTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU4_19AssertEqualTestCaseL_C* %8 to %12*
  ret %12* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU4_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU4_19AssertEqualTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal signext i8 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvgTo"(%13*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %11 = call swiftcc i1 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  %13 = call swiftcc i8 @"$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF"(i1 %11) #13
  ret i8 %13
}

define internal swiftcc i1 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.doThrow = bitcast i8* %3 to %TSb*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  %6 = load i1, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i1 %6
}

define internal void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvsTo"(%13*, i8*, i8 signext) unnamed_addr #0 {
entry:
  %3 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %12 = call swiftcc i1 @"$s10ObjectiveC22_convertObjCBoolToBoolySbAA0cD0VF"(i8 %2) #13
  call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvs"(i1 %12, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %3) #13
  %13 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %13)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvs"(i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i1, align 8
  %2 = bitcast i1* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 1, i1 false)
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i1 %0, i1* %value.debug, align 8
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.doThrow = bitcast i8* %5 to %TSb*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 %0, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSb* } @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.doThrow = bitcast i8* %4 to %TSb*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSb* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.resume.0" to i8*), %TSb* undef }, %TSb* %.doThrow, 1
  ret { i8*, %TSb* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivgTo"(%13*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %11 = call swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  ret i64 %11
}

define internal swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.errorCode = bitcast i8* %3 to %TSi*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  %6 = load i64, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i64 %6
}

define internal void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivsTo"(%13*, i8*, i64) unnamed_addr #0 {
entry:
  %3 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivs"(i64 %2, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %3) #13
  %12 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %12)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivs"(i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i64, align 8
  %2 = bitcast i64* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i64 %0, i64* %value.debug, align 8
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.errorCode = bitcast i8* %5 to %TSi*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 %0, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSi* } @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.errorCode = bitcast i8* %4 to %TSi*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSi* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.resume.0" to i8*), %TSi* undef }, %TSi* %.errorCode, 1
  ret { i8*, %TSi* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C14throwSomethingyyKF"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %3 = call swiftcc i1 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %0)
  br i1 %3, label %4, label %12

4:                                                ; preds = %entry
  %5 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCMD") #6
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @59, i64 0, i64 0), i64 8, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %9 = call swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %0)
  %10 = call swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfC"(i64 %7, %swift.bridge* %8, i64 %9, i64 0, %swift.type* swiftself %5)
  %11 = bitcast %TSo7NSErrorC* %10 to %swift.error*
  store %swift.error* %11, %swift.error** %1, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %1) #3
  store %swift.error* null, %swift.error** %1, align 8
  store %swift.error* %11, %swift.error** %1, align 8
  ret void

12:                                               ; preds = %entry
  ret void
}

define linkonce_odr hidden swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfC"(i64, %swift.bridge*, i64, i64, %swift.type* swiftself) #0 {
entry:
  %5 = call %objc_class* @swift_getObjCClassFromMetadata(%swift.type* %4) #6
  %6 = call %objc_object* @objc_allocWithZone(%objc_class* %5)
  %7 = bitcast %objc_object* %6 to %TSo7NSErrorC*
  %8 = call swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfcTO"(i64 %0, %swift.bridge* %1, i64 %2, i64 %3, %TSo7NSErrorC* swiftself %7)
  ret %TSo7NSErrorC* %8
}

define linkonce_odr hidden swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfcTO"(i64, %swift.bridge*, i64, i64, %TSo7NSErrorC* swiftself) #0 {
entry:
  %5 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %0, %swift.bridge* %1) #13
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %entry
  %8 = inttoptr i64 %3 to %swift.bridge*
  br label %9

9:                                                ; preds = %7
  %10 = phi %swift.bridge* [ %8, %7 ]
  %11 = call swiftcc %TSo12NSDictionaryC* @"$sSD10FoundationE19_bridgeToObjectiveCSo12NSDictionaryCyF"(%swift.bridge* %10, %swift.type* @"$sSSN", %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sypN", i32 0, i32 1), i8** @"$sSSSHsWP") #13
  %12 = ptrtoint %TSo12NSDictionaryC* %11 to i64
  call void @swift_bridgeObjectRelease(%swift.bridge* %10) #3
  br label %14

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %9, %13
  %15 = phi i64 [ 0, %13 ], [ %12, %9 ]
  %16 = load i8*, i8** @"\01L_selector(initWithDomain:code:userInfo:)", align 8
  %17 = bitcast %TSo8NSStringC* %5 to %0*
  %18 = inttoptr i64 %15 to %18*
  %19 = bitcast %TSo7NSErrorC* %4 to %20*
  %20 = call %20* bitcast (void ()* @objc_msgSend to %20* (%20*, i8*, %0*, i64, %18*)*)(%20* %19, i8* %16, %0* %17, i64 %2, %18* %18) #13
  %21 = bitcast %20* %20 to %TSo7NSErrorC*
  %22 = inttoptr i64 %15 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %24 = bitcast %TSo8NSStringC* %5 to i8*
  call void @llvm.objc.release(i8* %24)
  call void @swift_bridgeObjectRelease(%swift.bridge* %1) #3
  ret %TSo7NSErrorC* %21
}

define internal signext i8 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C14throwSomethingyyKFTo"(%13*, i8*, %20**) unnamed_addr #0 {
entry:
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %5 = ptrtoint %20** %2 to i64
  %6 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* @swift_isaMask, align 8
  %9 = and i64 %7, %8
  %10 = inttoptr i64 %9 to %swift.type*
  %11 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %4 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C14throwSomethingyyKF"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %4, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror) #13
  %14 = load %swift.error*, %swift.error** %swifterror, align 8
  %15 = icmp ne %swift.error* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %entry
  br label %33

17:                                               ; preds = %entry
  %18 = phi %swift.error* [ %14, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  %19 = icmp eq i64 %5, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %17
  %21 = inttoptr i64 %5 to i8*
  br label %22

22:                                               ; preds = %20
  %23 = phi i8* [ %21, %20 ]
  %24 = call swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error* %18) #13
  %25 = ptrtoint %TSo7NSErrorC* %24 to i64
  %26 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26)
  %27 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %TSo7NSErrorCSg* %3 to %swift.opaque*
  %29 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCSgMD") #6
  call swiftcc void @"$sSA7pointeexvs"(%swift.opaque* noalias nocapture %28, i8* %23, %swift.type* %29) #13
  %30 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30)
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

31:                                               ; preds = %17
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

32:                                               ; preds = %22, %31
  br label %33

33:                                               ; preds = %16, %32
  %34 = phi i8 [ 0, %32 ], [ 1, %16 ]
  %35 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %4 to i8*
  call void @llvm.objc.release(i8* %35)
  ret i8 %34
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyF"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %3 = call i8* @llvm.objc.retain(i8* %2)
  %4 = bitcast i8* %3 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %5 = alloca i8, i64 24, align 16
  %6 = bitcast i8* %5 to %swift.opaque*
  %7 = bitcast %swift.opaque* %6 to <{ %swift.refcounted, %T7_XCTestyycfU5_13ErrorTestCaseL_C* }>*
  %8 = getelementptr inbounds <{ %swift.refcounted, %T7_XCTestyycfU5_13ErrorTestCaseL_C* }>, <{ %swift.refcounted, %T7_XCTestyycfU5_13ErrorTestCaseL_C* }>* %7, i32 0, i32 1
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %8, align 8
  %9 = alloca i8, i64 32, align 16
  %10 = bitcast i8* %9 to %swift.opaque*
  %11 = bitcast %swift.opaque* %10 to <{ %swift.refcounted, %swift.noescape.function }>*
  %12 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %11, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %12, i32 0, i32 0
  store i8* bitcast (void (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %12, i32 0, i32 1
  store %swift.opaque* %6, %swift.opaque** %.data, align 8
  br label %13

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %13
  %15 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest20XCTAssertThrowsError__4file4line_yxyKXK_SSyXKs12StaticStringVSuys0D0_pXEtlFfA0_"(%swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  %16 = extractvalue { i8*, %swift.refcounted* } %15, 0
  %17 = extractvalue { i8*, %swift.refcounted* } %15, 1
  %18 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %17) #3
  %19 = bitcast %swift.refcounted* %17 to %swift.opaque*
  call swiftcc void @"$s6XCTest20XCTAssertThrowsError__4file4line_yxyKXK_SSyXKs12StaticStringVSuys0D0_pXEtlF"(i8* bitcast (void (%swift.opaque*, %swift.refcounted*, %swift.error**)* @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA.4" to i8*), %swift.opaque* %10, i8* %16, %swift.opaque* %19, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 257, i8* bitcast (void (%swift.error*)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_" to i8*), %swift.opaque* null, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  call void @swift_release(%swift.refcounted* %17) #3
  %20 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %20)
  call void @swift_release(%swift.refcounted* %17) #3
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_"(%T7_XCTestyycfU5_13ErrorTestCaseL_C*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = alloca %TSo7NSErrorC*, align 8
  %5 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5)
  %6 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7)
  %8 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %TSo7NSErrorC*
  store %TSo7NSErrorC* %10, %TSo7NSErrorC** %4, align 8
  %11 = bitcast %TSo7NSErrorC** %4 to i8*
  %12 = ptrtoint i8* %11 to i64
  %13 = load i8*, i8** @"\01L_selector(throwSomethingAndReturnError:)", align 8
  %14 = inttoptr i64 %12 to %20**
  %15 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to %13*
  %16 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%13*, i8*, %20**)*)(%13* %15, i8* %13, %20** %14)
  %17 = load %TSo7NSErrorC*, %TSo7NSErrorC** %4, align 8
  %18 = ptrtoint %TSo7NSErrorC* %17 to i64
  %19 = inttoptr i64 %18 to %objc_object*
  %20 = bitcast %objc_object* %19 to i8*
  %21 = call i8* @llvm.objc.retain(i8* %20)
  %22 = bitcast i8* %21 to %objc_object*
  %23 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %18, i64* %25, align 8
  %26 = inttoptr i64 %24 to %objc_object*
  %27 = bitcast %objc_object* %26 to i8*
  call void @llvm.objc.release(i8* %27)
  %28 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28)
  %29 = icmp ne i8 %16, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %entry
  %31 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31)
  ret void

32:                                               ; preds = %entry
  %33 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = call swiftcc %swift.error* @"$s10Foundation22_convertNSErrorToErrorys0E0_pSo0C0CSgF"(i64 %34)
  %36 = inttoptr i64 %34 to %objc_object*
  %37 = bitcast %objc_object* %36 to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  store %swift.error* %35, %swift.error** %2, align 8
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_"(%swift.error*) #0 {
entry:
  %error.debug = alloca %swift.error*, align 8
  %1 = bitcast %swift.error** %error.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %swift.error* %0, %swift.error** %error.debug, align 8
  %2 = call %swift.error* @swift_errorRetain(%swift.error* %0) #3
  %3 = call swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error* %0)
  call void asm sideeffect "", "r"(%TSo7NSErrorC* %3)
  call void @swift_errorRelease(%swift.error* %0) #3
  %4 = bitcast %TSo7NSErrorC* %3 to i8*
  %5 = call i8* @llvm.objc.retain(i8* %4)
  %6 = bitcast i8* %5 to %TSo7NSErrorC*
  %7 = alloca i8, i64 24, align 16
  %8 = bitcast i8* %7 to %swift.opaque*
  %9 = bitcast %swift.opaque* %8 to <{ %swift.refcounted, %TSo7NSErrorC* }>*
  %10 = getelementptr inbounds <{ %swift.refcounted, %TSo7NSErrorC* }>, <{ %swift.refcounted, %TSo7NSErrorC* }>* %9, i32 0, i32 1
  store %TSo7NSErrorC* %3, %TSo7NSErrorC** %10, align 8
  %11 = alloca i8, i64 32, align 16
  %12 = bitcast i8* %11 to %swift.opaque*
  %13 = bitcast %swift.opaque* %12 to <{ %swift.refcounted, %swift.noescape.function }>*
  %14 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %13, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %14, i32 0, i32 0
  store i8* bitcast ({ i64, %swift.bridge* } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SSyKXEfu_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %14, i32 0, i32 1
  store %swift.opaque* %8, %swift.opaque** %.data, align 8
  %15 = alloca i8, i64 32, align 16
  %16 = bitcast i8* %15 to %swift.opaque*
  %17 = bitcast %swift.opaque* %16 to <{ %swift.refcounted, %swift.noescape.function }>*
  %18 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %17, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %18, i32 0, i32 0
  store i8* bitcast ({ i64, %swift.bridge* } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SSyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %18, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %19

19:                                               ; preds = %entry
  br label %20

20:                                               ; preds = %19
  %21 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* @"$sSSN", i8** @"$sSSSQsWP")
  %22 = extractvalue { i8*, %swift.refcounted* } %21, 0
  %23 = extractvalue { i8*, %swift.refcounted* } %21, 1
  %24 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %23) #3
  %25 = bitcast %swift.refcounted* %23 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSS*, %swift.refcounted*, %swift.error**)* @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA.5" to i8*), %swift.opaque* %12, i8* bitcast (void (%TSS*, %swift.refcounted*, %swift.error**)* @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA.6" to i8*), %swift.opaque* %16, i8* %22, %swift.opaque* %25, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 260, %swift.type* @"$sSSN", i8** @"$sSSSQsWP")
  call void @swift_release(%swift.refcounted* %23) #3
  %26 = bitcast %TSo7NSErrorC* %3 to i8*
  call void @llvm.objc.release(i8* %26)
  call void @swift_release(%swift.refcounted* %23) #3
  %27 = bitcast %TSo7NSErrorC* %3 to i8*
  %28 = call i8* @llvm.objc.retain(i8* %27)
  %29 = bitcast i8* %28 to %TSo7NSErrorC*
  %spsave = call i8* @llvm.stacksave()
  %30 = alloca i8, i64 24, align 16
  %31 = bitcast i8* %30 to %swift.opaque*
  %32 = bitcast %swift.opaque* %31 to <{ %swift.refcounted, %TSo7NSErrorC* }>*
  %33 = getelementptr inbounds <{ %swift.refcounted, %TSo7NSErrorC* }>, <{ %swift.refcounted, %TSo7NSErrorC* }>* %32, i32 0, i32 1
  store %TSo7NSErrorC* %3, %TSo7NSErrorC** %33, align 8
  %spsave3 = call i8* @llvm.stacksave()
  %34 = alloca i8, i64 32, align 16
  %35 = bitcast i8* %34 to %swift.opaque*
  %36 = bitcast %swift.opaque* %35 to <{ %swift.refcounted, %swift.noescape.function }>*
  %37 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %36, i32 0, i32 1
  %.fn4 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %37, i32 0, i32 0
  store i8* bitcast (i64 (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SiyKXEfu1_TA" to i8*), i8** %.fn4, align 8
  %.data5 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %37, i32 0, i32 1
  store %swift.opaque* %31, %swift.opaque** %.data5, align 8
  %spsave6 = call i8* @llvm.stacksave()
  %38 = alloca i8, i64 32, align 16
  %39 = bitcast i8* %38 to %swift.opaque*
  %40 = bitcast %swift.opaque* %39 to <{ %swift.refcounted, %swift.noescape.function }>*
  %41 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %40, i32 0, i32 1
  %.fn7 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %41, i32 0, i32 0
  store i8* bitcast (i64 (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SiyKXEfu2_" to i8*), i8** %.fn7, align 8
  %.data8 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %41, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data8, align 8
  br label %42

42:                                               ; preds = %20
  br label %43

43:                                               ; preds = %42
  %44 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  %45 = extractvalue { i8*, %swift.refcounted* } %44, 0
  %46 = extractvalue { i8*, %swift.refcounted* } %44, 1
  %47 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %46) #3
  %48 = bitcast %swift.refcounted* %46 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSi*, %swift.refcounted*, %swift.error**)* @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA" to i8*), %swift.opaque* %35, i8* bitcast (void (%TSi*, %swift.refcounted*, %swift.error**)* @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.7" to i8*), %swift.opaque* %39, i8* %45, %swift.opaque* %48, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 261, %swift.type* @"$sSiN", i8** @"$sSiSQsWP")
  call void @swift_release(%swift.refcounted* %46) #3
  call void @llvm.stackrestore(i8* %spsave6)
  call void @llvm.stackrestore(i8* %spsave3)
  call void @llvm.stackrestore(i8* %spsave)
  %49 = bitcast %TSo7NSErrorC* %3 to i8*
  call void @llvm.objc.release(i8* %49)
  call void @swift_release(%swift.refcounted* %46) #3
  %50 = bitcast %TSo7NSErrorC* %3 to i8*
  call void @llvm.objc.release(i8* %50)
  ret void
}

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SSyKXEfu_"(%TSo7NSErrorC*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = load i8*, i8** @"\01L_selector(domain)", align 8
  %4 = bitcast %TSo7NSErrorC* %0 to %20*
  %5 = call %0* bitcast (void ()* @objc_msgSend to %0* (%20*, i8*)*)(%20* %4, i8* %3)
  %6 = bitcast %0* %5 to i8*
  %7 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %6)
  %8 = bitcast i8* %7 to %0*
  %9 = ptrtoint %0* %8 to i64
  %10 = call swiftcc { i64, %swift.bridge* } @"$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ"(i64 %9)
  %11 = extractvalue { i64, %swift.bridge* } %10, 0
  %12 = extractvalue { i64, %swift.bridge* } %10, 1
  %13 = inttoptr i64 %9 to %objc_object*
  %14 = bitcast %objc_object* %13 to i8*
  call void @llvm.objc.release(i8* %14)
  %15 = insertvalue { i64, %swift.bridge* } undef, i64 %11, 0
  %16 = insertvalue { i64, %swift.bridge* } %15, %swift.bridge* %12, 1
  ret { i64, %swift.bridge* } %16
}

define linkonce_odr hidden swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TR"(%TSS* noalias nocapture sret, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %5 = bitcast i8* %1 to { i64, %swift.bridge* } (%swift.refcounted*, %swift.error**)*
  %6 = bitcast %swift.opaque* %2 to %swift.refcounted*
  %7 = call swiftcc { i64, %swift.bridge* } %5(%swift.refcounted* swiftself %6, %swift.error** noalias nocapture swifterror dereferenceable(8) %4) #13
  %8 = extractvalue { i64, %swift.bridge* } %7, 0
  %9 = extractvalue { i64, %swift.bridge* } %7, 1
  %10 = load %swift.error*, %swift.error** %4, align 8
  %11 = icmp ne %swift.error* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %entry
  %13 = phi i64 [ %8, %entry ]
  %14 = phi %swift.bridge* [ %9, %entry ]
  %._guts = getelementptr inbounds %TSS, %TSS* %0, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %13, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %14, %swift.bridge** %._guts._object._object, align 8
  ret void

15:                                               ; preds = %entry
  %16 = phi %swift.error* [ %10, %entry ]
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %16, %swift.error** %4, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %4) #3
  store %swift.error* null, %swift.error** %4, align 8
  store %swift.error* %16, %swift.error** %4, align 8
  ret void
}

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SSyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @59, i64 0, i64 0), i64 8, i1 true)
  %3 = extractvalue { i64, %swift.bridge* } %2, 0
  %4 = extractvalue { i64, %swift.bridge* } %2, 1
  %5 = insertvalue { i64, %swift.bridge* } undef, i64 %3, 0
  %6 = insertvalue { i64, %swift.bridge* } %5, %swift.bridge* %4, 1
  ret { i64, %swift.bridge* } %6
}

define internal swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SiyKXEfu1_"(%TSo7NSErrorC*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = load i8*, i8** @"\01L_selector(code)", align 8
  %4 = bitcast %TSo7NSErrorC* %0 to %20*
  %5 = call i64 bitcast (void ()* @objc_msgSend to i64 (%20*, i8*)*)(%20* %4, i8* %3)
  ret i64 %5
}

define internal swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SiyKXEfu2_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  ret i64 42
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s6XCTest20XCTAssertThrowsError__4file4line_yxyKXK_SSyXKs12StaticStringVSuys0D0_pXEtlFfA0_"(%swift.type* %T) #0 {
entry:
  %T1 = alloca %swift.type*, align 8
  store %swift.type* %T, %swift.type** %T1, align 8
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s6XCTest20XCTAssertThrowsError__4file4line_yxyKXK_SSyXKs12StaticStringVSuys0D0_pXEtlFfA0_SSycfu_" to i8*), %swift.refcounted* null }
}

define internal void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFTo"(%13*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyF"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_CfD"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  %5 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %33 = inttoptr i64 %0 to %19*
  %34 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %32, %19* %33)
  %35 = bitcast %3* %34 to %TSo10XCTestCaseC*
  %36 = bitcast %TSo10XCTestCaseC* %35 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %37 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %36 to i8*
  %38 = call i8* @llvm.objc.retain(i8* %37)
  %39 = bitcast i8* %38 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %36, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %40 = inttoptr i64 %0 to %objc_object*
  %41 = bitcast %objc_object* %40 to i8*
  call void @llvm.objc.release(i8* %41)
  %toDestroy = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %42 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %42)
  %43 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43)
  ret %T7_XCTestyycfU5_13ErrorTestCaseL_C* %36
}

define internal %13* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%13*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %14 to %13*
  ret %13* %15
}

define internal swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  %5 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %33 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %32, i8* %0)
  %34 = bitcast %3* %33 to %TSo10XCTestCaseC*
  %35 = bitcast %TSo10XCTestCaseC* %34 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %36 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %35 to i8*
  %37 = call i8* @llvm.objc.retain(i8* %36)
  %38 = bitcast i8* %37 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %35, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %39 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %39)
  %40 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  ret %T7_XCTestyycfU5_13ErrorTestCaseL_C* %35
}

define internal %13* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%13*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %9 to %13*
  ret %13* %10
}

define internal swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU5_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %4 = call i8* @llvm.objc.retain(i8* %3)
  %5 = bitcast i8* %4 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %6 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %7 = call i8* @llvm.objc.retain(i8* %6)
  %8 = bitcast i8* %7 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %9 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %offset
  %.doThrow = bitcast i8* %10 to %TSb*
  %11 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %12, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %13)
  %14 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %14)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU5_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %15 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %offset1
  %.errorCode = bitcast i8* %16 to %TSi*
  %17 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %17)
  %18 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %18, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %19)
  %20 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %20)
  %21 = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %22 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %21 to %TSo10XCTestCaseC*
  %23 = bitcast %TSo10XCTestCaseC* %22 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %24 = bitcast %TSo10XCTestCaseC* %22 to %objc_object*
  %25 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa"(i64 0) #6
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = bitcast %swift.type* %26 to %objc_class*
  %28 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %24, %objc_object** %28, align 8
  %29 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %27, %objc_class** %29, align 8
  %30 = load i8*, i8** @"\01L_selector(init)", align 8
  %31 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %30)
  %32 = bitcast %3* %31 to %TSo10XCTestCaseC*
  %33 = bitcast %TSo10XCTestCaseC* %32 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %34 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %33 to i8*
  %35 = call i8* @llvm.objc.retain(i8* %34)
  %36 = bitcast i8* %35 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU5_13ErrorTestCaseL_C* %33, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self, align 8
  %37 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  ret %T7_XCTestyycfU5_13ErrorTestCaseL_C* %33
}

define internal %13* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CACycfcTo"(%13*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %13* %0 to %T7_XCTestyycfU5_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU5_13ErrorTestCaseL_C* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU5_13ErrorTestCaseL_C* %8 to %13*
  ret %13* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU5_13ErrorTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU5_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU5_13ErrorTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal signext i8 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvgTo"(%14*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %11 = call swiftcc i1 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  %13 = call swiftcc i8 @"$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF"(i1 %11) #13
  ret i8 %13
}

define internal swiftcc i1 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.doThrow = bitcast i8* %3 to %TSb*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  %6 = load i1, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i1 %6
}

define internal void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvsTo"(%14*, i8*, i8 signext) unnamed_addr #0 {
entry:
  %3 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %12 = call swiftcc i1 @"$s10ObjectiveC22_convertObjCBoolToBoolySbAA0cD0VF"(i8 %2) #13
  call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvs"(i1 %12, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %3) #13
  %13 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %13)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvs"(i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i1, align 8
  %2 = bitcast i1* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 1, i1 false)
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i1 %0, i1* %value.debug, align 8
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.doThrow = bitcast i8* %5 to %TSb*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 %0, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSb* } @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.doThrow = bitcast i8* %4 to %TSb*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSb* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.resume.0" to i8*), %TSb* undef }, %TSb* %.doThrow, 1
  ret { i8*, %TSb* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal i64 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivgTo"(%14*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %11 = call swiftcc i64 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  ret i64 %11
}

define internal swiftcc i64 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.errorCode = bitcast i8* %3 to %TSi*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  %6 = load i64, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i64 %6
}

define internal void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivsTo"(%14*, i8*, i64) unnamed_addr #0 {
entry:
  %3 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivs"(i64 %2, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %3) #13
  %12 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %12)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivs"(i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i64, align 8
  %2 = bitcast i64* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i64 %0, i64* %value.debug, align 8
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.errorCode = bitcast i8* %5 to %TSi*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 %0, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSi* } @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.errorCode = bitcast i8* %4 to %TSi*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSi* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.resume.0" to i8*), %TSi* undef }, %TSi* %.errorCode, 1
  ret { i8*, %TSi* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C14throwSomethingyyKF"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %3 = call swiftcc i1 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %0)
  br i1 %3, label %4, label %12

4:                                                ; preds = %entry
  %5 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCMD") #6
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @59, i64 0, i64 0), i64 8, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %9 = call swiftcc i64 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %0)
  %10 = call swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfC"(i64 %7, %swift.bridge* %8, i64 %9, i64 0, %swift.type* swiftself %5)
  %11 = bitcast %TSo7NSErrorC* %10 to %swift.error*
  store %swift.error* %11, %swift.error** %1, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %1) #3
  store %swift.error* null, %swift.error** %1, align 8
  store %swift.error* %11, %swift.error** %1, align 8
  ret void

12:                                               ; preds = %entry
  ret void
}

define internal signext i8 @"$s7_XCTestyycfU6_13ErrorTestCaseL_C14throwSomethingyyKFTo"(%14*, i8*, %20**) unnamed_addr #0 {
entry:
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %5 = ptrtoint %20** %2 to i64
  %6 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* @swift_isaMask, align 8
  %9 = and i64 %7, %8
  %10 = inttoptr i64 %9 to %swift.type*
  %11 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %4 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C14throwSomethingyyKF"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %4, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror) #13
  %14 = load %swift.error*, %swift.error** %swifterror, align 8
  %15 = icmp ne %swift.error* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %entry
  br label %33

17:                                               ; preds = %entry
  %18 = phi %swift.error* [ %14, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  %19 = icmp eq i64 %5, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %17
  %21 = inttoptr i64 %5 to i8*
  br label %22

22:                                               ; preds = %20
  %23 = phi i8* [ %21, %20 ]
  %24 = call swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error* %18) #13
  %25 = ptrtoint %TSo7NSErrorC* %24 to i64
  %26 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26)
  %27 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %TSo7NSErrorCSg* %3 to %swift.opaque*
  %29 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCSgMD") #6
  call swiftcc void @"$sSA7pointeexvs"(%swift.opaque* noalias nocapture %28, i8* %23, %swift.type* %29) #13
  %30 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30)
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

31:                                               ; preds = %17
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

32:                                               ; preds = %22, %31
  br label %33

33:                                               ; preds = %16, %32
  %34 = phi i8 [ 0, %32 ], [ 1, %16 ]
  %35 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %4 to i8*
  call void @llvm.objc.release(i8* %35)
  ret i8 %34
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyF"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %3 = call i8* @llvm.objc.retain(i8* %2)
  %4 = bitcast i8* %3 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %5 = alloca i8, i64 24, align 16
  %6 = bitcast i8* %5 to %swift.opaque*
  %7 = bitcast %swift.opaque* %6 to <{ %swift.refcounted, %T7_XCTestyycfU6_13ErrorTestCaseL_C* }>*
  %8 = getelementptr inbounds <{ %swift.refcounted, %T7_XCTestyycfU6_13ErrorTestCaseL_C* }>, <{ %swift.refcounted, %T7_XCTestyycfU6_13ErrorTestCaseL_C* }>* %7, i32 0, i32 1
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %8, align 8
  %9 = alloca i8, i64 32, align 16
  %10 = bitcast i8* %9 to %swift.opaque*
  %11 = bitcast %swift.opaque* %10 to <{ %swift.refcounted, %swift.noescape.function }>*
  %12 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %11, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %12, i32 0, i32 0
  store i8* bitcast (void (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %12, i32 0, i32 1
  store %swift.opaque* %6, %swift.opaque** %.data, align 8
  br label %13

13:                                               ; preds = %entry
  br label %14

14:                                               ; preds = %13
  %15 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlFfA0_"(%swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  %16 = extractvalue { i8*, %swift.refcounted* } %15, 0
  %17 = extractvalue { i8*, %swift.refcounted* } %15, 1
  %18 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %17) #3
  %19 = bitcast %swift.refcounted* %17 to %swift.opaque*
  call swiftcc void @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlF"(i8* bitcast (void (%swift.opaque*, %swift.refcounted*, %swift.error**)* @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA" to i8*), %swift.opaque* %10, i8* %16, %swift.opaque* %19, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 325, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1))
  call void @swift_release(%swift.refcounted* %17) #3
  %20 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %20)
  call void @swift_release(%swift.refcounted* %17) #3
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_"(%T7_XCTestyycfU6_13ErrorTestCaseL_C*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = alloca %TSo7NSErrorC*, align 8
  %5 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5)
  %6 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7)
  %8 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %TSo7NSErrorC*
  store %TSo7NSErrorC* %10, %TSo7NSErrorC** %4, align 8
  %11 = bitcast %TSo7NSErrorC** %4 to i8*
  %12 = ptrtoint i8* %11 to i64
  %13 = load i8*, i8** @"\01L_selector(throwSomethingAndReturnError:)", align 8
  %14 = inttoptr i64 %12 to %20**
  %15 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to %14*
  %16 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%14*, i8*, %20**)*)(%14* %15, i8* %13, %20** %14)
  %17 = load %TSo7NSErrorC*, %TSo7NSErrorC** %4, align 8
  %18 = ptrtoint %TSo7NSErrorC* %17 to i64
  %19 = inttoptr i64 %18 to %objc_object*
  %20 = bitcast %objc_object* %19 to i8*
  %21 = call i8* @llvm.objc.retain(i8* %20)
  %22 = bitcast i8* %21 to %objc_object*
  %23 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %18, i64* %25, align 8
  %26 = inttoptr i64 %24 to %objc_object*
  %27 = bitcast %objc_object* %26 to i8*
  call void @llvm.objc.release(i8* %27)
  %28 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28)
  %29 = icmp ne i8 %16, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %entry
  %31 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31)
  ret void

32:                                               ; preds = %entry
  %33 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = call swiftcc %swift.error* @"$s10Foundation22_convertNSErrorToErrorys0E0_pSo0C0CSgF"(i64 %34)
  %36 = inttoptr i64 %34 to %objc_object*
  %37 = bitcast %objc_object* %36 to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  store %swift.error* %35, %swift.error** %2, align 8
  ret void
}

define internal void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyFTo"(%14*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyF"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_CfD"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  %5 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %33 = inttoptr i64 %0 to %19*
  %34 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %32, %19* %33)
  %35 = bitcast %3* %34 to %TSo10XCTestCaseC*
  %36 = bitcast %TSo10XCTestCaseC* %35 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %37 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %36 to i8*
  %38 = call i8* @llvm.objc.retain(i8* %37)
  %39 = bitcast i8* %38 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %36, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %40 = inttoptr i64 %0 to %objc_object*
  %41 = bitcast %objc_object* %40 to i8*
  call void @llvm.objc.release(i8* %41)
  %toDestroy = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %42 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %42)
  %43 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43)
  ret %T7_XCTestyycfU6_13ErrorTestCaseL_C* %36
}

define internal %14* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%14*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %14 to %14*
  ret %14* %15
}

define internal swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  %5 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %33 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %32, i8* %0)
  %34 = bitcast %3* %33 to %TSo10XCTestCaseC*
  %35 = bitcast %TSo10XCTestCaseC* %34 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %36 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %35 to i8*
  %37 = call i8* @llvm.objc.retain(i8* %36)
  %38 = bitcast i8* %37 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %35, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %39 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %39)
  %40 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  ret %T7_XCTestyycfU6_13ErrorTestCaseL_C* %35
}

define internal %14* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%14*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %9 to %14*
  ret %14* %10
}

define internal swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU6_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %4 = call i8* @llvm.objc.retain(i8* %3)
  %5 = bitcast i8* %4 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %6 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %7 = call i8* @llvm.objc.retain(i8* %6)
  %8 = bitcast i8* %7 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %9 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %offset
  %.doThrow = bitcast i8* %10 to %TSb*
  %11 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %12, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %13)
  %14 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %14)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU6_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %15 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %offset1
  %.errorCode = bitcast i8* %16 to %TSi*
  %17 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %17)
  %18 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %18, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %19)
  %20 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %20)
  %21 = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %22 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %21 to %TSo10XCTestCaseC*
  %23 = bitcast %TSo10XCTestCaseC* %22 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %24 = bitcast %TSo10XCTestCaseC* %22 to %objc_object*
  %25 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa"(i64 0) #6
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = bitcast %swift.type* %26 to %objc_class*
  %28 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %24, %objc_object** %28, align 8
  %29 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %27, %objc_class** %29, align 8
  %30 = load i8*, i8** @"\01L_selector(init)", align 8
  %31 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %30)
  %32 = bitcast %3* %31 to %TSo10XCTestCaseC*
  %33 = bitcast %TSo10XCTestCaseC* %32 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %34 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %33 to i8*
  %35 = call i8* @llvm.objc.retain(i8* %34)
  %36 = bitcast i8* %35 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU6_13ErrorTestCaseL_C* %33, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self, align 8
  %37 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  ret %T7_XCTestyycfU6_13ErrorTestCaseL_C* %33
}

define internal %14* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CACycfcTo"(%14*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %14* %0 to %T7_XCTestyycfU6_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU6_13ErrorTestCaseL_C* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU6_13ErrorTestCaseL_C* %8 to %14*
  ret %14* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU6_13ErrorTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU6_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU6_13ErrorTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal signext i8 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvgTo"(%15*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %11 = call swiftcc i1 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  %13 = call swiftcc i8 @"$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF"(i1 %11) #13
  ret i8 %13
}

define internal swiftcc i1 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.doThrow = bitcast i8* %3 to %TSb*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  %6 = load i1, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i1 %6
}

define internal void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvsTo"(%15*, i8*, i8 signext) unnamed_addr #0 {
entry:
  %3 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %12 = call swiftcc i1 @"$s10ObjectiveC22_convertObjCBoolToBoolySbAA0cD0VF"(i8 %2) #13
  call swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvs"(i1 %12, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %3) #13
  %13 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %13)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvs"(i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i1, align 8
  %2 = bitcast i1* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 1, i1 false)
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i1 %0, i1* %value.debug, align 8
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.doThrow = bitcast i8* %5 to %TSb*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 %0, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSb* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.doThrow = bitcast i8* %4 to %TSb*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSb* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.resume.0" to i8*), %TSb* undef }, %TSb* %.doThrow, 1
  ret { i8*, %TSb* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal i64 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivgTo"(%15*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %11 = call swiftcc i64 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  ret i64 %11
}

define internal swiftcc i64 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.errorCode = bitcast i8* %3 to %TSi*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  %6 = load i64, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i64 %6
}

define internal void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivsTo"(%15*, i8*, i64) unnamed_addr #0 {
entry:
  %3 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivs"(i64 %2, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %3) #13
  %12 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %12)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivs"(i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i64, align 8
  %2 = bitcast i64* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i64 %0, i64* %value.debug, align 8
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.errorCode = bitcast i8* %5 to %TSi*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 %0, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSi* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.errorCode = bitcast i8* %4 to %TSi*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSi* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.resume.0" to i8*), %TSi* undef }, %TSi* %.errorCode, 1
  ret { i8*, %TSi* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C14throwSomethingSSyKF"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %3 = call swiftcc i1 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %0)
  br i1 %3, label %4, label %12

4:                                                ; preds = %entry
  %5 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCMD") #6
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @59, i64 0, i64 0), i64 8, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %9 = call swiftcc i64 @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %0)
  %10 = call swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfC"(i64 %7, %swift.bridge* %8, i64 %9, i64 0, %swift.type* swiftself %5)
  %11 = bitcast %TSo7NSErrorC* %10 to %swift.error*
  store %swift.error* %11, %swift.error** %1, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %1) #3
  store %swift.error* null, %swift.error** %1, align 8
  store %swift.error* %11, %swift.error** %1, align 8
  ret { i64, %swift.bridge* } undef

12:                                               ; preds = %entry
  %13 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @62, i64 0, i64 0), i64 5, i1 true)
  %14 = extractvalue { i64, %swift.bridge* } %13, 0
  %15 = extractvalue { i64, %swift.bridge* } %13, 1
  %16 = insertvalue { i64, %swift.bridge* } undef, i64 %14, 0
  %17 = insertvalue { i64, %swift.bridge* } %16, %swift.bridge* %15, 1
  ret { i64, %swift.bridge* } %17
}

define internal %0* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C14throwSomethingSSyKFTo"(%15*, i8*, %20**) unnamed_addr #0 {
entry:
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %5 = ptrtoint %20** %2 to i64
  %6 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* @swift_isaMask, align 8
  %9 = and i64 %7, %8
  %10 = inttoptr i64 %9 to %swift.type*
  %11 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %4 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %14 = call swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C14throwSomethingSSyKF"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %4, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror) #13
  %15 = extractvalue { i64, %swift.bridge* } %14, 0
  %16 = extractvalue { i64, %swift.bridge* } %14, 1
  %17 = load %swift.error*, %swift.error** %swifterror, align 8
  %18 = icmp ne %swift.error* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %entry
  %20 = phi i64 [ %15, %entry ]
  %21 = phi %swift.bridge* [ %16, %entry ]
  %22 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %20, %swift.bridge* %21) #13
  %23 = ptrtoint %TSo8NSStringC* %22 to i64
  call void @swift_bridgeObjectRelease(%swift.bridge* %21) #3
  br label %40

24:                                               ; preds = %entry
  %25 = phi %swift.error* [ %17, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  %26 = icmp eq i64 %5, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = inttoptr i64 %5 to i8*
  br label %29

29:                                               ; preds = %27
  %30 = phi i8* [ %28, %27 ]
  %31 = call swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error* %25) #13
  %32 = ptrtoint %TSo7NSErrorC* %31 to i64
  %33 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33)
  %34 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %TSo7NSErrorCSg* %3 to %swift.opaque*
  %36 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCSgMD") #6
  call swiftcc void @"$sSA7pointeexvs"(%swift.opaque* noalias nocapture %35, i8* %30, %swift.type* %36) #13
  %37 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37)
  call void @swift_errorRelease(%swift.error* %25) #3
  br label %39

38:                                               ; preds = %24
  call void @swift_errorRelease(%swift.error* %25) #3
  br label %39

39:                                               ; preds = %29, %38
  br label %40

40:                                               ; preds = %19, %39
  %41 = phi i64 [ 0, %39 ], [ %23, %19 ]
  %42 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %4 to i8*
  call void @llvm.objc.release(i8* %42)
  %43 = inttoptr i64 %41 to i8*
  %44 = tail call i8* @llvm.objc.autoreleaseReturnValue(i8* %43) #3
  %45 = ptrtoint i8* %44 to i64
  %46 = inttoptr i64 %45 to %0*
  ret %0* %46
}

define internal swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyF"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %3 = call i8* @llvm.objc.retain(i8* %2)
  %4 = bitcast i8* %3 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %5 = alloca i8, i64 24, align 16
  %6 = bitcast i8* %5 to %swift.opaque*
  %7 = bitcast %swift.opaque* %6 to <{ %swift.refcounted, %T7_XCTestyycfU7_13ErrorTestCaseL_C* }>*
  %8 = getelementptr inbounds <{ %swift.refcounted, %T7_XCTestyycfU7_13ErrorTestCaseL_C* }>, <{ %swift.refcounted, %T7_XCTestyycfU7_13ErrorTestCaseL_C* }>* %7, i32 0, i32 1
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %8, align 8
  %9 = alloca i8, i64 32, align 16
  %10 = bitcast i8* %9 to %swift.opaque*
  %11 = bitcast %swift.opaque* %10 to <{ %swift.refcounted, %swift.noescape.function }>*
  %12 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %11, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %12, i32 0, i32 0
  store i8* bitcast ({ i64, %swift.bridge* } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFSSyKXEfu_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %12, i32 0, i32 1
  store %swift.opaque* %6, %swift.opaque** %.data, align 8
  %13 = alloca i8, i64 32, align 16
  %14 = bitcast i8* %13 to %swift.opaque*
  %15 = bitcast %swift.opaque* %14 to <{ %swift.refcounted, %swift.noescape.function }>*
  %16 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %15, i32 0, i32 1
  %.fn1 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %16, i32 0, i32 0
  store i8* bitcast ({ i64, %swift.bridge* } (%swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFSSyKXEfu0_" to i8*), i8** %.fn1, align 8
  %.data2 = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %16, i32 0, i32 1
  store %swift.opaque* null, %swift.opaque** %.data2, align 8
  br label %17

17:                                               ; preds = %entry
  br label %18

18:                                               ; preds = %17
  %19 = call swiftcc { i8*, %swift.refcounted* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_"(%swift.type* @"$sSSN", i8** @"$sSSSQsWP")
  %20 = extractvalue { i8*, %swift.refcounted* } %19, 0
  %21 = extractvalue { i8*, %swift.refcounted* } %19, 1
  %22 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %21) #3
  %23 = bitcast %swift.refcounted* %21 to %swift.opaque*
  call swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8* bitcast (void (%TSS*, %swift.refcounted*, %swift.error**)* @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA" to i8*), %swift.opaque* %10, i8* bitcast (void (%TSS*, %swift.refcounted*, %swift.error**)* @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA.3" to i8*), %swift.opaque* %14, i8* %20, %swift.opaque* %23, i64 ptrtoint ([77 x i8]* @2 to i64), i64 76, i8 2, i64 387, %swift.type* @"$sSSN", i8** @"$sSSSQsWP")
  call void @swift_release(%swift.refcounted* %21) #3
  %24 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %24)
  call void @swift_release(%swift.refcounted* %21) #3
  ret void
}

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFSSyKXEfu_"(%T7_XCTestyycfU7_13ErrorTestCaseL_C*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = alloca %TSo7NSErrorC*, align 8
  %5 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5)
  %6 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7)
  %8 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %TSo7NSErrorC*
  store %TSo7NSErrorC* %10, %TSo7NSErrorC** %4, align 8
  %11 = bitcast %TSo7NSErrorC** %4 to i8*
  %12 = ptrtoint i8* %11 to i64
  %13 = load i8*, i8** @"\01L_selector(throwSomethingAndReturnError:)", align 8
  %14 = inttoptr i64 %12 to %20**
  %15 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to %15*
  %16 = call %0* bitcast (void ()* @objc_msgSend to %0* (%15*, i8*, %20**)*)(%15* %15, i8* %13, %20** %14)
  %17 = bitcast %0* %16 to i8*
  %18 = notail call i8* @llvm.objc.retainAutoreleasedReturnValue(i8* %17)
  %19 = bitcast i8* %18 to %0*
  %20 = ptrtoint %0* %19 to i64
  %21 = load %TSo7NSErrorC*, %TSo7NSErrorC** %4, align 8
  %22 = ptrtoint %TSo7NSErrorC* %21 to i64
  %23 = inttoptr i64 %22 to %objc_object*
  %24 = bitcast %objc_object* %23 to i8*
  %25 = call i8* @llvm.objc.retain(i8* %24)
  %26 = bitcast i8* %25 to %objc_object*
  %27 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %22, i64* %29, align 8
  %30 = inttoptr i64 %28 to %objc_object*
  %31 = bitcast %objc_object* %30 to i8*
  call void @llvm.objc.release(i8* %31)
  %32 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32)
  %33 = icmp eq i64 %20, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %entry
  %35 = inttoptr i64 %20 to %TSo8NSStringC*
  br label %36

36:                                               ; preds = %34
  %37 = phi %TSo8NSStringC* [ %35, %34 ]
  %38 = ptrtoint %TSo8NSStringC* %37 to i64
  %39 = call swiftcc { i64, %swift.bridge* } @"$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ"(i64 %38)
  %40 = extractvalue { i64, %swift.bridge* } %39, 0
  %41 = extractvalue { i64, %swift.bridge* } %39, 1
  %42 = inttoptr i64 %38 to %objc_object*
  %43 = bitcast %objc_object* %42 to i8*
  call void @llvm.objc.release(i8* %43)
  %44 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44)
  %45 = insertvalue { i64, %swift.bridge* } undef, i64 %40, 0
  %46 = insertvalue { i64, %swift.bridge* } %45, %swift.bridge* %41, 1
  ret { i64, %swift.bridge* } %46

47:                                               ; preds = %entry
  %48 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = call swiftcc %swift.error* @"$s10Foundation22_convertNSErrorToErrorys0E0_pSo0C0CSgF"(i64 %49)
  %51 = inttoptr i64 %49 to %objc_object*
  %52 = bitcast %objc_object* %51 to i8*
  call void @llvm.objc.release(i8* %52)
  %53 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53)
  store %swift.error* %50, %swift.error** %2, align 8
  ret { i64, %swift.bridge* } undef
}

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFSSyKXEfu0_"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @62, i64 0, i64 0), i64 5, i1 true)
  %3 = extractvalue { i64, %swift.bridge* } %2, 0
  %4 = extractvalue { i64, %swift.bridge* } %2, 1
  %5 = insertvalue { i64, %swift.bridge* } undef, i64 %3, 0
  %6 = insertvalue { i64, %swift.bridge* } %5, %swift.bridge* %4, 1
  ret { i64, %swift.bridge* } %6
}

define internal void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFTo"(%15*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyF"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_CfD"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  %5 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %33 = inttoptr i64 %0 to %19*
  %34 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %32, %19* %33)
  %35 = bitcast %3* %34 to %TSo10XCTestCaseC*
  %36 = bitcast %TSo10XCTestCaseC* %35 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %37 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %36 to i8*
  %38 = call i8* @llvm.objc.retain(i8* %37)
  %39 = bitcast i8* %38 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %36, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %40 = inttoptr i64 %0 to %objc_object*
  %41 = bitcast %objc_object* %40 to i8*
  call void @llvm.objc.release(i8* %41)
  %toDestroy = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %42 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %42)
  %43 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43)
  ret %T7_XCTestyycfU7_13ErrorTestCaseL_C* %36
}

define internal %15* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%15*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %14 to %15*
  ret %15* %15
}

define internal swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  %5 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %33 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %32, i8* %0)
  %34 = bitcast %3* %33 to %TSo10XCTestCaseC*
  %35 = bitcast %TSo10XCTestCaseC* %34 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %36 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %35 to i8*
  %37 = call i8* @llvm.objc.retain(i8* %36)
  %38 = bitcast i8* %37 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %35, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %39 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %39)
  %40 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  ret %T7_XCTestyycfU7_13ErrorTestCaseL_C* %35
}

define internal %15* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%15*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %9 to %15*
  ret %15* %10
}

define internal swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU7_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %4 = call i8* @llvm.objc.retain(i8* %3)
  %5 = bitcast i8* %4 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %6 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %7 = call i8* @llvm.objc.retain(i8* %6)
  %8 = bitcast i8* %7 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %9 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %offset
  %.doThrow = bitcast i8* %10 to %TSb*
  %11 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %12, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %13)
  %14 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %14)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU7_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %15 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %offset1
  %.errorCode = bitcast i8* %16 to %TSi*
  %17 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %17)
  %18 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %18, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %19)
  %20 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %20)
  %21 = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %22 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %21 to %TSo10XCTestCaseC*
  %23 = bitcast %TSo10XCTestCaseC* %22 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %24 = bitcast %TSo10XCTestCaseC* %22 to %objc_object*
  %25 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa"(i64 0) #6
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = bitcast %swift.type* %26 to %objc_class*
  %28 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %24, %objc_object** %28, align 8
  %29 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %27, %objc_class** %29, align 8
  %30 = load i8*, i8** @"\01L_selector(init)", align 8
  %31 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %30)
  %32 = bitcast %3* %31 to %TSo10XCTestCaseC*
  %33 = bitcast %TSo10XCTestCaseC* %32 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %34 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %33 to i8*
  %35 = call i8* @llvm.objc.retain(i8* %34)
  %36 = bitcast i8* %35 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU7_13ErrorTestCaseL_C* %33, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self, align 8
  %37 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  ret %T7_XCTestyycfU7_13ErrorTestCaseL_C* %33
}

define internal %15* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CACycfcTo"(%15*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %15* %0 to %T7_XCTestyycfU7_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU7_13ErrorTestCaseL_C* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU7_13ErrorTestCaseL_C* %8 to %15*
  ret %15* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU7_13ErrorTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU7_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU7_13ErrorTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal signext i8 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvgTo"(%16*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %11 = call swiftcc i1 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  %13 = call swiftcc i8 @"$s10ObjectiveC22_convertBoolToObjCBoolyAA0eF0VSbF"(i1 %11) #13
  ret i8 %13
}

define internal swiftcc i1 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.doThrow = bitcast i8* %3 to %TSb*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  %6 = load i1, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i1 %6
}

define internal void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvsTo"(%16*, i8*, i8 signext) unnamed_addr #0 {
entry:
  %3 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %12 = call swiftcc i1 @"$s10ObjectiveC22_convertObjCBoolToBoolySbAA0cD0VF"(i8 %2) #13
  call swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvs"(i1 %12, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %3) #13
  %13 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %13)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvs"(i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i1, align 8
  %2 = bitcast i1* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 1, i1 false)
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i1 %0, i1* %value.debug, align 8
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.doThrow = bitcast i8* %5 to %TSb*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 %0, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSb* } @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.doThrow = bitcast i8* %4 to %TSb*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSb* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.resume.0" to i8*), %TSb* undef }, %TSb* %.doThrow, 1
  ret { i8*, %TSb* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame", %"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal i64 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivgTo"(%16*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %11 = call swiftcc i64 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %2) #13
  %12 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %12)
  ret i64 %11
}

define internal swiftcc i64 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 %offset
  %.errorCode = bitcast i8* %3 to %TSi*
  %4 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %4)
  %5 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %5, [24 x i8]* %access-scratch, i64 32, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  %6 = load i64, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %7 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %7)
  ret i64 %6
}

define internal void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivsTo"(%16*, i8*, i64) unnamed_addr #0 {
entry:
  %3 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i8*
  %10 = call i8* @llvm.objc.retain(i8* %9)
  %11 = bitcast i8* %10 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivs"(i64 %2, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %3) #13
  %12 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i8*
  call void @llvm.objc.release(i8* %12)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivs"(i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %value.debug = alloca i64, align 8
  %2 = bitcast i64* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  store i64 %0, i64* %value.debug, align 8
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 %offset
  %.errorCode = bitcast i8* %5 to %TSi*
  %6 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %6)
  %7 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %7, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 %0, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %8 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %8)
  ret void
}

; Function Attrs: noinline
define internal swiftcc { i8*, %TSi* } @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM"(i8* noalias dereferenceable(32), %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #4 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %4 = getelementptr inbounds i8, i8* %3, i64 %offset
  %.errorCode = bitcast i8* %4 to %TSi*
  %5 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %5)
  call void @swift_beginAccess(i8* %4, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %6 = insertvalue { i8*, %TSi* } { i8* bitcast (void (i8*, i1)* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.resume.0" to i8*), %TSi* undef }, %TSi* %.errorCode, 1
  ret { i8*, %TSi* } %6
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.resume.0"(i8* noalias nonnull dereferenceable(32), i1) #0 {
entryresume.0:
  %FramePtr = bitcast i8* %0 to %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame"*
  %vFrame = bitcast %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr to i8*
  %access-scratch = getelementptr inbounds %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  %access-scratch.reload.addr1 = getelementptr inbounds %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame", %"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivM.Frame"* %FramePtr, i32 0, i32 0
  call void @swift_endAccess([24 x i8]* %access-scratch.reload.addr1) #3
  %2 = bitcast [24 x i8]* %access-scratch.reload.addr1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %2)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C14throwSomethingyyKF"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %3 = call swiftcc i1 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvg"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %0)
  br i1 %3, label %4, label %12

4:                                                ; preds = %entry
  %5 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCMD") #6
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @59, i64 0, i64 0), i64 8, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %9 = call swiftcc i64 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivg"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %0)
  %10 = call swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfC"(i64 %7, %swift.bridge* %8, i64 %9, i64 0, %swift.type* swiftself %5)
  %11 = bitcast %TSo7NSErrorC* %10 to %swift.error*
  store %swift.error* %11, %swift.error** %1, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %1) #3
  store %swift.error* null, %swift.error** %1, align 8
  store %swift.error* %11, %swift.error** %1, align 8
  ret void

12:                                               ; preds = %entry
  ret void
}

define internal signext i8 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C14throwSomethingyyKFTo"(%16*, i8*, %20**) unnamed_addr #0 {
entry:
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %5 = ptrtoint %20** %2 to i64
  %6 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* @swift_isaMask, align 8
  %9 = and i64 %7, %8
  %10 = inttoptr i64 %9 to %swift.type*
  %11 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C14throwSomethingyyKF"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %4, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror) #13
  %14 = load %swift.error*, %swift.error** %swifterror, align 8
  %15 = icmp ne %swift.error* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %entry
  br label %33

17:                                               ; preds = %entry
  %18 = phi %swift.error* [ %14, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  %19 = icmp eq i64 %5, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %17
  %21 = inttoptr i64 %5 to i8*
  br label %22

22:                                               ; preds = %20
  %23 = phi i8* [ %21, %20 ]
  %24 = call swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error* %18) #13
  %25 = ptrtoint %TSo7NSErrorC* %24 to i64
  %26 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26)
  %27 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %TSo7NSErrorCSg* %3 to %swift.opaque*
  %29 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCSgMD") #6
  call swiftcc void @"$sSA7pointeexvs"(%swift.opaque* noalias nocapture %28, i8* %23, %swift.type* %29) #13
  %30 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30)
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

31:                                               ; preds = %17
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

32:                                               ; preds = %22, %31
  br label %33

33:                                               ; preds = %16, %32
  %34 = phi i8 [ 0, %32 ], [ 1, %16 ]
  %35 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to i8*
  call void @llvm.objc.release(i8* %35)
  ret i8 %34
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C17test_withThrowingyyKF"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = alloca %TSo7NSErrorC*, align 8
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %5 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5)
  %6 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7)
  %8 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %TSo7NSErrorC*
  store %TSo7NSErrorC* %10, %TSo7NSErrorC** %4, align 8
  %11 = bitcast %TSo7NSErrorC** %4 to i8*
  %12 = ptrtoint i8* %11 to i64
  %13 = load i8*, i8** @"\01L_selector(throwSomethingAndReturnError:)", align 8
  %14 = inttoptr i64 %12 to %20**
  %15 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to %16*
  %16 = call signext i8 bitcast (void ()* @objc_msgSend to i8 (%16*, i8*, %20**)*)(%16* %15, i8* %13, %20** %14)
  %17 = load %TSo7NSErrorC*, %TSo7NSErrorC** %4, align 8
  %18 = ptrtoint %TSo7NSErrorC* %17 to i64
  %19 = inttoptr i64 %18 to %objc_object*
  %20 = bitcast %objc_object* %19 to i8*
  %21 = call i8* @llvm.objc.retain(i8* %20)
  %22 = bitcast i8* %21 to %objc_object*
  %23 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %18, i64* %25, align 8
  %26 = inttoptr i64 %24 to %objc_object*
  %27 = bitcast %objc_object* %26 to i8*
  call void @llvm.objc.release(i8* %27)
  %28 = bitcast %TSo7NSErrorC** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28)
  %29 = icmp ne i8 %16, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %entry
  %31 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31)
  ret void

32:                                               ; preds = %entry
  %33 = bitcast %TSo7NSErrorCSg* %3 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = call swiftcc %swift.error* @"$s10Foundation22_convertNSErrorToErrorys0E0_pSo0C0CSgF"(i64 %34)
  %36 = inttoptr i64 %34 to %objc_object*
  %37 = bitcast %objc_object* %36 to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  store %swift.error* %35, %swift.error** %1, align 8
  ret void
}

define internal signext i8 @"$s7_XCTestyycfU8_13ErrorTestCaseL_C17test_withThrowingyyKFTo"(%16*, i8*, %20**) unnamed_addr #0 {
entry:
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %3 = alloca %TSo7NSErrorCSg, align 8
  %4 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %5 = ptrtoint %20** %2 to i64
  %6 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* @swift_isaMask, align 8
  %9 = and i64 %7, %8
  %10 = inttoptr i64 %9 to %swift.type*
  %11 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_C17test_withThrowingyyKF"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %4, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror) #13
  %14 = load %swift.error*, %swift.error** %swifterror, align 8
  %15 = icmp ne %swift.error* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %entry
  br label %33

17:                                               ; preds = %entry
  %18 = phi %swift.error* [ %14, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  %19 = icmp eq i64 %5, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %17
  %21 = inttoptr i64 %5 to i8*
  br label %22

22:                                               ; preds = %20
  %23 = phi i8* [ %21, %20 ]
  %24 = call swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error* %18) #13
  %25 = ptrtoint %TSo7NSErrorC* %24 to i64
  %26 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26)
  %27 = bitcast %TSo7NSErrorCSg* %3 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %TSo7NSErrorCSg* %3 to %swift.opaque*
  %29 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCSgMD") #6
  call swiftcc void @"$sSA7pointeexvs"(%swift.opaque* noalias nocapture %28, i8* %23, %swift.type* %29) #13
  %30 = bitcast %TSo7NSErrorCSg* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30)
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

31:                                               ; preds = %17
  call void @swift_errorRelease(%swift.error* %18) #3
  br label %32

32:                                               ; preds = %22, %31
  br label %33

33:                                               ; preds = %16, %32
  %34 = phi i8 [ 0, %32 ], [ 1, %16 ]
  %35 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %4 to i8*
  call void @llvm.objc.release(i8* %35)
  ret i8 %34
}

define internal swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_CfD"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  %5 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU8_13ErrorTestCaseL_C*, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %33 = inttoptr i64 %0 to %19*
  %34 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %32, %19* %33)
  %35 = bitcast %3* %34 to %TSo10XCTestCaseC*
  %36 = bitcast %TSo10XCTestCaseC* %35 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %37 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %36 to i8*
  %38 = call i8* @llvm.objc.retain(i8* %37)
  %39 = bitcast i8* %38 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %36, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %40 = inttoptr i64 %0 to %objc_object*
  %41 = bitcast %objc_object* %40 to i8*
  call void @llvm.objc.release(i8* %41)
  %toDestroy = load %T7_XCTestyycfU8_13ErrorTestCaseL_C*, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %42 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %42)
  %43 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43)
  ret %T7_XCTestyycfU8_13ErrorTestCaseL_C* %36
}

define internal %16* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%16*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %14 to %16*
  ret %16* %15
}

define internal swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  %5 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %6 = call i8* @llvm.objc.retain(i8* %5)
  %7 = bitcast i8* %6 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %8 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %11 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %offset
  %.doThrow = bitcast i8* %12 to %TSb*
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %13)
  %14 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %14, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %15 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %15)
  %16 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %16)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %17 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %offset1
  %.errorCode = bitcast i8* %18 to %TSi*
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %19)
  %20 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %20, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %21 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %21)
  %22 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %1 to i8*
  call void @llvm.objc.release(i8* %22)
  %23 = load %T7_XCTestyycfU8_13ErrorTestCaseL_C*, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %23 to %TSo10XCTestCaseC*
  %25 = bitcast %TSo10XCTestCaseC* %24 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %26 = bitcast %TSo10XCTestCaseC* %24 to %objc_object*
  %27 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa"(i64 0) #6
  %28 = extractvalue %swift.metadata_response %27, 0
  %29 = bitcast %swift.type* %28 to %objc_class*
  %30 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %26, %objc_object** %30, align 8
  %31 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %29, %objc_class** %31, align 8
  %32 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %33 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %32, i8* %0)
  %34 = bitcast %3* %33 to %TSo10XCTestCaseC*
  %35 = bitcast %TSo10XCTestCaseC* %34 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %36 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %35 to i8*
  %37 = call i8* @llvm.objc.retain(i8* %36)
  %38 = bitcast i8* %37 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %35, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU8_13ErrorTestCaseL_C*, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %39 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %39)
  %40 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  ret %T7_XCTestyycfU8_13ErrorTestCaseL_C* %35
}

define internal %16* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%16*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %9 to %16*
  ret %16* %10
}

define internal swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU8_13ErrorTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %access-scratch = alloca [24 x i8], align 8
  %access-scratch2 = alloca [24 x i8], align 8
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  %4 = call i8* @llvm.objc.retain(i8* %3)
  %5 = bitcast i8* %4 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %6 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  %7 = call i8* @llvm.objc.retain(i8* %6)
  %8 = bitcast i8* %7 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %offset = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C7doThrowSbvpWvd", align 8
  %9 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %offset
  %.doThrow = bitcast i8* %10 to %TSb*
  %11 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast %TSb* %.doThrow to i8*
  call void @swift_beginAccess(i8* %12, [24 x i8]* %access-scratch, i64 33, i8* null) #3
  %.doThrow._value = getelementptr inbounds %TSb, %TSb* %.doThrow, i32 0, i32 0
  store i1 true, i1* %.doThrow._value, align 1
  call void @swift_endAccess([24 x i8]* %access-scratch) #3
  %13 = bitcast [24 x i8]* %access-scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %13)
  %14 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %14)
  %offset1 = load i64, i64* @"$s7_XCTestyycfU8_13ErrorTestCaseL_C9errorCodeSivpWvd", align 8
  %15 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %offset1
  %.errorCode = bitcast i8* %16 to %TSi*
  %17 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %17)
  %18 = bitcast %TSi* %.errorCode to i8*
  call void @swift_beginAccess(i8* %18, [24 x i8]* %access-scratch2, i64 33, i8* null) #3
  %.errorCode._value = getelementptr inbounds %TSi, %TSi* %.errorCode, i32 0, i32 0
  store i64 42, i64* %.errorCode._value, align 8
  call void @swift_endAccess([24 x i8]* %access-scratch2) #3
  %19 = bitcast [24 x i8]* %access-scratch2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %19)
  %20 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %0 to i8*
  call void @llvm.objc.release(i8* %20)
  %21 = load %T7_XCTestyycfU8_13ErrorTestCaseL_C*, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %22 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %21 to %TSo10XCTestCaseC*
  %23 = bitcast %TSo10XCTestCaseC* %22 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %24 = bitcast %TSo10XCTestCaseC* %22 to %objc_object*
  %25 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa"(i64 0) #6
  %26 = extractvalue %swift.metadata_response %25, 0
  %27 = bitcast %swift.type* %26 to %objc_class*
  %28 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %24, %objc_object** %28, align 8
  %29 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %27, %objc_class** %29, align 8
  %30 = load i8*, i8** @"\01L_selector(init)", align 8
  %31 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %30)
  %32 = bitcast %3* %31 to %TSo10XCTestCaseC*
  %33 = bitcast %TSo10XCTestCaseC* %32 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %34 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %33 to i8*
  %35 = call i8* @llvm.objc.retain(i8* %34)
  %36 = bitcast i8* %35 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  store %T7_XCTestyycfU8_13ErrorTestCaseL_C* %33, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU8_13ErrorTestCaseL_C*, %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self, align 8
  %37 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %37)
  %38 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38)
  ret %T7_XCTestyycfU8_13ErrorTestCaseL_C* %33
}

define internal %16* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CACycfcTo"(%16*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %16* %0 to %T7_XCTestyycfU8_13ErrorTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU8_13ErrorTestCaseL_C* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CACycfc"(%T7_XCTestyycfU8_13ErrorTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU8_13ErrorTestCaseL_C* %8 to %16*
  ret %16* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU8_13ErrorTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>*, i8*, i64, i64, i1 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i1, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSb* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, i64 (%T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, void (i64, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)*, { i8*, %TSi* } (i8*, %T7_XCTestyycfU8_13ErrorTestCaseL_C*)* }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU8_13ErrorTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyF"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %blockCalled = alloca %TSb, align 1
  %2 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 1, i1 false)
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %3 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = bitcast %swift.type* %4 to i8***
  %6 = getelementptr inbounds i8**, i8*** %5, i64 -1
  %.valueWitnesses = load i8**, i8*** %6, align 8, !invariant.load !178, !dereferenceable !179
  %7 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %8 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %7, i32 0, i32 8
  %size = load i64, i64* %8, align 8, !invariant.load !178
  %9 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %9)
  %10 = bitcast i8* %9 to %swift.opaque*
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %0, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug, align 8
  %11 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11)
  %blockCalled._value = getelementptr inbounds %TSb, %TSb* %blockCalled, i32 0, i32 0
  store i1 false, i1* %blockCalled._value, align 1
  %12 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo10XCTContextCMD") #6
  %13 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @60, i64 0, i64 0), i64 7, i1 true)
  %14 = extractvalue { i64, %swift.bridge* } %13, 0
  %15 = extractvalue { i64, %swift.bridge* } %13, 1
  %16 = alloca i8, i64 24, align 16
  %17 = bitcast i8* %16 to %swift.opaque*
  %18 = bitcast %swift.opaque* %17 to <{ %swift.refcounted, %TSb* }>*
  %19 = getelementptr inbounds <{ %swift.refcounted, %TSb* }>, <{ %swift.refcounted, %TSb* }>* %18, i32 0, i32 1
  store %TSb* %blockCalled, %TSb** %19, align 8
  %20 = alloca i8, i64 32, align 16
  %21 = bitcast i8* %20 to %swift.opaque*
  %22 = bitcast %swift.opaque* %21 to <{ %swift.refcounted, %swift.noescape.function }>*
  %23 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %22, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %23, i32 0, i32 0
  store i8* bitcast (void (%objc_object*, %swift.refcounted*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyFySo11XCTActivity_pXEfU_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %23, i32 0, i32 1
  store %swift.opaque* %17, %swift.opaque** %.data, align 8
  call swiftcc void @"$sSo10XCTContextC6XCTestE11runActivity5named5blockxSS_xSo11XCTActivity_pKXEtKlFZ"(%swift.opaque* noalias nocapture sret undef, i64 %14, %swift.bridge* %15, i8* bitcast (void (%swift.opaque*, %objc_object*, %swift.refcounted*, %swift.error**)* @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TRTA.2" to i8*), %swift.opaque* %21, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1), %swift.type* swiftself %12, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror)
  %24 = load %swift.error*, %swift.error** %swifterror, align 8
  %25 = icmp ne %swift.error* %24, null
  br i1 %25, label %41, label %26

26:                                               ; preds = %entry
  call void @swift_bridgeObjectRelease(%swift.bridge* %15) #3
  %blockCalled._value1 = getelementptr inbounds %TSb, %TSb* %blockCalled, i32 0, i32 0
  %27 = load i1, i1* %blockCalled._value1, align 1
  %28 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %29 = extractvalue { i64, %swift.bridge* } %28, 0
  %30 = extractvalue { i64, %swift.bridge* } %28, 1
  %31 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %32 = extractvalue { i8*, %swift.refcounted* } %31, 0
  %33 = extractvalue { i8*, %swift.refcounted* } %31, 1
  %34 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %33) #3
  %35 = bitcast %swift.refcounted* %33 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %10)
  %36 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %27, i8* %32, %swift.opaque* %35, %swift.opaque* noalias nocapture %10, i1 %36, i64 %29, %swift.bridge* %30, i64 476)
  call void @swift_release(%swift.refcounted* %33) #3
  %37 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %38 = load i8*, i8** %37, align 8, !invariant.load !178
  %destroy = bitcast i8* %38 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %10, %swift.type* %4) #3
  call void @swift_release(%swift.refcounted* %33) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %30) #3
  %39 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %39)
  %40 = bitcast %swift.opaque* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %40)
  ret void

41:                                               ; preds = %entry
  %42 = phi %swift.error* [ %24, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  unreachable
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyFySo11XCTActivity_pXEfU_"(%objc_object*, %TSb* nocapture dereferenceable(1)) #0 {
entry:
  %activity.debug = alloca %objc_object*, align 8
  %2 = bitcast %objc_object** %activity.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %objc_object* %0, %objc_object** %activity.debug, align 8
  %._value = getelementptr inbounds %TSb, %TSb* %1, i32 0, i32 0
  store i1 true, i1* %._value, align 1
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TR"(%swift.opaque* noalias nocapture sret, %objc_object*, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %6 = bitcast i8* %2 to void (%objc_object*, %swift.refcounted*, %swift.error**)*
  %7 = bitcast %swift.opaque* %3 to %swift.refcounted*
  call swiftcc void %6(%objc_object* %1, %swift.refcounted* swiftself %7, %swift.error** noalias nocapture swifterror dereferenceable(8) %5) #13
  %8 = load %swift.error*, %swift.error** %5, align 8
  %9 = icmp ne %swift.error* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %entry
  ret void

11:                                               ; preds = %entry
  %12 = phi %swift.error* [ %8, %entry ]
  store %swift.error* null, %swift.error** %5, align 8
  store %swift.error* %12, %swift.error** %5, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %5) #3
  store %swift.error* null, %swift.error** %5, align 8
  store %swift.error* %12, %swift.error** %5, align 8
  ret void
}

define internal void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyFTo"(%21*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %21* %0 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyF"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyF"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %blockCalled = alloca %TSb, align 1
  %2 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 1, i1 false)
  %3 = alloca %TSS, align 8
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %value.debug = alloca %TSS, align 8
  %4 = bitcast %TSS* %value.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %6 = extractvalue %swift.metadata_response %5, 0
  %7 = bitcast %swift.type* %6 to i8***
  %8 = getelementptr inbounds i8**, i8*** %7, i64 -1
  %.valueWitnesses = load i8**, i8*** %8, align 8, !invariant.load !178, !dereferenceable !179
  %9 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %10 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %9, i32 0, i32 8
  %size = load i64, i64* %10, align 8, !invariant.load !178
  %11 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast i8* %11 to %swift.opaque*
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %0, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug, align 8
  %13 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13)
  %blockCalled._value = getelementptr inbounds %TSb, %TSb* %blockCalled, i32 0, i32 0
  store i1 false, i1* %blockCalled._value, align 1
  %14 = bitcast %TSS* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14)
  %15 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo10XCTContextCMD") #6
  %16 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @60, i64 0, i64 0), i64 7, i1 true)
  %17 = extractvalue { i64, %swift.bridge* } %16, 0
  %18 = extractvalue { i64, %swift.bridge* } %16, 1
  %19 = alloca i8, i64 24, align 16
  %20 = bitcast i8* %19 to %swift.opaque*
  %21 = bitcast %swift.opaque* %20 to <{ %swift.refcounted, %TSb* }>*
  %22 = getelementptr inbounds <{ %swift.refcounted, %TSb* }>, <{ %swift.refcounted, %TSb* }>* %21, i32 0, i32 1
  store %TSb* %blockCalled, %TSb** %22, align 8
  %23 = alloca i8, i64 32, align 16
  %24 = bitcast i8* %23 to %swift.opaque*
  %25 = bitcast %swift.opaque* %24 to <{ %swift.refcounted, %swift.noescape.function }>*
  %26 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %25, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 0
  store i8* bitcast ({ i64, %swift.bridge* } (%objc_object*, %swift.refcounted*)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyFSSSo11XCTActivity_pXEfU_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 1
  store %swift.opaque* %20, %swift.opaque** %.data, align 8
  %27 = bitcast %TSS* %3 to %swift.opaque*
  call swiftcc void @"$sSo10XCTContextC6XCTestE11runActivity5named5blockxSS_xSo11XCTActivity_pKXEtKlFZ"(%swift.opaque* noalias nocapture sret %27, i64 %17, %swift.bridge* %18, i8* bitcast (void (%TSS*, %objc_object*, %swift.refcounted*, %swift.error**)* @"$sSo11XCTActivity_pSSs5Error_pIggozo_SoAA_pSSsAB_pIeggrzo_TRTA" to i8*), %swift.opaque* %24, %swift.type* @"$sSSN", %swift.type* swiftself %15, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror)
  %28 = load %swift.error*, %swift.error** %swifterror, align 8
  %29 = icmp ne %swift.error* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %entry
  call void @swift_bridgeObjectRelease(%swift.bridge* %18) #3
  %._guts = getelementptr inbounds %TSS, %TSS* %3, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  %31 = load i64, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  %32 = load %swift.bridge*, %swift.bridge** %._guts._object._object, align 8
  %33 = bitcast %TSS* %value.debug to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %33)
  %value.debug._guts = getelementptr inbounds %TSS, %TSS* %value.debug, i32 0, i32 0
  %value.debug._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %value.debug._guts, i32 0, i32 0
  %value.debug._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %value.debug._guts._object, i32 0, i32 0
  %value.debug._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %value.debug._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %31, i64* %value.debug._guts._object._countAndFlagsBits._value, align 8
  %value.debug._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %value.debug._guts._object, i32 0, i32 1
  store %swift.bridge* %32, %swift.bridge** %value.debug._guts._object._object, align 8
  %34 = bitcast %TSS* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %34)
  %35 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @61, i64 0, i64 0), i64 33, i1 true)
  %36 = extractvalue { i64, %swift.bridge* } %35, 0
  %37 = extractvalue { i64, %swift.bridge* } %35, 1
  %38 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %39 = extractvalue { i64, %swift.bridge* } %38, 0
  %40 = extractvalue { i64, %swift.bridge* } %38, 1
  %41 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA1_"()
  %42 = extractvalue { i8*, %swift.refcounted* } %41, 0
  %43 = extractvalue { i8*, %swift.refcounted* } %41, 1
  %44 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %43) #3
  %45 = bitcast %swift.refcounted* %43 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA2_"(%swift.opaque* noalias nocapture sret %12)
  %46 = call swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA3_"()
  call swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutF"(i64 %31, %swift.bridge* %32, i64 %36, %swift.bridge* %37, i8* %42, %swift.opaque* %45, %swift.opaque* noalias nocapture %12, i1 %46, i64 %39, %swift.bridge* %40, i64 485)
  call void @swift_release(%swift.refcounted* %43) #3
  %47 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %48 = load i8*, i8** %47, align 8, !invariant.load !178
  %destroy = bitcast i8* %48 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %12, %swift.type* %6) #3
  call void @swift_release(%swift.refcounted* %43) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %40) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %37) #3
  %blockCalled._value1 = getelementptr inbounds %TSb, %TSb* %blockCalled, i32 0, i32 0
  %49 = load i1, i1* %blockCalled._value1, align 1
  %50 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %51 = extractvalue { i64, %swift.bridge* } %50, 0
  %52 = extractvalue { i64, %swift.bridge* } %50, 1
  %53 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %54 = extractvalue { i8*, %swift.refcounted* } %53, 0
  %55 = extractvalue { i8*, %swift.refcounted* } %53, 1
  %56 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %55) #3
  %57 = bitcast %swift.refcounted* %55 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %12)
  %58 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %49, i8* %54, %swift.opaque* %57, %swift.opaque* noalias nocapture %12, i1 %58, i64 %51, %swift.bridge* %52, i64 486)
  call void @swift_release(%swift.refcounted* %55) #3
  call void %destroy(%swift.opaque* noalias %12, %swift.type* %6) #3
  call void @swift_release(%swift.refcounted* %55) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %52) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %32) #3
  %59 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %59)
  %60 = bitcast %swift.opaque* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %60)
  ret void

61:                                               ; preds = %entry
  %62 = phi %swift.error* [ %28, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  unreachable
}

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyFSSSo11XCTActivity_pXEfU_"(%objc_object*, %TSb* nocapture dereferenceable(1)) #0 {
entry:
  %activity.debug = alloca %objc_object*, align 8
  %2 = bitcast %objc_object** %activity.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  store %objc_object* %0, %objc_object** %activity.debug, align 8
  %._value = getelementptr inbounds %TSb, %TSb* %1, i32 0, i32 0
  store i1 true, i1* %._value, align 1
  %3 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @61, i64 0, i64 0), i64 33, i1 true)
  %4 = extractvalue { i64, %swift.bridge* } %3, 0
  %5 = extractvalue { i64, %swift.bridge* } %3, 1
  %6 = insertvalue { i64, %swift.bridge* } undef, i64 %4, 0
  %7 = insertvalue { i64, %swift.bridge* } %6, %swift.bridge* %5, 1
  ret { i64, %swift.bridge* } %7
}

define linkonce_odr hidden swiftcc void @"$sSo11XCTActivity_pSSs5Error_pIggozo_SoAA_pSSsAB_pIeggrzo_TR"(%TSS* noalias nocapture sret, %objc_object*, i8*, %swift.opaque*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %6 = bitcast i8* %2 to { i64, %swift.bridge* } (%objc_object*, %swift.refcounted*, %swift.error**)*
  %7 = bitcast %swift.opaque* %3 to %swift.refcounted*
  %8 = call swiftcc { i64, %swift.bridge* } %6(%objc_object* %1, %swift.refcounted* swiftself %7, %swift.error** noalias nocapture swifterror dereferenceable(8) %5) #13
  %9 = extractvalue { i64, %swift.bridge* } %8, 0
  %10 = extractvalue { i64, %swift.bridge* } %8, 1
  %11 = load %swift.error*, %swift.error** %5, align 8
  %12 = icmp ne %swift.error* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %entry
  %14 = phi i64 [ %9, %entry ]
  %15 = phi %swift.bridge* [ %10, %entry ]
  %._guts = getelementptr inbounds %TSS, %TSS* %0, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._countAndFlagsBits = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 0
  %._guts._object._countAndFlagsBits._value = getelementptr inbounds %Ts6UInt64V, %Ts6UInt64V* %._guts._object._countAndFlagsBits, i32 0, i32 0
  store i64 %14, i64* %._guts._object._countAndFlagsBits._value, align 8
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  store %swift.bridge* %15, %swift.bridge** %._guts._object._object, align 8
  ret void

16:                                               ; preds = %entry
  %17 = phi %swift.error* [ %11, %entry ]
  store %swift.error* null, %swift.error** %5, align 8
  store %swift.error* %17, %swift.error** %5, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %5) #3
  store %swift.error* null, %swift.error** %5, align 8
  store %swift.error* %17, %swift.error** %5, align 8
  ret void
}

define linkonce_odr hidden swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA1_"() #0 {
entry:
  ret { i8*, %swift.refcounted* } { i8* bitcast ({ i64, %swift.bridge* } ()* @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA1_SSycfu_" to i8*), %swift.refcounted* null }
}

define linkonce_odr hidden swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA2_"(%swift.opaque* noalias nocapture sret) #0 {
entry:
  call swiftcc void @"$s14StdlibUnittest14SourceLocStackVACycfC"(%swift.opaque* noalias nocapture sret %0)
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA3_"() #0 {
entry:
  ret i1 true
}

define internal void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyFTo"(%21*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %21* %0 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyF"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyF"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %blockCalled = alloca %TSb, align 1
  %2 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 1, i1 false)
  %catchCalled = alloca %TSb, align 1
  %3 = bitcast %TSb* %catchCalled to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 1, i1 false)
  %swifterror = alloca swifterror %swift.error*, align 8
  store %swift.error* null, %swift.error** %swifterror, align 8
  %error.debug = alloca %swift.error*, align 8
  %4 = bitcast %swift.error** %error.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 8, i1 false)
  %5 = call swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64 0) #6
  %6 = extractvalue %swift.metadata_response %5, 0
  %7 = bitcast %swift.type* %6 to i8***
  %8 = getelementptr inbounds i8**, i8*** %7, i64 -1
  %.valueWitnesses = load i8**, i8*** %8, align 8, !invariant.load !178, !dereferenceable !179
  %9 = bitcast i8** %.valueWitnesses to %swift.vwtable*
  %10 = getelementptr inbounds %swift.vwtable, %swift.vwtable* %9, i32 0, i32 8
  %size = load i64, i64* %10, align 8, !invariant.load !178
  %11 = alloca i8, i64 %size, align 16
  call void @llvm.lifetime.start.p0i8(i64 -1, i8* %11)
  %12 = bitcast i8* %11 to %swift.opaque*
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %0, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug, align 8
  %13 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13)
  %blockCalled._value = getelementptr inbounds %TSb, %TSb* %blockCalled, i32 0, i32 0
  store i1 false, i1* %blockCalled._value, align 1
  %14 = bitcast %TSb* %catchCalled to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14)
  %catchCalled._value = getelementptr inbounds %TSb, %TSb* %catchCalled, i32 0, i32 0
  store i1 false, i1* %catchCalled._value, align 1
  %15 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo10XCTContextCMD") #6
  %16 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @58, i64 0, i64 0), i64 8, i1 true)
  %17 = extractvalue { i64, %swift.bridge* } %16, 0
  %18 = extractvalue { i64, %swift.bridge* } %16, 1
  %19 = alloca i8, i64 24, align 16
  %20 = bitcast i8* %19 to %swift.opaque*
  %21 = bitcast %swift.opaque* %20 to <{ %swift.refcounted, %TSb* }>*
  %22 = getelementptr inbounds <{ %swift.refcounted, %TSb* }>, <{ %swift.refcounted, %TSb* }>* %21, i32 0, i32 1
  store %TSb* %blockCalled, %TSb** %22, align 8
  %23 = alloca i8, i64 32, align 16
  %24 = bitcast i8* %23 to %swift.opaque*
  %25 = bitcast %swift.opaque* %24 to <{ %swift.refcounted, %swift.noescape.function }>*
  %26 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %25, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 0
  store i8* bitcast (void (%objc_object*, %swift.refcounted*, %swift.error**)* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyFySo11XCTActivity_pKXEfU_TA" to i8*), i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %26, i32 0, i32 1
  store %swift.opaque* %20, %swift.opaque** %.data, align 8
  call swiftcc void @"$sSo10XCTContextC6XCTestE11runActivity5named5blockxSS_xSo11XCTActivity_pKXEtKlFZ"(%swift.opaque* noalias nocapture sret undef, i64 %17, %swift.bridge* %18, i8* bitcast (void (%swift.opaque*, %objc_object*, %swift.refcounted*, %swift.error**)* @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TRTA" to i8*), %swift.opaque* %24, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* @"$sytN", i32 0, i32 1), %swift.type* swiftself %15, %swift.error** noalias nocapture swifterror dereferenceable(8) %swifterror)
  %27 = load %swift.error*, %swift.error** %swifterror, align 8
  %28 = icmp ne %swift.error* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %entry
  call void @swift_bridgeObjectRelease(%swift.bridge* %18) #3
  br label %30

30:                                               ; preds = %29, %56
  %blockCalled._value2 = getelementptr inbounds %TSb, %TSb* %blockCalled, i32 0, i32 0
  %31 = load i1, i1* %blockCalled._value2, align 1
  %32 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %33 = extractvalue { i64, %swift.bridge* } %32, 0
  %34 = extractvalue { i64, %swift.bridge* } %32, 1
  %35 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %36 = extractvalue { i8*, %swift.refcounted* } %35, 0
  %37 = extractvalue { i8*, %swift.refcounted* } %35, 1
  %38 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %37) #3
  %39 = bitcast %swift.refcounted* %37 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %12)
  %40 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %31, i8* %36, %swift.opaque* %39, %swift.opaque* noalias nocapture %12, i1 %40, i64 %33, %swift.bridge* %34, i64 500)
  call void @swift_release(%swift.refcounted* %37) #3
  %41 = getelementptr inbounds i8*, i8** %.valueWitnesses, i32 1
  %42 = load i8*, i8** %41, align 8, !invariant.load !178
  %destroy = bitcast i8* %42 to void (%swift.opaque*, %swift.type*)*
  call void %destroy(%swift.opaque* noalias %12, %swift.type* %6) #3
  call void @swift_release(%swift.refcounted* %37) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %34) #3
  %catchCalled._value3 = getelementptr inbounds %TSb, %TSb* %catchCalled, i32 0, i32 0
  %43 = load i1, i1* %catchCalled._value3, align 1
  %44 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @2, i64 0, i64 0), i64 76, i1 true)
  %45 = extractvalue { i64, %swift.bridge* } %44, 0
  %46 = extractvalue { i64, %swift.bridge* } %44, 1
  %47 = call swiftcc { i8*, %swift.refcounted* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_"()
  %48 = extractvalue { i8*, %swift.refcounted* } %47, 0
  %49 = extractvalue { i8*, %swift.refcounted* } %47, 1
  %50 = call %swift.refcounted* @swift_retain(%swift.refcounted* returned %49) #3
  %51 = bitcast %swift.refcounted* %49 to %swift.opaque*
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA1_"(%swift.opaque* noalias nocapture sret %12)
  %52 = call swiftcc i1 @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA2_"()
  call swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1 %43, i8* %48, %swift.opaque* %51, %swift.opaque* noalias nocapture %12, i1 %52, i64 %45, %swift.bridge* %46, i64 501)
  call void @swift_release(%swift.refcounted* %49) #3
  call void %destroy(%swift.opaque* noalias %12, %swift.type* %6) #3
  call void @swift_release(%swift.refcounted* %49) #3
  call void @swift_bridgeObjectRelease(%swift.bridge* %46) #3
  %53 = bitcast %TSb* %catchCalled to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %53)
  %54 = bitcast %TSb* %blockCalled to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %54)
  %55 = bitcast %swift.opaque* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 -1, i8* %55)
  ret void

56:                                               ; preds = %entry
  %57 = phi %swift.error* [ %27, %entry ]
  store %swift.error* null, %swift.error** %swifterror, align 8
  call void @swift_bridgeObjectRelease(%swift.bridge* %18) #3
  %58 = call %swift.error* @swift_errorRetain(%swift.error* %57) #3
  store %swift.error* %57, %swift.error** %error.debug, align 8
  %catchCalled._value1 = getelementptr inbounds %TSb, %TSb* %catchCalled, i32 0, i32 0
  store i1 true, i1* %catchCalled._value1, align 1
  call void @swift_errorRelease(%swift.error* %57) #3
  call void @swift_errorRelease(%swift.error* %57) #3
  br label %30
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyFySo11XCTActivity_pKXEfU_"(%objc_object*, %TSb* nocapture dereferenceable(1), %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %activity.debug = alloca %objc_object*, align 8
  %4 = bitcast %objc_object** %activity.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 8, i1 false)
  store %objc_object* %0, %objc_object** %activity.debug, align 8
  %._value = getelementptr inbounds %TSb, %TSb* %1, i32 0, i32 0
  store i1 true, i1* %._value, align 1
  %5 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo7NSErrorCMD") #6
  %6 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @59, i64 0, i64 0), i64 8, i1 true)
  %7 = extractvalue { i64, %swift.bridge* } %6, 0
  %8 = extractvalue { i64, %swift.bridge* } %6, 1
  %9 = call swiftcc %TSo7NSErrorC* @"$sSo7NSErrorC6domain4code8userInfoABSS_SiSDySSypGSgtcfC"(i64 %7, %swift.bridge* %8, i64 -1, i64 0, %swift.type* swiftself %5)
  %10 = bitcast %TSo7NSErrorC* %9 to %swift.error*
  store %swift.error* %10, %swift.error** %3, align 8
  call swiftcc void @swift_willThrow(i8* swiftself undef, %swift.error** noalias nocapture readonly swifterror dereferenceable(8) %3) #3
  store %swift.error* null, %swift.error** %3, align 8
  store %swift.error* %10, %swift.error** %3, align 8
  ret void
}

define internal void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyFTo"(%21*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %21* %0 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyF"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CfD"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %0, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU9_19RunActivityTestCaseL_C* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %1, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %18, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %18
}

define internal %21* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%21*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %21* %0 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU9_19RunActivityTestCaseL_C* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %14 to %21*
  ret %21* %15
}

define internal swiftcc %T7_XCTestyycfU9_19RunActivityTestCaseL_C* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %1, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %17, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %17
}

define internal %21* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%21*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %21* %0 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU9_19RunActivityTestCaseL_C* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %9 to %21*
  ret %21* %10
}

define internal swiftcc %T7_XCTestyycfU9_19RunActivityTestCaseL_C* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CACycfc"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %0, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  store %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %15, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU9_19RunActivityTestCaseL_C*, %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %15
}

define internal %21* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CACycfcTo"(%21*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %21* %0 to %T7_XCTestyycfU9_19RunActivityTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU9_19RunActivityTestCaseL_C* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CACycfc"(%T7_XCTestyycfU9_19RunActivityTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU9_19RunActivityTestCaseL_C* %8 to %21*
  ret %21* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU9_19RunActivityTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>, <{ void (%T7_XCTestyycfU9_19RunActivityTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>*, i8* }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

define internal swiftcc void @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyF"(%T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %2 = alloca %TSo20XCUIKeyModifierFlagsV, align 8
  %3 = alloca %TSo20XCUIKeyModifierFlagsV, align 8
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %0, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self.debug, align 8
  %4 = call %swift.type* @__swift_instantiateConcreteTypeFromMangledName({ i64, i32 }* @"$sSo15XCUIApplicationCMD") #6
  %5 = call swiftcc %TSo15XCUIApplicationC* @"$sSo15XCUIApplicationCABycfC"(%swift.type* swiftself %4)
  %6 = bitcast %TSo15XCUIApplicationC* %5 to %TSo11XCUIElementC*
  %7 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @57, i64 0, i64 0), i64 1, i1 true)
  %8 = extractvalue { i64, %swift.bridge* } %7, 0
  %9 = extractvalue { i64, %swift.bridge* } %7, 1
  %10 = call swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64 %8, %swift.bridge* %9)
  call void @swift_bridgeObjectRelease(%swift.bridge* %9) #3
  %11 = call swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64 0) #6
  %12 = extractvalue %swift.metadata_response %11, 0
  %13 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 0, %swift.type* %12)
  %14 = extractvalue { %swift.bridge*, i8* } %13, 0
  %15 = extractvalue { %swift.bridge*, i8* } %13, 1
  %16 = bitcast i8* %15 to %TSo20XCUIKeyModifierFlagsV*
  %17 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17)
  %18 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  %19 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWl"() #6
  call swiftcc void @"$ss10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfC"(%swift.opaque* noalias nocapture sret %18, %swift.bridge* %14, %swift.type* %12, i8** %19, %swift.type* swiftself %12)
  %.rawValue = getelementptr inbounds %TSo20XCUIKeyModifierFlagsV, %TSo20XCUIKeyModifierFlagsV* %2, i32 0, i32 0
  %.rawValue._value = getelementptr inbounds %TSu, %TSu* %.rawValue, i32 0, i32 0
  %20 = load i64, i64* %.rawValue._value, align 8
  %21 = load i8*, i8** @"\01L_selector(typeKey:modifierFlags:)", align 8
  %22 = bitcast %TSo8NSStringC* %10 to %0*
  %23 = bitcast %TSo11XCUIElementC* %6 to %22*
  call void bitcast (void ()* @objc_msgSend to void (%22*, i8*, %0*, i64)*)(%22* %23, i8* %21, %0* %22, i64 %20)
  %24 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24)
  %25 = bitcast %TSo8NSStringC* %10 to i8*
  call void @llvm.objc.release(i8* %25)
  %26 = bitcast %TSo11XCUIElementC* %6 to i8*
  call void @llvm.objc.release(i8* %26)
  %27 = call swiftcc %TSo15XCUIApplicationC* @"$sSo15XCUIApplicationCABycfC"(%swift.type* swiftself %4)
  %28 = bitcast %TSo15XCUIApplicationC* %27 to %TSo11XCUIElementC*
  %29 = load %TSo8NSStringC*, %TSo8NSStringC** getelementptr inbounds (%TSo15XCUIKeyboardKeya, %TSo15XCUIKeyboardKeya* bitcast (%0** @XCUIKeyboardKeyDelete to %TSo15XCUIKeyboardKeya*), i32 0, i32 0), align 8
  %30 = bitcast %TSo8NSStringC* %29 to i8*
  %31 = call i8* @llvm.objc.retain(i8* %30)
  %32 = bitcast i8* %31 to %TSo8NSStringC*
  %33 = call swiftcc { %swift.bridge*, i8* } @"$ss27_allocateUninitializedArrayySayxG_BptBwlF"(i64 0, %swift.type* %12)
  %34 = extractvalue { %swift.bridge*, i8* } %33, 0
  %35 = extractvalue { %swift.bridge*, i8* } %33, 1
  %36 = bitcast i8* %35 to %TSo20XCUIKeyModifierFlagsV*
  %37 = bitcast %TSo20XCUIKeyModifierFlagsV* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37)
  %38 = bitcast %TSo20XCUIKeyModifierFlagsV* %3 to %swift.opaque*
  call swiftcc void @"$ss10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfC"(%swift.opaque* noalias nocapture sret %38, %swift.bridge* %34, %swift.type* %12, i8** %19, %swift.type* swiftself %12)
  %.rawValue1 = getelementptr inbounds %TSo20XCUIKeyModifierFlagsV, %TSo20XCUIKeyModifierFlagsV* %3, i32 0, i32 0
  %.rawValue1._value = getelementptr inbounds %TSu, %TSu* %.rawValue1, i32 0, i32 0
  %39 = load i64, i64* %.rawValue1._value, align 8
  call swiftcc void @"$sSo11XCUIElementC6XCTestE7typeKey_13modifierFlagsySo012XCUIKeyboardD0a_So015XCUIKeyModifierF0VtF"(%TSo8NSStringC* %29, i64 %39, %TSo11XCUIElementC* swiftself %28)
  %40 = bitcast %TSo20XCUIKeyModifierFlagsV* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40)
  %41 = bitcast %TSo8NSStringC* %29 to i8*
  call void @llvm.objc.release(i8* %41)
  %42 = bitcast %TSo11XCUIElementC* %28 to i8*
  call void @llvm.objc.release(i8* %42)
  ret void
}

define linkonce_odr hidden swiftcc %TSo15XCUIApplicationC* @"$sSo15XCUIApplicationCABycfC"(%swift.type* swiftself) #0 {
entry:
  %1 = call %objc_class* @swift_getObjCClassFromMetadata(%swift.type* %0) #6
  %2 = call %objc_object* @objc_allocWithZone(%objc_class* %1)
  %3 = bitcast %objc_object* %2 to %TSo15XCUIApplicationC*
  %4 = call swiftcc %TSo15XCUIApplicationC* @"$sSo15XCUIApplicationCABycfcTO"(%TSo15XCUIApplicationC* swiftself %3)
  ret %TSo15XCUIApplicationC* %4
}

define linkonce_odr hidden swiftcc %TSo15XCUIApplicationC* @"$sSo15XCUIApplicationCABycfcTO"(%TSo15XCUIApplicationC* swiftself) #0 {
entry:
  %1 = load i8*, i8** @"\01L_selector(init)", align 8
  %2 = bitcast %TSo15XCUIApplicationC* %0 to %23*
  %3 = call %23* bitcast (void ()* @objc_msgSend to %23* (%23*, i8*)*)(%23* %2, i8* %1) #13
  %4 = bitcast %23* %3 to %TSo15XCUIApplicationC*
  ret %TSo15XCUIApplicationC* %4
}

define internal void @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyFTo"(%24*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %24* %0 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %2 to i8*
  %9 = call i8* @llvm.objc.retain(i8* %8)
  %10 = bitcast i8* %9 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  call swiftcc void @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C04testbC0yyF"(%T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself %2) #13
  %11 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %2 to i8*
  call void @llvm.objc.release(i8* %11)
  ret void
}

define internal swiftcc void @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CfD"(%T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself) #0 {
entry:
  %self.debug = alloca %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %0, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self.debug, align 8
  %2 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %0 to %TSo10XCTestCaseC*
  %3 = bitcast %TSo10XCTestCaseC* %2 to %objc_object*
  %4 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMa"(i64 0) #6
  %5 = extractvalue %swift.metadata_response %4, 0
  %6 = bitcast %swift.type* %5 to %objc_class*
  %7 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %3, %objc_object** %7, align 8
  %8 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %6, %objc_class** %8, align 8
  %9 = load i8*, i8** @"\01L_selector(dealloc)", align 8
  call void bitcast (void ()* @objc_msgSendSuper2 to void (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %9)
  ret void
}

define internal swiftcc %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %invocation.debug = alloca i64, align 8
  %3 = bitcast i64* %invocation.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i64 %0, i64* %invocation.debug, align 8
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %1, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithInvocation:)", align 8
  %15 = inttoptr i64 %0 to %19*
  %16 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, %19*)*)(%objc_super* %objc_super, i8* %14, %19* %15)
  %17 = bitcast %3* %16 to %TSo10XCTestCaseC*
  %18 = bitcast %TSo10XCTestCaseC* %17 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %19 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %18 to i8*
  %20 = call i8* @llvm.objc.retain(i8* %19)
  %21 = bitcast i8* %20 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %18, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %22 = inttoptr i64 %0 to %objc_object*
  %23 = bitcast %objc_object* %22 to i8*
  call void @llvm.objc.release(i8* %23)
  %toDestroy = load %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %24 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %24)
  %25 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25)
  ret %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %18
}

define internal %24* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C10invocationACSo12NSInvocationCSg_tcfcTo"(%24*, i8*, %19*) unnamed_addr #0 {
entry:
  %3 = bitcast %24* %0 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %4 = ptrtoint %19* %2 to i64
  %5 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* @swift_isaMask, align 8
  %8 = and i64 %6, %7
  %9 = inttoptr i64 %8 to %swift.type*
  %10 = inttoptr i64 %4 to %objc_object*
  %11 = bitcast %objc_object* %10 to i8*
  %12 = call i8* @llvm.objc.retain(i8* %11)
  %13 = bitcast i8* %12 to %objc_object*
  %14 = call swiftcc %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C10invocationACSo12NSInvocationCSg_tcfc"(i64 %4, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself %3) #13
  %15 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %14 to %24*
  ret %24* %15
}

define internal swiftcc %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, align 8
  %2 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %selector.debug = alloca i8*, align 8
  %3 = bitcast i8** %selector.debug to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %4 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4)
  store i8* %0, i8** %selector.debug, align 8
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %1, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %5 = load %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %6 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %5 to %TSo10XCTestCaseC*
  %7 = bitcast %TSo10XCTestCaseC* %6 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %8 = bitcast %TSo10XCTestCaseC* %6 to %objc_object*
  %9 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMa"(i64 0) #6
  %10 = extractvalue %swift.metadata_response %9, 0
  %11 = bitcast %swift.type* %10 to %objc_class*
  %12 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %8, %objc_object** %12, align 8
  %13 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %11, %objc_class** %13, align 8
  %14 = load i8*, i8** @"\01L_selector(initWithSelector:)", align 8
  %15 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*, i8*)*)(%objc_super* %objc_super, i8* %14, i8* %0)
  %16 = bitcast %3* %15 to %TSo10XCTestCaseC*
  %17 = bitcast %TSo10XCTestCaseC* %16 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %18 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %17 to i8*
  %19 = call i8* @llvm.objc.retain(i8* %18)
  %20 = bitcast i8* %19 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %17, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %21 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %21)
  %22 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22)
  ret %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %17
}

define internal %24* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfcTo"(%24*, i8*, i8*) unnamed_addr #0 {
entry:
  %3 = bitcast %24* %0 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %4 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* @swift_isaMask, align 8
  %7 = and i64 %5, %6
  %8 = inttoptr i64 %7 to %swift.type*
  %9 = call swiftcc %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_C8selectorAC10ObjectiveC8SelectorV_tcfc"(i8* %2, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself %3) #13
  %10 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %9 to %24*
  ret %24* %10
}

define internal swiftcc %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CACycfc"(%T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself) #0 {
entry:
  %self = alloca %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, align 8
  %1 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  %objc_super = alloca %objc_super, align 8
  %2 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2)
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %0, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %3 = load %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %4 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %3 to %TSo10XCTestCaseC*
  %5 = bitcast %TSo10XCTestCaseC* %4 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %6 = bitcast %TSo10XCTestCaseC* %4 to %objc_object*
  %7 = call swiftcc %swift.metadata_response @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMa"(i64 0) #6
  %8 = extractvalue %swift.metadata_response %7, 0
  %9 = bitcast %swift.type* %8 to %objc_class*
  %10 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 0
  store %objc_object* %6, %objc_object** %10, align 8
  %11 = getelementptr inbounds %objc_super, %objc_super* %objc_super, i32 0, i32 1
  store %objc_class* %9, %objc_class** %11, align 8
  %12 = load i8*, i8** @"\01L_selector(init)", align 8
  %13 = call %3* bitcast (void ()* @objc_msgSendSuper2 to %3* (%objc_super*, i8*)*)(%objc_super* %objc_super, i8* %12)
  %14 = bitcast %3* %13 to %TSo10XCTestCaseC*
  %15 = bitcast %TSo10XCTestCaseC* %14 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %16 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %15 to i8*
  %17 = call i8* @llvm.objc.retain(i8* %16)
  %18 = bitcast i8* %17 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  store %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %15, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %toDestroy = load %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*, %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self, align 8
  %19 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %toDestroy to i8*
  call void @llvm.objc.release(i8* %19)
  %20 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C** %self to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20)
  ret %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %15
}

define internal %24* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CACycfcTo"(%24*, i8*) unnamed_addr #0 {
entry:
  %2 = bitcast %24* %0 to %T7_XCTestyycfU10_15TypeKeyTestCaseL_C*
  %3 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* @swift_isaMask, align 8
  %6 = and i64 %4, %5
  %7 = inttoptr i64 %6 to %swift.type*
  %8 = call swiftcc %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CACycfc"(%T7_XCTestyycfU10_15TypeKeyTestCaseL_C* swiftself %2) #13
  %9 = bitcast %T7_XCTestyycfU10_15TypeKeyTestCaseL_C* %8 to %24*
  ret %24* %9
}

; Function Attrs: noinline nounwind readnone
define internal swiftcc %swift.metadata_response @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* bitcast (i64* getelementptr inbounds (<{ void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* }>, <{ void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)*, i8**, i64, %objc_class*, %swift.opaque*, %swift.opaque*, i64, i32, i32, i32, i16, i16, i32, i32, <{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>*, i8*, void (%T7_XCTestyycfU10_15TypeKeyTestCaseL_C*)* }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMf", i32 0, i32 2) to %objc_class*))
  %4 = bitcast %objc_class* %3 to %swift.type*
  store atomic %swift.type* %4, %swift.type** @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %5 = phi %swift.type* [ %1, %entry ], [ %4, %cacheIsNull ]
  %6 = insertvalue %swift.metadata_response undef, %swift.type* %5, 0
  %7 = insertvalue %swift.metadata_response %6, i64 0, 1
  ret %swift.metadata_response %7
}

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftXCTest"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftAppKit"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftFoundation"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftObjectiveC"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftDarwin"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCoreFoundation"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftDispatch"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCoreGraphics"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftIOKit"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftXPC"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCoreData"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftQuartzCore"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftMetal"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCoreImage"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCompatibility50"()

declare extern_weak void @"_swift_FORCE_LOAD_$_swiftCompatibilityDynamicReplacements"()

declare swiftcc %TSo8NSStringC* @"$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF"(i64, %swift.bridge*) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSo20XCUIKeyModifierFlagsVML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call swiftcc %swift.metadata_response @swift_getForeignTypeMetadata(i64 %0, %swift.type* getelementptr inbounds (%swift.full_type, %swift.full_type* bitcast (<{ i8**, i64, <{ i32, i64, i64, i64, i64, i32, i32, i64 }>*, i32, [4 x i8] }>* @"$sSo20XCUIKeyModifierFlagsVMf" to %swift.full_type*), i32 0, i32 1)) #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = extractvalue %swift.metadata_response %3, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %is_complete, label %cont

is_complete:                                      ; preds = %cacheIsNull
  store atomic %swift.type* %4, %swift.type** @"$sSo20XCUIKeyModifierFlagsVML" release, align 8
  br label %cont

cont:                                             ; preds = %is_complete, %cacheIsNull, %entry
  %7 = phi %swift.type* [ %1, %entry ], [ %4, %is_complete ], [ %4, %cacheIsNull ]
  %8 = phi i64 [ 0, %entry ], [ %5, %cacheIsNull ], [ 0, %is_complete ]
  %9 = insertvalue %swift.metadata_response undef, %swift.type* %7, 0
  %10 = insertvalue %swift.metadata_response %9, i64 %8, 1
  ret %swift.metadata_response %10
}

declare swiftcc void @"$ss10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfC"(%swift.opaque* noalias nocapture sret, %swift.bridge*, %swift.type*, i8**, %swift.type* swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* bitcast ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMc" to %swift.protocol_conformance_descriptor*), %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

declare extern_weak swiftcc void @"$sSo11XCUIElementC6XCTestE7typeKey_13modifierFlagsySo012XCUIKeyboardD0a_So015XCUIKeyModifierF0VtF"(%TSo8NSStringC*, i64, %TSo11XCUIElementC* swiftself) #0

; Function Attrs: nounwind readnone
declare %objc_class* @swift_getObjCClassFromMetadata(%swift.type*) #6

declare swiftcc %swift.metadata_response @"$s14StdlibUnittest14SourceLocStackVMa"(i64) #0

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyFySo11XCTActivity_pKXEfU_TA"(%objc_object*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %TSb* }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %TSb* }>, <{ %swift.refcounted, %TSb* }>* %3, i32 0, i32 1
  %5 = load %TSb*, %TSb** %4, align 8
  tail call swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C13test_throwingyyFySo11XCTActivity_pKXEfU_"(%objc_object* %0, %TSb* nocapture dereferenceable(1) %5, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TRTA"(%swift.opaque* noalias nocapture sret, %objc_object*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %4 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  %6 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  %7 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TR"(%swift.opaque* noalias nocapture sret %0, %objc_object* %1, i8* %6, %swift.opaque* %7, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc void @"$sSo10XCTContextC6XCTestE11runActivity5named5blockxSS_xSo11XCTActivity_pKXEtKlFZ"(%swift.opaque* noalias nocapture sret, i64, %swift.bridge*, i8*, %swift.opaque*, %swift.type*, %swift.type* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0

; Function Attrs: nounwind
declare %swift.error* @swift_errorRetain(%swift.error*) #3

; Function Attrs: nounwind
declare void @swift_errorRelease(%swift.error*) #3

declare swiftcc void @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1, i8*, %swift.opaque*, %swift.opaque* noalias nocapture, i1, i64, %swift.bridge*, i64) #0

declare swiftcc void @"$s14StdlibUnittest14SourceLocStackVACycfC"(%swift.opaque* noalias nocapture sret) #0

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACPxycfCTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %swift.type* swiftself, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %4 = call i8** @"$sS2us17FixedWidthIntegersWl"() #6
  call swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfC"(%swift.opaque* noalias nocapture sret %2, %swift.type* %Self, i8** %3, i8** %4, %swift.type* swiftself %1) #13
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP8containsySb7ElementQzFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call swiftcc i1 @"$ss9OptionSetPs7ElementQzRszrlE8containsySbxF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %3, %swift.opaque* noalias nocapture swiftself %4) #13
  ret i1 %5
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP5unionyxxnFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %6 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPsE5unionyxxF"(%swift.opaque* noalias nocapture sret %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, %swift.opaque* noalias nocapture swiftself %6) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP12intersectionyxxFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %6 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPsE12intersectionyxxF"(%swift.opaque* noalias nocapture sret %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, %swift.opaque* noalias nocapture swiftself %6) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP19symmetricDifferenceyxxnFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %6 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPsE19symmetricDifferenceyxxF"(%swift.opaque* noalias nocapture sret %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, %swift.opaque* noalias nocapture swiftself %6) #13
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP6insertySb8inserted_7ElementQz17memberAfterInserttAHnFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %6 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  %7 = call swiftcc i1 @"$ss9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF"(%swift.opaque* noalias nocapture %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, %swift.opaque* nocapture swiftself %6) #13
  ret i1 %7
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP6removey7ElementQzSgAGFTW"(%TSo20XCUIKeyModifierFlagsVSg* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsVSg* %0 to %TSq.3*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %6 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPs7ElementQzRszrlE6removeyxSgxF"(%TSq.3* noalias nocapture sret %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, %swift.opaque* nocapture swiftself %6) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP6update4with7ElementQzSgAHn_tFTW"(%TSo20XCUIKeyModifierFlagsVSg* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsVSg* %0 to %TSq.3*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %6 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF"(%TSq.3* noalias nocapture sret %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, %swift.opaque* nocapture swiftself %6) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP9formUnionyyxnFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %4 = call i8** @"$sS2us17FixedWidthIntegersWl"() #6
  %5 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %3, i8** %4, %swift.opaque* nocapture swiftself %5) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP16formIntersectionyyxFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %4 = call i8** @"$sS2us17FixedWidthIntegersWl"() #6
  %5 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %3, i8** %4, %swift.opaque* nocapture swiftself %5) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP23formSymmetricDifferenceyyxnFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #6
  %4 = call i8** @"$sS2us17FixedWidthIntegersWl"() #6
  %5 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  call swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %3, i8** %4, %swift.opaque* nocapture swiftself %5) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP11subtractingyxxFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = bitcast %TSo20XCUIKeyModifierFlagsV* %2 to %swift.opaque*
  call swiftcc void @"$ss10SetAlgebraPsE11subtractingyxxF"(%swift.opaque* noalias nocapture sret %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %SelfWitnessTable, %swift.opaque* noalias nocapture swiftself %5) #13
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP8isSubset2ofSbx_tFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %4 = call swiftcc i1 @"$ss10SetAlgebraPsE8isSubset2ofSbx_tF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %SelfWitnessTable, %swift.opaque* noalias nocapture swiftself %3) #13
  ret i1 %4
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP10isDisjoint4withSbx_tFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %4 = call swiftcc i1 @"$ss10SetAlgebraPsE10isDisjoint4withSbx_tF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %SelfWitnessTable, %swift.opaque* noalias nocapture swiftself %3) #13
  ret i1 %4
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP10isSuperset2ofSbx_tFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %4 = call swiftcc i1 @"$ss10SetAlgebraPsE10isSuperset2ofSbx_tF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %SelfWitnessTable, %swift.opaque* noalias nocapture swiftself %3) #13
  ret i1 %4
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP7isEmptySbvgTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %1 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %2 = call swiftcc i1 @"$ss10SetAlgebraPsE7isEmptySbvg"(%swift.type* %Self, i8** %SelfWitnessTable, %swift.opaque* noalias nocapture swiftself %1) #13
  ret i1 %2
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACPyxqd__ncSTRd__7ElementQyd__AERtzlufCTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type* %"\CF\84_0_0", i8** %"\CF\84_0_0.Sequence", %swift.type* swiftself, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  call swiftcc void @"$ss10SetAlgebraPsEyxqd__ncSTRd__7ElementQyd__ACRtzlufC"(%swift.opaque* noalias nocapture sret %3, %swift.opaque* noalias nocapture %1, %swift.type* %Self, %swift.type* %"\CF\84_0_0", i8** %SelfWitnessTable, i8** %"\CF\84_0_0.Sequence", %swift.type* swiftself %2) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCsACP8subtractyyxFTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %2 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  call swiftcc void @"$ss10SetAlgebraPsE8subtractyyxF"(%swift.opaque* noalias nocapture %2, %swift.type* %Self, i8** %SelfWitnessTable, %swift.opaque* nocapture swiftself %3) #13
  ret void
}

define linkonce_odr hidden swiftcc i1 @"$sSo20XCUIKeyModifierFlagsVSQSCSQ2eeoiySbx_xtFZTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %TSo20XCUIKeyModifierFlagsV* noalias nocapture dereferenceable(8), %swift.type* swiftself, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = bitcast %TSo20XCUIKeyModifierFlagsV* %1 to %swift.opaque*
  %5 = call i8** @"$sSo20XCUIKeyModifierFlagsVABSYSCWl"() #6
  %6 = call swiftcc i1 @"$ss2eeoiySbx_xtSYRzSQ8RawValueRpzlF"(%swift.opaque* noalias nocapture %3, %swift.opaque* noalias nocapture %4, %swift.type* %Self, i8** %5, i8** @"$sSuSQsWP") #13
  ret i1 %6
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCsACP05arrayG0x0fG7ElementQzd_tcfCTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %swift.bridge*, %swift.type* swiftself, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %3 = bitcast %TSo20XCUIKeyModifierFlagsV* %0 to %swift.opaque*
  %4 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWl"() #6
  call swiftcc void @"$ss10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfC"(%swift.opaque* noalias nocapture sret %3, %swift.bridge* %1, %swift.type* %Self, i8** %4, %swift.type* swiftself %2) #13
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCsACP8rawValuex03RawG0Qz_tcfCTW"(%TSo20XCUIKeyModifierFlagsV* noalias nocapture sret, %TSu* noalias nocapture dereferenceable(8), %swift.type* swiftself, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %._value = getelementptr inbounds %TSu, %TSu* %1, i32 0, i32 0
  %3 = load i64, i64* %._value, align 8
  %4 = call swiftcc i64 @"$sSo20XCUIKeyModifierFlagsV8rawValueABSu_tcfC"(i64 %3) #13
  %.rawValue = getelementptr inbounds %TSo20XCUIKeyModifierFlagsV, %TSo20XCUIKeyModifierFlagsV* %0, i32 0, i32 0
  %.rawValue._value = getelementptr inbounds %TSu, %TSu* %.rawValue, i32 0, i32 0
  store i64 %4, i64* %.rawValue._value, align 8
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$sSo20XCUIKeyModifierFlagsV8rawValueABSu_tcfC"(i64) #0 {
entry:
  ret i64 %0
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVSYSCSY8rawValuexSg03RawE0Qz_tcfCTW"(%TSo20XCUIKeyModifierFlagsVSg* noalias nocapture sret, %TSu* noalias nocapture dereferenceable(8), %swift.type* swiftself, %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %._value = getelementptr inbounds %TSu, %TSu* %1, i32 0, i32 0
  %3 = load i64, i64* %._value, align 8
  %4 = call swiftcc i64 @"$sSo20XCUIKeyModifierFlagsV8rawValueABSu_tcfC"(i64 %3) #13
  %5 = bitcast %TSo20XCUIKeyModifierFlagsVSg* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %TSo20XCUIKeyModifierFlagsVSg, %TSo20XCUIKeyModifierFlagsVSg* %0, i32 0, i32 1
  %7 = bitcast [1 x i8]* %6 to i1*
  store i1 false, i1* %7, align 8
  ret void
}

define linkonce_odr hidden swiftcc void @"$sSo20XCUIKeyModifierFlagsVSYSCSY8rawValue03RawE0QzvgTW"(%TSu* noalias nocapture sret, %TSo20XCUIKeyModifierFlagsV* noalias nocapture swiftself dereferenceable(8), %swift.type* %Self, i8** %SelfWitnessTable) #0 {
entry:
  %.rawValue = getelementptr inbounds %TSo20XCUIKeyModifierFlagsV, %TSo20XCUIKeyModifierFlagsV* %1, i32 0, i32 0
  %.rawValue._value = getelementptr inbounds %TSu, %TSu* %.rawValue, i32 0, i32 0
  %2 = load i64, i64* %.rawValue._value, align 8
  %3 = call swiftcc i64 @"$sSo20XCUIKeyModifierFlagsV8rawValueSuvg"(i64 %2) #13
  %._value = getelementptr inbounds %TSu, %TSu* %0, i32 0, i32 0
  store i64 %3, i64* %._value, align 8
  ret void
}

define linkonce_odr hidden swiftcc i64 @"$sSo20XCUIKeyModifierFlagsV8rawValueSuvg"(i64) #0 {
entry:
  ret i64 %0
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlFfA1_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s14StdlibUnittest10expectTrue__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutFfA0_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

; Function Attrs: nounwind
declare swiftcc void @swift_willThrow(i8*, %swift.error**) #3

declare swiftcc %TSo12NSDictionaryC* @"$sSD10FoundationE19_bridgeToObjectiveCSo12NSDictionaryCyF"(%swift.bridge*, %swift.type*, %swift.type*, i8**) #0

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyFSSSo11XCTActivity_pXEfU_TA"(%objc_object*, %swift.refcounted* swiftself) #0 {
entry:
  %2 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %TSb* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %TSb* }>, <{ %swift.refcounted, %TSb* }>* %2, i32 0, i32 1
  %4 = load %TSb*, %TSb** %3, align 8
  %5 = tail call swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C27test_noThrow_returns_stringyyFSSSo11XCTActivity_pXEfU_"(%objc_object* %0, %TSb* nocapture dereferenceable(1) %4)
  ret { i64, %swift.bridge* } %5
}

define internal swiftcc void @"$sSo11XCTActivity_pSSs5Error_pIggozo_SoAA_pSSsAB_pIeggrzo_TRTA"(%TSS* noalias nocapture sret, %objc_object*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %4 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  %6 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  %7 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSo11XCTActivity_pSSs5Error_pIggozo_SoAA_pSSsAB_pIeggrzo_TR"(%TSS* noalias nocapture sret %0, %objc_object* %1, i8* %6, %swift.opaque* %7, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutF"(i64, %swift.bridge*, i64, %swift.bridge*, i8*, %swift.opaque*, %swift.opaque* noalias nocapture, i1, i64, %swift.bridge*, i64) #0

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlFfA0_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlFfA1_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlFfA2_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s6XCTest20XCTAssertThrowsError__4file4line_yxyKXK_SSyXKs12StaticStringVSuys0D0_pXEtlFfA0_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define linkonce_odr hidden swiftcc { i64, %swift.bridge* } @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineySS_S2SyXKAA14SourceLocStackVSbSSSutFfA1_SSycfu_"() #0 {
entry:
  %0 = call swiftcc { i64, %swift.bridge* } @"$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC"(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @19, i64 0, i64 0), i64 0, i1 true)
  %1 = extractvalue { i64, %swift.bridge* } %0, 0
  %2 = extractvalue { i64, %swift.bridge* } %0, 1
  %3 = insertvalue { i64, %swift.bridge* } undef, i64 %1, 0
  %4 = insertvalue { i64, %swift.bridge* } %3, %swift.bridge* %2, 1
  ret { i64, %swift.bridge* } %4
}

define internal swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyFySo11XCTActivity_pXEfU_TA"(%objc_object*, %swift.refcounted* swiftself) #0 {
entry:
  %2 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %TSb* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %TSb* }>, <{ %swift.refcounted, %TSb* }>* %2, i32 0, i32 1
  %4 = load %TSb*, %TSb** %3, align 8
  tail call swiftcc void @"$s7_XCTestyycfU9_19RunActivityTestCaseL_C17test_noThrow_voidyyFySo11XCTActivity_pXEfU_"(%objc_object* %0, %TSb* nocapture dereferenceable(1) %4)
  ret void
}

define internal swiftcc void @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TRTA.2"(%swift.opaque* noalias nocapture sret, %objc_object*, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %4 = bitcast %swift.refcounted* %2 to <{ %swift.refcounted, %swift.noescape.function }>*
  %5 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %4, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 0
  %6 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %5, i32 0, i32 1
  %7 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSo11XCTActivity_ps5Error_pIggzo_SoAA_pytsAB_pIeggrzo_TR"(%swift.opaque* noalias nocapture sret %0, %objc_object* %1, i8* %6, %swift.opaque* %7, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %3)
  ret void
}

declare swiftcc void @"$s7_XCTestyycfU8_13ErrorTestCaseL_CIetMg_TC"(i8* noalias dereferenceable(32), i1) #0

declare swiftcc %TSo7NSErrorC* @"$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF"(%swift.error*) #0

declare swiftcc void @"$sSA7pointeexvs"(%swift.opaque* noalias nocapture, i8*, %swift.type*) #0

declare swiftcc %swift.error* @"$s10Foundation22_convertNSErrorToErrorys0E0_pSo0C0CSgF"(i64) #0

declare swiftcc void @"$s7_XCTestyycfU7_13ErrorTestCaseL_CIetMg_TC"(i8* noalias dereferenceable(32), i1) #0

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFSSyKXEfu_TA"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %T7_XCTestyycfU7_13ErrorTestCaseL_C* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %T7_XCTestyycfU7_13ErrorTestCaseL_C* }>, <{ %swift.refcounted, %T7_XCTestyycfU7_13ErrorTestCaseL_C* }>* %2, i32 0, i32 1
  %4 = load %T7_XCTestyycfU7_13ErrorTestCaseL_C*, %T7_XCTestyycfU7_13ErrorTestCaseL_C** %3, align 8
  %5 = tail call swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU7_13ErrorTestCaseL_C17test_withThrowingyyFSSyKXEfu_"(%T7_XCTestyycfU7_13ErrorTestCaseL_C* %4, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %1)
  ret { i64, %swift.bridge* } %5
}

define internal swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA"(%TSS* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TR"(%TSS* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA.3"(%TSS* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TR"(%TSS* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

declare swiftcc void @"$s6XCTest14XCTAssertEqual___4file4lineyxyKXK_xyKXKSSyXKs12StaticStringVSutSQRzlF"(i8*, %swift.opaque*, i8*, %swift.opaque*, i8*, %swift.opaque*, i64, i64, i8, i64, %swift.type*, i8**) #0

; Function Attrs: nounwind
declare i8* @llvm.objc.autoreleaseReturnValue(i8*) #3

declare swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_CIetMg_TC"(i8* noalias dereferenceable(32), i1) #0

define internal swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_TA"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %T7_XCTestyycfU6_13ErrorTestCaseL_C* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %T7_XCTestyycfU6_13ErrorTestCaseL_C* }>, <{ %swift.refcounted, %T7_XCTestyycfU6_13ErrorTestCaseL_C* }>* %2, i32 0, i32 1
  %4 = load %T7_XCTestyycfU6_13ErrorTestCaseL_C*, %T7_XCTestyycfU6_13ErrorTestCaseL_C** %3, align 8
  tail call swiftcc void @"$s7_XCTestyycfU6_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_"(%T7_XCTestyycfU6_13ErrorTestCaseL_C* %4, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %1)
  ret void
}

define internal swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA"(%swift.opaque* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TR"(%swift.opaque* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

declare swiftcc void @"$s6XCTest16XCTAssertNoThrow__4file4lineyxyKXK_SSyXKs12StaticStringVSutlF"(i8*, %swift.opaque*, i8*, %swift.opaque*, i64, i64, i8, i64, %swift.type*) #0

declare swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_CIetMg_TC"(i8* noalias dereferenceable(32), i1) #0

define internal swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_TA"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %T7_XCTestyycfU5_13ErrorTestCaseL_C* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %T7_XCTestyycfU5_13ErrorTestCaseL_C* }>, <{ %swift.refcounted, %T7_XCTestyycfU5_13ErrorTestCaseL_C* }>* %2, i32 0, i32 1
  %4 = load %T7_XCTestyycfU5_13ErrorTestCaseL_C*, %T7_XCTestyycfU5_13ErrorTestCaseL_C** %3, align 8
  tail call swiftcc void @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFyyKXEfu_"(%T7_XCTestyycfU5_13ErrorTestCaseL_C* %4, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %1)
  ret void
}

define internal swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA.4"(%swift.opaque* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TR"(%swift.opaque* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

declare swiftcc void @"$s6XCTest20XCTAssertThrowsError__4file4line_yxyKXK_SSyXKs12StaticStringVSuys0D0_pXEtlF"(i8*, %swift.opaque*, i8*, %swift.opaque*, i64, i64, i8, i64, i8*, %swift.opaque*, %swift.type*) #0

define internal swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SSyKXEfu_TA"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %TSo7NSErrorC* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %TSo7NSErrorC* }>, <{ %swift.refcounted, %TSo7NSErrorC* }>* %2, i32 0, i32 1
  %4 = load %TSo7NSErrorC*, %TSo7NSErrorC** %3, align 8
  %5 = tail call swiftcc { i64, %swift.bridge* } @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SSyKXEfu_"(%TSo7NSErrorC* %4, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %1)
  ret { i64, %swift.bridge* } %5
}

define internal swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA.5"(%TSS* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TR"(%TSS* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TRTA.6"(%TSS* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSSs5Error_pIgozo_SSsAA_pIegrzo_TR"(%TSS* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #3

define internal swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SiyKXEfu1_TA"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %TSo7NSErrorC* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %TSo7NSErrorC* }>, <{ %swift.refcounted, %TSo7NSErrorC* }>* %2, i32 0, i32 1
  %4 = load %TSo7NSErrorC*, %TSo7NSErrorC** %3, align 8
  %5 = tail call swiftcc i64 @"$s7_XCTestyycfU5_13ErrorTestCaseL_C11test_throwsyyFys0B0_pXEfU_SiyKXEfu1_"(%TSo7NSErrorC* %4, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %1)
  ret i64 %5
}

define internal swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA"(%TSi* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.7"(%TSi* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #3

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.8"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sS2dSFsWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sS2dSFsWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSdSFsMc", %swift.type* @"$sSdN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$sS2dSFsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

declare swiftcc void @"$s6XCTest14XCTAssertEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlF"(i8*, %swift.opaque*, i8*, %swift.opaque*, %swift.opaque* noalias nocapture, i8*, %swift.opaque*, i64, i64, i8, i64, %swift.type*, i8**) #0

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.9"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.10"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

declare swiftcc void @"$s6XCTest17XCTAssertNotEqual__8accuracy_4file4lineyxyKXK_xyKXKxSSyXKs12StaticStringVSutSFRzlF"(i8*, %swift.opaque*, i8*, %swift.opaque*, %swift.opaque* noalias nocapture, i8*, %swift.opaque*, i64, i64, i8, i64, %swift.type*, i8**) #0

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.11"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.12"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.13"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TRTA.14"(%TSd* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSds5Error_pIgdzo_SdsAA_pIegrzo_TR"(%TSd* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TRTA"(%TSD* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TR"(%TSD* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TRTA.15"(%TSD* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSDySSSo12NSDictionaryCGs5Error_pIgozo_ACsAD_pIegrzo_TR"(%TSD* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSDySSSo12NSDictionaryCGSDyxq_GSQsSQR_rlWl"() #7 {
entry:
  %conditional.requirement.buffer = alloca [1 x i8**], align 8
  %0 = load i8**, i8*** @"$sSDySSSo12NSDictionaryCGSDyxq_GSQsSQR_rlWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSDySSSo12NSDictionaryCGMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @"$sSo12NSDictionaryCSo8NSObjectCSQ10ObjectiveCWl"() #6
  %6 = getelementptr inbounds [1 x i8**], [1 x i8**]* %conditional.requirement.buffer, i32 0, i32 0
  %7 = getelementptr inbounds i8**, i8*** %6, i32 0
  store i8** %5, i8*** %7, align 8
  %8 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSDyxq_GSQsSQR_rlMc", %swift.type* %3, i8*** %6) #3
  store atomic i8** %8, i8*** @"$sSDySSSo12NSDictionaryCGSDyxq_GSQsSQR_rlWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %9 = phi i8** [ %0, %entry ], [ %8, %cacheIsNull ]
  ret i8** %9
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSDySSSo12NSDictionaryCGMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSDySSSo12NSDictionaryCGML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call swiftcc %swift.metadata_response @"$sSo12NSDictionaryCMa"(i64 255) #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = extractvalue %swift.metadata_response %3, 1
  %6 = call swiftcc %swift.metadata_response @"$sSDMa"(i64 %0, %swift.type* @"$sSSN", %swift.type* %4, i8** @"$sSSSHsWP") #6
  %7 = extractvalue %swift.metadata_response %6, 0
  %8 = extractvalue %swift.metadata_response %6, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %is_complete, label %cont

is_complete:                                      ; preds = %cacheIsNull
  store atomic %swift.type* %7, %swift.type** @"$sSDySSSo12NSDictionaryCGML" release, align 8
  br label %cont

cont:                                             ; preds = %is_complete, %cacheIsNull, %entry
  %10 = phi %swift.type* [ %1, %entry ], [ %7, %is_complete ], [ %7, %cacheIsNull ]
  %11 = phi i64 [ 0, %entry ], [ %8, %cacheIsNull ], [ 0, %is_complete ]
  %12 = insertvalue %swift.metadata_response undef, %swift.type* %10, 0
  %13 = insertvalue %swift.metadata_response %12, i64 %11, 1
  ret %swift.metadata_response %13
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSo12NSDictionaryCMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSo12NSDictionaryCML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = load %objc_class*, %objc_class** @"OBJC_CLASS_REF_$_NSDictionary", align 8
  %4 = call %objc_class* @swift_getInitializedObjCClass(%objc_class* %3)
  %5 = call %swift.type* @swift_getObjCClassMetadata(%objc_class* %4) #6
  store atomic %swift.type* %5, %swift.type** @"$sSo12NSDictionaryCML" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi %swift.type* [ %1, %entry ], [ %5, %cacheIsNull ]
  %7 = insertvalue %swift.metadata_response undef, %swift.type* %6, 0
  %8 = insertvalue %swift.metadata_response %7, i64 0, 1
  ret %swift.metadata_response %8
}

; Function Attrs: nounwind readnone
declare %swift.type* @swift_getObjCClassMetadata(%objc_class*) #6

declare swiftcc %swift.metadata_response @"$sSDMa"(i64, %swift.type*, %swift.type*, i8**) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSo12NSDictionaryCSo8NSObjectCSQ10ObjectiveCWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSo12NSDictionaryCSo8NSObjectCSQ10ObjectiveCWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSo12NSDictionaryCMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSo8NSObjectCSQ10ObjectiveCMc", %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSo12NSDictionaryCSo8NSObjectCSQ10ObjectiveCWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

declare swiftcc %TSo12NSDictionaryC* @"$sSo12NSDictionaryC10FoundationE17dictionaryLiteralAByp_yptd_tcfC"(%swift.bridge*, %swift.type* swiftself) #0

declare swiftcc %swift.bridge* @"$sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfC"(%swift.bridge*, %swift.type*, %swift.type*, i8**) #0

define internal swiftcc void @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TRTA"(%TSD* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSD* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.16"(%TSD* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSDyS2SGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSD* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSDyS2SGSDyxq_GSQsSQR_rlWl"() #7 {
entry:
  %conditional.requirement.buffer = alloca [1 x i8**], align 8
  %0 = load i8**, i8*** @"$sSDyS2SGSDyxq_GSQsSQR_rlWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSDyS2SGMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = getelementptr inbounds [1 x i8**], [1 x i8**]* %conditional.requirement.buffer, i32 0, i32 0
  %6 = getelementptr inbounds i8**, i8*** %5, i32 0
  store i8** @"$sSSSQsWP", i8*** %6, align 8
  %7 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSDyxq_GSQsSQR_rlMc", %swift.type* %3, i8*** %5) #3
  store atomic i8** %7, i8*** @"$sSDyS2SGSDyxq_GSQsSQR_rlWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %8 = phi i8** [ %0, %entry ], [ %7, %cacheIsNull ]
  ret i8** %8
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSDyS2SGMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSDyS2SGML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call swiftcc %swift.metadata_response @"$sSDMa"(i64 %0, %swift.type* @"$sSSN", %swift.type* @"$sSSN", i8** @"$sSSSHsWP") #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = extractvalue %swift.metadata_response %3, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %is_complete, label %cont

is_complete:                                      ; preds = %cacheIsNull
  store atomic %swift.type* %4, %swift.type** @"$sSDyS2SGML" release, align 8
  br label %cont

cont:                                             ; preds = %is_complete, %cacheIsNull, %entry
  %7 = phi %swift.type* [ %1, %entry ], [ %4, %is_complete ], [ %4, %cacheIsNull ]
  %8 = phi i64 [ 0, %entry ], [ %5, %cacheIsNull ], [ 0, %is_complete ]
  %9 = insertvalue %swift.metadata_response undef, %swift.type* %7, 0
  %10 = insertvalue %swift.metadata_response %9, i64 %8, 1
  ret %swift.metadata_response %10
}

define internal swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA"(%TSa* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSa* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.17"(%TSa* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSa* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSaySSGSayxGSQsSQRzlWl"() #7 {
entry:
  %conditional.requirement.buffer = alloca [1 x i8**], align 8
  %0 = load i8**, i8*** @"$sSaySSGSayxGSQsSQRzlWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSaySSGMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = getelementptr inbounds [1 x i8**], [1 x i8**]* %conditional.requirement.buffer, i32 0, i32 0
  %6 = getelementptr inbounds i8**, i8*** %5, i32 0
  store i8** @"$sSSSQsWP", i8*** %6, align 8
  %7 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSayxGSQsSQRzlMc", %swift.type* %3, i8*** %5) #3
  store atomic i8** %7, i8*** @"$sSaySSGSayxGSQsSQRzlWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %8 = phi i8** [ %0, %entry ], [ %7, %cacheIsNull ]
  ret i8** %8
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSaySSGMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSaySSGML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call swiftcc %swift.metadata_response @"$sSaMa"(i64 %0, %swift.type* @"$sSSN") #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = extractvalue %swift.metadata_response %3, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %is_complete, label %cont

is_complete:                                      ; preds = %cacheIsNull
  store atomic %swift.type* %4, %swift.type** @"$sSaySSGML" release, align 8
  br label %cont

cont:                                             ; preds = %is_complete, %cacheIsNull, %entry
  %7 = phi %swift.type* [ %1, %entry ], [ %4, %is_complete ], [ %4, %cacheIsNull ]
  %8 = phi i64 [ 0, %entry ], [ %5, %cacheIsNull ], [ 0, %is_complete ]
  %9 = insertvalue %swift.metadata_response undef, %swift.type* %7, 0
  %10 = insertvalue %swift.metadata_response %9, i64 %8, 1
  ret %swift.metadata_response %10
}

define internal swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.18"(%TSa* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSa* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TRTA.19"(%TSa* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSaySSGs5Error_pIgozo_AAsAB_pIegrzo_TR"(%TSa* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA"(%TSiSg* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TR"(%TSiSg* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA.20"(%TSiSg* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TR"(%TSiSg* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSiSgxSgSQsSQRzlWl"() #7 {
entry:
  %conditional.requirement.buffer = alloca [1 x i8**], align 8
  %0 = load i8**, i8*** @"$sSiSgxSgSQsSQRzlWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSiSgMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = getelementptr inbounds [1 x i8**], [1 x i8**]* %conditional.requirement.buffer, i32 0, i32 0
  %6 = getelementptr inbounds i8**, i8*** %5, i32 0
  store i8** @"$sSiSQsWP", i8*** %6, align 8
  %7 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sxSgSQsSQRzlMc", %swift.type* %3, i8*** %5) #3
  store atomic i8** %7, i8*** @"$sSiSgxSgSQsSQRzlWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %8 = phi i8** [ %0, %entry ], [ %7, %cacheIsNull ]
  ret i8** %8
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden swiftcc %swift.metadata_response @"$sSiSgMa"(i64) #7 {
entry:
  %1 = load %swift.type*, %swift.type** @"$sSiSgML", align 8
  %2 = icmp eq %swift.type* %1, null
  br i1 %2, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %3 = call swiftcc %swift.metadata_response @"$sSqMa"(i64 %0, %swift.type* @"$sSiN") #6
  %4 = extractvalue %swift.metadata_response %3, 0
  %5 = extractvalue %swift.metadata_response %3, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %is_complete, label %cont

is_complete:                                      ; preds = %cacheIsNull
  store atomic %swift.type* %4, %swift.type** @"$sSiSgML" release, align 8
  br label %cont

cont:                                             ; preds = %is_complete, %cacheIsNull, %entry
  %7 = phi %swift.type* [ %1, %entry ], [ %4, %is_complete ], [ %4, %cacheIsNull ]
  %8 = phi i64 [ 0, %entry ], [ %5, %cacheIsNull ], [ 0, %is_complete ]
  %9 = insertvalue %swift.metadata_response undef, %swift.type* %7, 0
  %10 = insertvalue %swift.metadata_response %9, i64 %8, 1
  ret %swift.metadata_response %10
}

declare swiftcc %swift.metadata_response @"$sSqMa"(i64, %swift.type*) #0

define internal swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA.21"(%TSiSg* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TR"(%TSiSg* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TRTA.22"(%TSiSg* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSiSgs5Error_pIgdzo_AAsAB_pIegrzo_TR"(%TSiSg* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.23"(%TSi* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.24"(%TSi* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.25"(%TSi* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TRTA.26"(%TSi* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$sSis5Error_pIgdzo_SisAA_pIegrzo_TR"(%TSi* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

define internal swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA.27"(%swift.opaque* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TR"(%swift.opaque* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

declare swiftcc void @"$s6XCTest7XCTFail_4file4lineySS_s12StaticStringVSutF"(i64, %swift.bridge*, i64, i64, i8, i64) #0

define internal swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFyyKXEfu_TA"(%swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %2 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %TSo11NSExceptionC* }>*
  %3 = getelementptr inbounds <{ %swift.refcounted, %TSo11NSExceptionC* }>, <{ %swift.refcounted, %TSo11NSExceptionC* }>* %2, i32 0, i32 1
  %4 = load %TSo11NSExceptionC*, %TSo11NSExceptionC** %3, align 8
  tail call swiftcc void @"$s7_XCTestyycfU_17ExceptionTestCaseL_C26test_raisesDuringAssertionyyFyyKXEfu_"(%TSo11NSExceptionC* %4, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %1)
  ret void
}

define internal swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TRTA.28"(%swift.opaque* noalias nocapture sret, %swift.refcounted* swiftself, %swift.error** noalias nocapture swifterror dereferenceable(8)) #0 {
entry:
  %3 = bitcast %swift.refcounted* %1 to <{ %swift.refcounted, %swift.noescape.function }>*
  %4 = getelementptr inbounds <{ %swift.refcounted, %swift.noescape.function }>, <{ %swift.refcounted, %swift.noescape.function }>* %3, i32 0, i32 1
  %.fn = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 0
  %5 = load i8*, i8** %.fn, align 8
  %.data = getelementptr inbounds %swift.noescape.function, %swift.noescape.function* %4, i32 0, i32 1
  %6 = load %swift.opaque*, %swift.opaque** %.data, align 8
  tail call swiftcc void @"$ss5Error_pIgzo_ytsAA_pIegrzo_TR"(%swift.opaque* noalias nocapture sret %0, i8* %5, %swift.opaque* %6, %swift.refcounted* swiftself undef, %swift.error** noalias nocapture swifterror dereferenceable(8) %2)
  ret void
}

; Function Attrs: noinline
declare swiftcc void @"$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_A2HSus6UInt32VtF"(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #4

declare swiftcc void @"$s14StdlibUnittest11expectEqual___10stackTrace9showFrame4file4lineyx_xSSyXKAA14SourceLocStackVSbSSSutSQRzlF"(%swift.opaque* noalias nocapture, %swift.opaque* noalias nocapture, i8*, %swift.opaque*, %swift.opaque* noalias nocapture, i1, i64, %swift.bridge*, i64, %swift.type*, i8**) #0

declare swiftcc i1 @"$sSZsE8isSignedSbvgZ"(%swift.type*, i8**, %swift.type* swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$ss4Int8VABSZsWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$ss4Int8VABSZsWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$ss4Int8VSZsMc", %swift.type* @"$ss4Int8VN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$ss4Int8VABSZsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sS2iSZsWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sS2iSZsWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSiSZsMc", %swift.type* @"$sSiN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$sS2iSZsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

declare swiftcc i64 @"$ss17FixedWidthIntegerPsE03bitB0Sivg"(%swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$ss4Int8VABs17FixedWidthIntegersWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$ss4Int8VABs17FixedWidthIntegersWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$ss4Int8Vs17FixedWidthIntegersMc", %swift.type* @"$ss4Int8VN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$ss4Int8VABs17FixedWidthIntegersWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %Ts4Int8V* @"$ss4Int8VWOh"(%Ts4Int8V*) #9 {
entry:
  ret %Ts4Int8V* %0
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sS2is17FixedWidthIntegersWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sS2is17FixedWidthIntegersWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSis17FixedWidthIntegersMc", %swift.type* @"$sSiN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$sS2is17FixedWidthIntegersWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

; Function Attrs: noinline nounwind
define linkonce_odr hidden %TSi* @"$sSiWOh"(%TSi*) #9 {
entry:
  ret %TSi* %0
}

declare swiftcc void @"$ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufC"(%swift.opaque* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, %swift.type*, i8**, i8**, %swift.type* swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sS2iSzsWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sS2iSzsWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSiSzsMc", %swift.type* @"$sSiN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$sS2iSzsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

declare swiftcc void @"$s14StdlibUnittest11expectFalse__10stackTrace9showFrame4file4lineySb_SSyXKAA14SourceLocStackVSbSSSutF"(i1, i8*, %swift.opaque*, %swift.opaque* noalias nocapture, i1, i64, %swift.bridge*, i64) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$ss4Int8VABSzsWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$ss4Int8VABSzsWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$ss4Int8VSzsMc", %swift.type* @"$ss4Int8VN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$ss4Int8VABSzsWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

define private swiftcc void @objectdestroy(%swift.refcounted* swiftself) #0 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %TSo6XCTestC* }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, %TSo6XCTestC* }>, <{ %swift.refcounted, %TSo6XCTestC* }>* %1, i32 0, i32 1
  %toDestroy = load %TSo6XCTestC*, %TSo6XCTestC** %2, align 8
  %3 = bitcast %TSo6XCTestC* %toDestroy to i8*
  call void @llvm.objc.release(i8* %3)
  call void @swift_deallocObject(%swift.refcounted* %0, i64 24, i64 7)
  ret void
}

; Function Attrs: nounwind
declare void @swift_deallocObject(%swift.refcounted*, i64, i64) #3

; Function Attrs: nounwind
declare %swift.refcounted* @swift_allocObject(%swift.type*, i64, i64) #3

define internal swiftcc void @"$sSo6XCTestC3runyyFTOTA"(%swift.refcounted* swiftself) #0 {
entry:
  %1 = bitcast %swift.refcounted* %0 to <{ %swift.refcounted, %TSo6XCTestC* }>*
  %2 = getelementptr inbounds <{ %swift.refcounted, %TSo6XCTestC* }>, <{ %swift.refcounted, %TSo6XCTestC* }>* %1, i32 0, i32 1
  %3 = load %TSo6XCTestC*, %TSo6XCTestC** %2, align 8
  tail call swiftcc void @"$sSo6XCTestC3runyyFTO"(%TSo6XCTestC* swiftself %3)
  ret void
}

declare swiftcc i1 @"$sSTsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF"(%swift.opaque* noalias nocapture, %swift.type*, %swift.type*, i8**, i8**, i8**, %swift.opaque* noalias nocapture swiftself) #0

; Function Attrs: noinline nounwind
define linkonce_odr hidden %TSS* @"$sSSWOh"(%TSS*) #9 {
entry:
  %._guts = getelementptr inbounds %TSS, %TSS* %0, i32 0, i32 0
  %._guts._object = getelementptr inbounds %Ts11_StringGutsV, %Ts11_StringGutsV* %._guts, i32 0, i32 0
  %._guts._object._object = getelementptr inbounds %Ts13_StringObjectV, %Ts13_StringObjectV* %._guts._object, i32 0, i32 1
  %toDestroy = load %swift.bridge*, %swift.bridge** %._guts._object._object, align 8
  call void @swift_bridgeObjectRelease(%swift.bridge* %toDestroy) #3
  ret %TSS* %0
}

; Function Attrs: nounwind readnone
declare swiftcc %swift.metadata_response @swift_getForeignTypeMetadata(i64, %swift.type*) #6

; Function Attrs: nounwind
define internal swiftcc i8** @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCSYWb"(%swift.type* %XCUIElement.KeyModifierFlags, %swift.type* %XCUIElement.KeyModifierFlags1, i8** %XCUIElement.KeyModifierFlags.OptionSet) #11 {
entry:
  %0 = call i8** @"$sSo20XCUIKeyModifierFlagsVABSYSCWl"() #6
  ret i8** %0
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSo20XCUIKeyModifierFlagsVABSYSCWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSo20XCUIKeyModifierFlagsVABSYSCWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* bitcast ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSYSCMc" to %swift.protocol_conformance_descriptor*), %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSo20XCUIKeyModifierFlagsVABSYSCWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

; Function Attrs: nounwind
define internal swiftcc i8** @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCs0E7AlgebraPWb"(%swift.type* %XCUIElement.KeyModifierFlags, %swift.type* %XCUIElement.KeyModifierFlags1, i8** %XCUIElement.KeyModifierFlags.OptionSet) #11 {
entry:
  %0 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs10SetAlgebraSCWl"() #6
  ret i8** %0
}

; Function Attrs: nounwind
define internal swiftcc i8** @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCSQWb"(%swift.type* %XCUIElement.KeyModifierFlags, %swift.type* %XCUIElement.KeyModifierFlags1, i8** %XCUIElement.KeyModifierFlags.SetAlgebra) #11 {
entry:
  %0 = call i8** @"$sSo20XCUIKeyModifierFlagsVABSQSCWl"() #6
  ret i8** %0
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSo20XCUIKeyModifierFlagsVABSQSCWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSo20XCUIKeyModifierFlagsVABSQSCWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* bitcast ({ i64, i64, i64, i32, i64, i32, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSQSCMc" to %swift.protocol_conformance_descriptor*), %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSo20XCUIKeyModifierFlagsVABSQSCWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

; Function Attrs: nounwind
define internal swiftcc i8** @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCs25ExpressibleByArrayLiteralPWb"(%swift.type* %XCUIElement.KeyModifierFlags, %swift.type* %XCUIElement.KeyModifierFlags1, i8** %XCUIElement.KeyModifierFlags.SetAlgebra) #11 {
entry:
  %0 = call i8** @"$sSo20XCUIKeyModifierFlagsVABs25ExpressibleByArrayLiteralSCWl"() #6
  ret i8** %0
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSo20XCUIKeyModifierFlagsVABs25ExpressibleByArrayLiteralSCWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSo20XCUIKeyModifierFlagsVABs25ExpressibleByArrayLiteralSCWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* bitcast ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMc" to %swift.protocol_conformance_descriptor*), %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSo20XCUIKeyModifierFlagsVABs25ExpressibleByArrayLiteralSCWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

declare swiftcc void @"$ss10SetAlgebraPsE8subtractyyxF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* nocapture swiftself) #0

declare swiftcc void @"$ss10SetAlgebraPsEyxqd__ncSTRd__7ElementQyd__ACRtzlufC"(%swift.opaque* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, %swift.type*, i8**, i8**, %swift.type* swiftself) #0

declare swiftcc i1 @"$ss10SetAlgebraPsE7isEmptySbvg"(%swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc i1 @"$ss10SetAlgebraPsE10isSuperset2ofSbx_tF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc i1 @"$ss10SetAlgebraPsE10isDisjoint4withSbx_tF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc i1 @"$ss10SetAlgebraPsE8isSubset2ofSbx_tF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc void @"$ss10SetAlgebraPsE11subtractingyxxF"(%swift.opaque* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, i8**, %swift.opaque* nocapture swiftself) #0

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call swiftcc %swift.metadata_response @"$sSo20XCUIKeyModifierFlagsVMa"(i64 255) #6
  %3 = extractvalue %swift.metadata_response %2, 0
  %4 = extractvalue %swift.metadata_response %2, 1
  %5 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* bitcast ({ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMc" to %swift.protocol_conformance_descriptor*), %swift.type* %3, i8*** undef) #3
  store atomic i8** %5, i8*** @"$sSo20XCUIKeyModifierFlagsVABs9OptionSetSCWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi i8** [ %0, %entry ], [ %5, %cacheIsNull ]
  ret i8** %6
}

; Function Attrs: noinline nounwind readnone
define linkonce_odr hidden i8** @"$sS2us17FixedWidthIntegersWl"() #7 {
entry:
  %0 = load i8**, i8*** @"$sS2us17FixedWidthIntegersWL", align 8
  %1 = icmp eq i8** %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call i8** @swift_getWitnessTable(%swift.protocol_conformance_descriptor* @"$sSus17FixedWidthIntegersMc", %swift.type* @"$sSuN", i8*** undef) #3
  store atomic i8** %2, i8*** @"$sS2us17FixedWidthIntegersWL" release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %3 = phi i8** [ %0, %entry ], [ %2, %cacheIsNull ]
  ret i8** %3
}

declare swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, i8**, %swift.opaque* nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, i8**, %swift.opaque* nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF"(%TSq.3* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPs7ElementQzRszrlE6removeyxSgxF"(%TSq.3* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* nocapture swiftself) #0

declare swiftcc i1 @"$ss9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF"(%swift.opaque* noalias nocapture, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPsE19symmetricDifferenceyxxF"(%swift.opaque* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPsE12intersectionyxxF"(%swift.opaque* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPsE5unionyxxF"(%swift.opaque* noalias nocapture sret, %swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc i1 @"$ss9OptionSetPs7ElementQzRszrlE8containsySbxF"(%swift.opaque* noalias nocapture, %swift.type*, i8**, %swift.opaque* noalias nocapture swiftself) #0

declare swiftcc void @"$ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfC"(%swift.opaque* noalias nocapture sret, %swift.type*, i8**, i8**, %swift.type* swiftself) #0

declare swiftcc i1 @"$ss2eeoiySbx_xtSYRzSQ8RawValueRpzlF"(%swift.opaque* noalias nocapture, %swift.opaque* noalias nocapture, %swift.type*, i8**, i8**) #0

; Function Attrs: alwaysinline
define private void @coro.devirt.trigger(i8*) #12 {
entry:
  ret void
}

attributes #0 = { "frame-pointer"="all" "target-cpu"="core2" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { noinline "frame-pointer"="all" "target-cpu"="core2" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #5 = { noinline nounwind readnone "frame-pointer"="none" }
attributes #6 = { nounwind readnone }
attributes #7 = { noinline nounwind readnone "frame-pointer"="none" "target-cpu"="core2" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #8 = { nounwind readonly }
attributes #9 = { noinline nounwind }
attributes #10 = { noinline nounwind "frame-pointer"="all" "target-cpu"="core2" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #11 = { nounwind "frame-pointer"="all" "target-cpu"="core2" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" }
attributes #12 = { alwaysinline }
attributes #13 = { noinline }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7, !8}
!swift.module.flags = !{!9}
!llvm.asan.globals = !{!10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!llvm.linker.options = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 10, i32 15]}
!1 = !{i32 1, !"Objective-C Version", i32 2}
!2 = !{i32 1, !"Objective-C Image Info Version", i32 0}
!3 = !{i32 1, !"Objective-C Image Info Section", !"__DATA,__objc_imageinfo,regular,no_dead_strip"}
!4 = !{i32 4, !"Objective-C Garbage Collection", i32 83953408}
!5 = !{i32 1, !"Objective-C Class Properties", i32 64}
!6 = !{i32 1, !"wchar_size", i32 4}
!7 = !{i32 7, !"PIC Level", i32 2}
!8 = !{i32 1, !"Swift Version", i32 7}
!9 = !{!"standard-library", i1 false}
!10 = !{<{ [23 x i8], i8 }>* @"symbolic So17XCTestObservation_p", null, null, i1 false, i1 true}
!11 = !{<{ [27 x i8], i8 }>* @"symbolic SaySo17XCTestObservation_pG", null, null, i1 false, i1 true}
!12 = !{<{ i8, i64, [29 x i8], i8 }>* @"symbolic _____ySaySo17XCTestObservation_pGG s16IndexingIteratorV", null, null, i1 false, i1 true}
!13 = !{<{ i32, i64, i64 }>* @"$s7_XCTestMXM", null, null, i1 false, i1 true}
!14 = !{<{ [12 x i8], i8 }>* @"symbolic So8NSObjectC", null, null, i1 false, i1 true}
!15 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTest26FailureDescriptionObserverCMn", null, null, i1 false, i1 true}
!16 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTest26FailureDescriptionObserverC", null, null, i1 false, i1 true}
!17 = !{<{ [4 x i8], i8 }>* @"symbolic SSSg", null, null, i1 false, i1 true}
!18 = !{[19 x i8]* @22, null, null, i1 false, i1 true}
!19 = !{{ i64, i64, i16, i16, i32, i32, i64, i64 }* @"$s7_XCTest26FailureDescriptionObserverCMF", null, null, i1 false, i1 true}
!20 = !{<{ i32, i64 }>* @"$s7_XCTestMXX", null, null, i1 false, i1 true}
!21 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU_MXX", null, null, i1 false, i1 true}
!22 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMXX", null, null, i1 false, i1 true}
!23 = !{<{ [15 x i8], i8 }>* @"symbolic So10XCTestCaseC", null, null, i1 false, i1 true}
!24 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMn", null, null, i1 false, i1 true}
!25 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU_17ExceptionTestCaseL_C", null, null, i1 false, i1 true}
!26 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU_17ExceptionTestCaseL_CMF", null, null, i1 false, i1 true}
!27 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU0_MXX", null, null, i1 false, i1 true}
!28 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMXX", null, null, i1 false, i1 true}
!29 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMn", null, null, i1 false, i1 true}
!30 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU0_19AssertEqualTestCaseL_C", null, null, i1 false, i1 true}
!31 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU0_19AssertEqualTestCaseL_CMF", null, null, i1 false, i1 true}
!32 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU1_MXX", null, null, i1 false, i1 true}
!33 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMXX", null, null, i1 false, i1 true}
!34 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMn", null, null, i1 false, i1 true}
!35 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_C", null, null, i1 false, i1 true}
!36 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU1_27AssertEqualOptionalTestCaseL_CMF", null, null, i1 false, i1 true}
!37 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU2_MXX", null, null, i1 false, i1 true}
!38 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMXX", null, null, i1 false, i1 true}
!39 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMn", null, null, i1 false, i1 true}
!40 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU2_24AssertEqualArrayTestCaseL_C", null, null, i1 false, i1 true}
!41 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU2_24AssertEqualArrayTestCaseL_CMF", null, null, i1 false, i1 true}
!42 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU3_MXX", null, null, i1 false, i1 true}
!43 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMXX", null, null, i1 false, i1 true}
!44 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMn", null, null, i1 false, i1 true}
!45 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_C", null, null, i1 false, i1 true}
!46 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU3_29AssertEqualDictionaryTestCaseL_CMF", null, null, i1 false, i1 true}
!47 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU4_MXX", null, null, i1 false, i1 true}
!48 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMXX", null, null, i1 false, i1 true}
!49 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMn", null, null, i1 false, i1 true}
!50 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU4_19AssertEqualTestCaseL_C", null, null, i1 false, i1 true}
!51 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU4_19AssertEqualTestCaseL_CMF", null, null, i1 false, i1 true}
!52 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU5_MXX", null, null, i1 false, i1 true}
!53 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMXX", null, null, i1 false, i1 true}
!54 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMn", null, null, i1 false, i1 true}
!55 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU5_13ErrorTestCaseL_C", null, null, i1 false, i1 true}
!56 = !{<{ [2 x i8], i8 }>* @"symbolic Sb", null, null, i1 false, i1 true}
!57 = !{[8 x i8]* @47, null, null, i1 false, i1 true}
!58 = !{<{ [2 x i8], i8 }>* @"symbolic Si", null, null, i1 false, i1 true}
!59 = !{[10 x i8]* @48, null, null, i1 false, i1 true}
!60 = !{{ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU5_13ErrorTestCaseL_CMF", null, null, i1 false, i1 true}
!61 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU6_MXX", null, null, i1 false, i1 true}
!62 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMXX", null, null, i1 false, i1 true}
!63 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMn", null, null, i1 false, i1 true}
!64 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU6_13ErrorTestCaseL_C", null, null, i1 false, i1 true}
!65 = !{{ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU6_13ErrorTestCaseL_CMF", null, null, i1 false, i1 true}
!66 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU7_MXX", null, null, i1 false, i1 true}
!67 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMXX", null, null, i1 false, i1 true}
!68 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMn", null, null, i1 false, i1 true}
!69 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU7_13ErrorTestCaseL_C", null, null, i1 false, i1 true}
!70 = !{{ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU7_13ErrorTestCaseL_CMF", null, null, i1 false, i1 true}
!71 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU8_MXX", null, null, i1 false, i1 true}
!72 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMXX", null, null, i1 false, i1 true}
!73 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor, %swift.method_descriptor }>* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMn", null, null, i1 false, i1 true}
!74 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU8_13ErrorTestCaseL_C", null, null, i1 false, i1 true}
!75 = !{{ i64, i64, i16, i16, i32, i32, i64, i64, i32, i64, i64 }* @"$s7_XCTestyycfU8_13ErrorTestCaseL_CMF", null, null, i1 false, i1 true}
!76 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU9_MXX", null, null, i1 false, i1 true}
!77 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMXX", null, null, i1 false, i1 true}
!78 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32 }>* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMn", null, null, i1 false, i1 true}
!79 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU9_19RunActivityTestCaseL_C", null, null, i1 false, i1 true}
!80 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU9_19RunActivityTestCaseL_CMF", null, null, i1 false, i1 true}
!81 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU10_MXX", null, null, i1 false, i1 true}
!82 = !{<{ i32, i64 }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMXX", null, null, i1 false, i1 true}
!83 = !{<{ i32, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, %swift.method_descriptor }>* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMn", null, null, i1 false, i1 true}
!84 = !{<{ i8, i64, i8 }>* @"symbolic _____ 7_XCTestyycfU10_15TypeKeyTestCaseL_C", null, null, i1 false, i1 true}
!85 = !{{ i64, i64, i16, i16, i32 }* @"$s7_XCTestyycfU10_15TypeKeyTestCaseL_CMF", null, null, i1 false, i1 true}
!86 = !{<{ [20 x i8], i8 }>* @"symbolic So15XCUIApplicationC", null, null, i1 false, i1 true}
!87 = !{<{ [15 x i8], i8 }>* @"symbolic So10XCTContextC", null, null, i1 false, i1 true}
!88 = !{<{ [11 x i8], i8 }>* @"symbolic So7NSErrorC", null, null, i1 false, i1 true}
!89 = !{<{ [13 x i8], i8 }>* @"symbolic So7NSErrorCSg", null, null, i1 false, i1 true}
!90 = !{<{ [23 x i8], i8 }>* @"symbolic SDySSSo12NSDictionaryCG", null, null, i1 false, i1 true}
!91 = !{<{ [21 x i8], i8 }>* @"symbolic SS_So12NSDictionaryCt", null, null, i1 false, i1 true}
!92 = !{<{ [6 x i8], i8 }>* @"symbolic yp_ypt", null, null, i1 false, i1 true}
!93 = !{<{ [17 x i8], i8 }>* @"symbolic So12NSDictionaryC", null, null, i1 false, i1 true}
!94 = !{<{ [7 x i8], i8 }>* @"symbolic SDyS2SG", null, null, i1 false, i1 true}
!95 = !{<{ [6 x i8], i8 }>* @"symbolic SS_SSt", null, null, i1 false, i1 true}
!96 = !{<{ [6 x i8], i8 }>* @"symbolic SaySSG", null, null, i1 false, i1 true}
!97 = !{<{ [4 x i8], i8 }>* @"symbolic SiSg", null, null, i1 false, i1 true}
!98 = !{<{ [16 x i8], i8 }>* @"symbolic So11NSExceptionC", null, null, i1 false, i1 true}
!99 = !{<{ [10 x i8], i8 }>* @"symbolic So6XCTestC", null, null, i1 false, i1 true}
!100 = !{{ i32, i32, i32, i64 }* @"\01l__swift5_reflection_descriptor", null, null, i1 false, i1 true}
!101 = !{<{ i32, i64, i64 }>* @"$sSoMXM", null, null, i1 false, i1 true}
!102 = !{<{ i32, i64, i64, i64, i64, i32, i32, i64 }>* @"$sSo20XCUIKeyModifierFlagsVMn", null, null, i1 false, i1 true}
!103 = !{<{ i8, i64, i8 }>* @"symbolic _____ So20XCUIKeyModifierFlagsV", null, null, i1 false, i1 true}
!104 = !{{ i64, i32, i32, i32, i32 }* @"$sSo20XCUIKeyModifierFlagsVMB", null, null, i1 false, i1 true}
!105 = !{<{ [2 x i8], i8 }>* @"symbolic Su", null, null, i1 false, i1 true}
!106 = !{[9 x i8]* @75, null, null, i1 false, i1 true}
!107 = !{{ i64, i32, i16, i16, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVMF", null, null, i1 false, i1 true}
!108 = !{<{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs9OptionSetSCSY", null, null, i1 false, i1 true}
!109 = !{<{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs9OptionSetSCs0E7Algebra", null, null, i1 false, i1 true}
!110 = !{<{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs10SetAlgebraSCSQ", null, null, i1 false, i1 true}
!111 = !{<{ i8, i8, i64, i8 }>* @"associated conformance So20XCUIKeyModifierFlagsVs10SetAlgebraSCs25ExpressibleByArrayLiteral", null, null, i1 false, i1 true}
!112 = !{<{ [31 x i8], i8 }>* @"symbolic $ss25ExpressibleByArrayLiteralP", null, null, i1 false, i1 true}
!113 = !{[20 x i8]* @76, null, null, i1 false, i1 true}
!114 = !{{ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMA", null, null, i1 false, i1 true}
!115 = !{<{ i32, i64, i64 }>* @"$s6XCTestMXM", null, null, i1 false, i1 true}
!116 = !{{ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs25ExpressibleByArrayLiteralSCMc", null, null, i1 false, i1 true}
!117 = !{{ i64, i64, i64, i32, i64, i32, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSQSCMc", null, null, i1 false, i1 true}
!118 = !{<{ [4 x i8], i8 }>* @"symbolic $sSY", null, null, i1 false, i1 true}
!119 = !{[9 x i8]* @79, null, null, i1 false, i1 true}
!120 = !{{ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSYSCMA", null, null, i1 false, i1 true}
!121 = !{{ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVSYSCMc", null, null, i1 false, i1 true}
!122 = !{<{ [14 x i8], i8 }>* @"symbolic $ss9OptionSetP", null, null, i1 false, i1 true}
!123 = !{[8 x i8]* @81, null, null, i1 false, i1 true}
!124 = !{{ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMA", null, null, i1 false, i1 true}
!125 = !{{ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs9OptionSetSCMc", null, null, i1 false, i1 true}
!126 = !{<{ [16 x i8], i8 }>* @"symbolic $ss10SetAlgebraP", null, null, i1 false, i1 true}
!127 = !{{ i64, i64, i32, i32, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMA", null, null, i1 false, i1 true}
!128 = !{{ i64, i64, i64, i32, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i16, i16, i64, i64 }* @"$sSo20XCUIKeyModifierFlagsVs10SetAlgebraSCMc", null, null, i1 false, i1 true}
!129 = !{[5 x i64]* @"\01l_protocol_conformances", null, null, i1 false, i1 true}
!130 = !{[14 x %swift.type_metadata_record]* @"\01l_type_metadata_table", null, null, i1 false, i1 true}
!131 = !{[13 x i8*]* @objc_classes, null, null, i1 false, i1 true}
!132 = !{[44 x i8*]* @llvm.used, null, null, i1 false, i1 true}
!133 = !{[113 x i8*]* @llvm.compiler.used, null, null, i1 false, i1 true}
!134 = !{!"-lswiftXCTest"}
!135 = !{!"-lswiftCore"}
!136 = !{!"-framework", !"XCTest"}
!137 = !{!"-lswiftAppKit"}
!138 = !{!"-lswiftSwiftOnoneSupport"}
!139 = !{!"-lswiftFoundation"}
!140 = !{!"-lswiftObjectiveC"}
!141 = !{!"-lswiftDarwin"}
!142 = !{!"-framework", !"Foundation"}
!143 = !{!"-lswiftCoreFoundation"}
!144 = !{!"-framework", !"CoreFoundation"}
!145 = !{!"-lswiftDispatch"}
!146 = !{!"-framework", !"ApplicationServices"}
!147 = !{!"-lswiftCoreGraphics"}
!148 = !{!"-framework", !"CoreGraphics"}
!149 = !{!"-lswiftIOKit"}
!150 = !{!"-framework", !"IOKit"}
!151 = !{!"-framework", !"ColorSync"}
!152 = !{!"-framework", !"ImageIO"}
!153 = !{!"-framework", !"CoreServices"}
!154 = !{!"-framework", !"Security"}
!155 = !{!"-framework", !"CFNetwork"}
!156 = !{!"-framework", !"DiskArbitration"}
!157 = !{!"-framework", !"CoreText"}
!158 = !{!"-lswiftXPC"}
!159 = !{!"-framework", !"AppKit"}
!160 = !{!"-lswiftCoreData"}
!161 = !{!"-framework", !"CoreData"}
!162 = !{!"-framework", !"OpenGL"}
!163 = !{!"-lswiftQuartzCore"}
!164 = !{!"-framework", !"QuartzCore"}
!165 = !{!"-framework", !"CoreVideo"}
!166 = !{!"-framework", !"IOSurface"}
!167 = !{!"-lswiftMetal"}
!168 = !{!"-framework", !"Metal"}
!169 = !{!"-lswiftCoreImage"}
!170 = !{!"-framework", !"CoreImage"}
!171 = !{!"-lswiftStdlibUnittest"}
!172 = !{!"-lswiftSwiftPrivateThreadExtras"}
!173 = !{!"-lswiftSwiftPrivateLibcExtras"}
!174 = !{!"-lswiftSwiftPrivate"}
!175 = !{!"-lobjc"}
!176 = !{!"-lswiftCompatibility50"}
!177 = !{!"-lswiftCompatibilityDynamicReplacements"}
!178 = !{}
!179 = !{i64 96}
